{"authors": "Lu Xu; Zhanming Jie; Wei Lu; Bing Lidong", "pub_date": "", "title": "Better Feature Integration for Named Entity Recognition", "abstract": "It has been shown that named entity recognition (NER) could benefit from incorporating the long-distance structured information captured by dependency trees. We believe this is because both types of features -the contextual information captured by the linear sequences and the structured information captured by the dependency trees may complement each other. However, existing approaches largely focused on stacking the LSTM and graph neural networks such as graph convolutional networks (GCNs) for building improved NER models, where the exact interaction mechanism between the two different types of features is not very clear, and the performance gain does not appear to be significant. In this work, we propose a simple and robust solution to incorporate both types of features with our Synergized-LSTM (Syn-LSTM), which clearly captures how the two types of features interact. We conduct extensive experiments on several standard datasets across four languages. The results demonstrate that the proposed model achieves better performance than previous approaches while requiring fewer parameters. Our further analysis demonstrates that our model can capture longer dependencies compared with strong baselines. 1   ", "sections": [{"heading": "Introduction", "text": "Named entity recognition (NER) is one of the most fundamental and important tasks in natural language processing (NLP). While the literature (Peters et al., 2018;Akbik et al., 2018;Devlin et al., 2019) largely focuses on training deep language models to improve the contextualized word representations, previous studies show that the structured information such as interactions between non-adjacent words can also be important for NER (Finkel et al., 2005;Jie et al., 2017;Aguilar and Solorio, 2019).\nHowever, sequence models such as bidirectional LSTM (Hochreiter and Schmidhuber, 1997) are not able to fully capture the long-range dependencies (Bengio, 2009). For instance, Figure 1 (top) shows one type of structured information in NER. The words \"Precision Castparts Corp.\" can be easily inferred as ORGANIZATION by its context (i.e., Corp.). However, the second entity \"PCP\" could be misclassified as a PRODUCT entity if a model relies more on the context \"begin trading with\" but ignores the hidden information that \"PCP\" is the symbol of \"Precision Castparts Corp.\".\nPrevious research works (Li et al., 2017;Jie and Lu, 2019;Wang et al., 2019) have been using the parse trees (Chomsky, 1956(Chomsky, , 1969Sandra and Taft, 2014) to incorporate such structured information. Figure 1 (Dependency Path) shows that the first entity can be connected to the second entity following the dependency tree with 5 hops. Incorporating the dependency information can be done with graph neural networks (GNNs) such as graph convolutional networks (GCNs) (Kipf and Welling, 2017). However, simply stacking the LSTM and GCN architectures for NER can only provide us with modest improvements; sometimes, it decreases performance (Jie and Lu, 2019). Based on the depen-dency path in Figure 1, it requires a 5-layer GCN to capture the connections between these two entities. However, deep GCN architectures often face training difficulties, which cause a performance drop (Hamilton et al., 2017b;Kipf and Welling, 2017). Directly stacking GCN and LSTM has difficulties in modeling the interaction between dependency trees and contextual information.\nTo address the above limitations, we propose the Synergized-LSTM (Syn-LSTM), a new recurrent neural network architecture that considers an additional graph-encoded representation to update the memory and hidden states, as shown in Figure 2. More specifically, the graph-encoded representation for each word can be obtained with GCNs. Our proposed Syn-LSTM allows the cell to receive the structured information from the graph-encoded representation. With the newly designed gating mechanism, our model is able to make independent assessments on the amounts of information to be retrieved from the word representation and the graph-encoded representation respectively. Such a mechanism allows for better integration of both contextual and structured information.\nOur contributions can be summarized as:\n\u2022 We propose a simple and robust Syn-LSTM model to better incorporate the structured information conveyed by dependency trees. The output of the Syn-LSTM cell is jointly determined by both contextual and structured information. We adopt the classic conditional random fields (CRF) (Lafferty et al., 2001) on top of the Syn-LSTM for NER.\n\u2022 We conduct extensive experiments on several standard datasets across four languages. The proposed model significantly outperforms previous approaches on these datasets.\n\u2022 We show that the proposed model can capture long-distance interactions between entities. Our further analysis statistically demonstrates the proposed gating mechanism is able to aggregate the structured information selectively.\n2 Synergized-LSTM", "n_publication_ref": 19, "n_figure_ref": 4}, {"heading": "Incorporating Structured Information", "text": "To incorporate the long-range dependencies, we consider an additional graph-encoded representation g t (Figure 2) as the model input to integrate\n\u03c3 \u03c3 \u03c3 tanh tanh \u03c3 \u00d7 + \u00d7 + \u00d7 \u00d7 tanh c t-1\nPrevious Cell contextual and structured information. The graphencoded representation g t can be derived from Graph Neural Networks (GNNs) such as GCN (Kipf and Welling, 2017), which are capable of bringing in structured information through graph structure (Hamilton et al., 2017a).\nHowever, structured information sometimes is hard to encode, as we can see from the example in Figure 1. One naive approach is to use a deep GNN to capture such information along multiple dependency arcs between two words, which could mess up information and lead to training difficulties. A straightforward solution is to integrate both structured and contextual information via LSTM. As shown in Figure 1 (Hybrid Paths), the structured information can be passed to neighbors or context, which allows a model to use less number of GNN layers and alleviate such issues for long-range dependencies. The input to the LSTM can simply be the concatenation of word representation x t and g t at each position (Jie and Lu, 2019) 2 . However, because such an approach requires both x t and g t to decide the value of the input gate jointly, it could be a potential victim of two sources of uncertainties: 1) the uncertainty of the quality of graph-encoded representation g t , and 2) the uncertainty of the exact interaction mechanism between the two types of features. These may lead to sub-optimal performance, especially if the graph-encoded representation g t is unsatisfactory. Thus, we need to design a new approach to incorporate both types of information from x t and g t with a more explicit interaction mechanism, with which we hope to alleviate the above issues.", "n_publication_ref": 3, "n_figure_ref": 3}, {"heading": "Syn-LSTM Cell", "text": "We propose the Synergized-LSTM (Syn-LSTM) to better integrate the contextual and structured information to address the above limitations. The inputs of the Syn-LSTM cell include previous cell state c t\u22121 , previous hidden state h t\u22121 , current cell input x t , and an additional graph-encoded representation g t . The outputs of the Syn-LSTM cell include current cell state c t and current hidden state h t . Within the cell, there are four gates: input gate i t , forget gate f t , output gate o t , and an additional new gate m t to control the flow of information. Note that the forget gate f t and output gate o t are not just looking at h t\u22121 and x t ; they are also affected by the graph-encoded representation g t . The cell state c t and hidden state h t are computed as follows:\nf t = \u03c3(W (f ) x t + U (f ) h t\u22121 + Q (f ) g t + b (f ) )(1)\no t = \u03c3(W (o) x t + U (o) h t\u22121 + Q (o) g t + b (o) )(2)\ni t = \u03c3(W (i) x t + U (i) h t\u22121 + b (i) )(3)\nm t = \u03c3(W (m) g t + U (m) h t\u22121 + b (m) )(4)\nc t = tanh(W (u) x t + U (u) h t\u22121 + b (u) )(5)\ns t = tanh(W (n) g t + U (n) h t\u22121 + b (n) ) (6) c t = f t c t\u22121 + i t c t + m t s t (7) h t = o t tanh(c t ) (8\n)\nwhere \u03c3 is the sigmoid function, W (\u2022) , U (\u2022) , Q (\u2022) and b (\u2022) are learnable parameters. The additional new gate m t is used to control the information from the graph-encoded representation directly. Such a design allows the original input gates i t and our new gate m t to make independent assessments on the amounts of information to be retrieved from the word representation x t and the graph-encoded representation g t respectively. On the other hand, we also have a different candidate states t to represent the cell state that corresponds to the graph-encoded representation separately.\nWith the proposed Syn-LSTM, the structured information captured by the dependency trees can be passed to each cell, and the additional gate m t is able to control how much structured information can be incorporated. The additional gate enables the model to feed the contextual and structured information into the LSTM cell separately. Such a mechanism allows our model to aggregate the information from linear sequence and dependency trees selectively. Similar to the previous work (Levy et al., 2018), it is also possible to show that the cell state c t implicitly computes the element-wise weighted sum of the previous states by expanding Equation 7:\nxt-1 xt xt+1 xt+2 g L t-1 g L t g L t+1 g L t+2 Syn-LSTM Syn-LSTM Syn-LSTM Syn-LSTM y t\u22121 y t y t+1 y t+2 g 0 t-1 g 0 t g 0 t+1 g 0 t+2 Graph Convolutional Network\nc t = f t c t\u22121 + i t c t + m t s t (9) = t j=0 (i j t k=j+1 f k ) c j + t j=0 (m j t k=j+1 f k ) s j (10) = t j=0 a t j c j + t j=0 q t j s j (11)\nNote that the two terms, a t j and q t j , are the product of gates. The value of the two terms are in the range from 0 to 1. Since thec t ands t represent contextual and structured features, the corresponding weights control the flow of information.", "n_publication_ref": 3, "n_figure_ref": 0}, {"heading": "Syn-LSTM-CRF", "text": "The goal of named entity recognition is to predict the label sequence y = {y 1 , y 2 , ..., y n } given the input sequence w = {w 1 , w 2 , ..., w n }, where w t represents the t-th word and n is the number of words. Our model is mainly constructed with three layers: input representation layer, bi-directional Syn-LSTM layer, and CRF layer. The architecture of our Syn-LSTM-CRF is shown in Figure 3.\nInput Representation Layer Similar to the work by Lample et al. (2016), our input representation also includes the character embeddings, which are the hidden states of character-based BiLSTM. Jie and Lu (2019) highlight that the dependency relation helps to enhance the input representation. Furthermore, previous methods ) use embeddings of part-ofspeech (POS) tags as additional input representation. The input representation x t of our model is the concatenation of the word embedding v t , the character representation e t , the dependency relation embedding r t , and the POS embedding p t :\nx t = [v t ; e t ; r t ; p t ](12)\nwhere both r t and p t embeddings are randomly initialized and are fine-tuned during training. For experiments with the contextualized representations (e.g., BERT (Devlin et al., 2019)), we further concatenate the contextual word representation to x t . For our task, we employ the graph convolutional network (Kipf and Welling, 2017;Zhang et al., 2018b) to get the graph-encoded representation g t . Given a graph, an adjacency matrix A of size n \u00d7 n is able to represent the graph structure, where n is the number of nodes; A i,j = 1 indicates that node i and node j are connected. We transform dependency tree into its corresponding adjacency matrix 3 A, and A i,j = 1 denotes that node i and node j have dependency relation. Note that the purpose of graph-encoded representation g t is to incorporate the dependency information from neighbor nodes. The input and output representations of the l-th layer GCN at t-th position are denoted as g l\u22121 t and g l t respectively. Similar to the work by Zhang et al. (2018b), we use d t = n j=1 A t,j , which is the total number of neighbors of node t, to normalize the representation before going through the nonlinear function. The GCN operation is defined as:\ng l t = ReLU( n j=1 A t,j W l g l\u22121 t /d t + b l ) (13)\nwhere W l is a linear transformation and b l is a bias. The initial g 0 t is the concatenation of word embedding v t , character embedding e t , and dependency relation embedding r t :  \u2190 \u2212 h t from backward Syn-LSTM to form the contextual representation of t-th token:\ng 0 t = [v t ; e t ; r t ]. Bi-directional\nh t = [ \u2212 \u2192 h t ; \u2190 \u2212 h t ].\nCRF Layer The CRF (Lafferty et al., 2001) is widely used in NER tasks as it is capable of capturing the structured correlations between adjacent output labels. Given the sentence w and dependency tree \u03c4 , the probability of the label sequence y is defined as:\nP (y|w, \u03c4 ) = exp(score(w, \u03c4, y)) y exp(score(w, \u03c4, y ))(14)\nThe score function is defined as:\nscore(w, \u03c4, y) = n t=0 T yt,y t+1 + n t=1 E yt (15)\nwhere T yt,y t+1 denotes the transition score from label y t to y t+1 , E yt denotes the score of label y t at the t-th position and the scores are computed using the hidden state h t . We learn the model parameters by minimizing the negative log-likelihood and employ the Viterbi algorithm to obtain the best label sequence during evaluation.", "n_publication_ref": 7, "n_figure_ref": 1}, {"heading": "Experiments", "text": "Datasets The proposed model is evaluated on four benchmark datasets: SemEval 2010 Task 1 (Recasens et al., 2010) Catalan and Spanish datasets, and OntoNotes 5.0 (Weischedel et al., 2013) English and Chinese datasets. We choose these four datasets as they have explicit dependency annotations which allow us to evaluate the effectiveness of our approach when dependency trees of different qualities are used. For SemEval 2010 Task 1 datasets, there are 4 entity types: PER, LOC and ORG and MISC. For OntoNotes 5.0 datasets, there are 18 entity types in total. Following the work by Jie and Lu (2019), we transform the parse trees into the Stanford dependency trees (De Marneffe and Manning, 2008) by using Stanford CoreNLP . Detailed statistics of each dataset can be found in Table 1. Intuitively, longer sentences would require the model to capture more long-distance interactions in the sentences. We present the number of entities in terms of different sentence lengths to show that these datasets have a modest amount of entities in long sentences.\nExperimental Setup For Catalan, Spanish, and Chinese, we use the FastText (Grave et al., 2018) 300 dimensional embeddings to initialize the word embeddings. For OntoNotes 5.0 English, we adopt the publicly available GloVE (Pennington et al., 2014) 100 dimensional embeddings to initialize the word embeddings. For experiments with the contextualized representation, we adopt the pre-trained language model BERT (Devlin et al., 2019) for the four datasets. Specifically, we use bert-as-service (Xiao, 2018) to generate the contextualized word representation without fine-tuning. Following Luo et al. (2020), we use the cased version of BERT large model for the experiments on the OntoNotes 5.0 English data. We use the cased version of BERT base model for the experiments on the other three datasets. For the character embedding, we randomly initialize the character embeddings and set the dimension as 30, and set the hidden size of character-level BiLSTM as 50. The hidden size of GCN and Syn-LSTM is set as 200, the number of GCN layer is 2. We adopt stochastic gradient descent (SGD) to optimize our model with batch size 100, L2 regularization 10 \u22128 , initial learning rate lr 0.2 and the learning rate is decayed 4 with respect to the number of epoch. We select the best model based on the performance on the dev set 5 and apply it to the test set. We use the bootstrapping t-test to compare the results.\nBaselines We compare our model with several baselines with or without dependency tree information. The first one is BERT-CRF, where we apply a CRF layer on top of BERT (Devlin et al., 2019). Secondly, we compare with the BERT implementation by HuggingFace (Wolf et al., 2019). For models with dependency trees, we take the models BiLSTM-GCN-CRF and dependency- 4 We set the decay as 0.1 and the learning rate for each epoch equals to lr/(1 + decay * (epoch \u2212 1)). 5 The experimental results on the dev set and other experimental details can be found in the Appendix.    (Peters et al., 2018), but we also implement it with BERT. Besides, we compare our model with previous works that have results on these datasets.", "n_publication_ref": 14, "n_figure_ref": 0}, {"heading": "Main Results", "text": "SemEval 2010 Task 1 Table 2 shows comparisons of our model with baseline models on the SemEval 2010 Task 1 Catalan and Spanish datasets. Our Syn-LSTM-CRF model outperforms all existing models with F 1 82.76 and 85.09 (p < 10 \u22125 ) compared to DGLSTM-CRF on Catalan and Spanish datasets when FastText word embeddings are used. Our model outperforms the BiLSTM-CRF model by 13.25 and 11.22 F 1 points, and outperforms BiLSTM-GCN-CRF (Jie and Lu, 2019) model by 4.64 and 3.16 on Catalan and Spanish. The large performance gap between BiLSTM-GCN-CRF and our model indicates that Syn-LSTM-CRF shows better compatibility with GCN, and this confirms that simply stacking GCN on top of the BiLSTM does not perform well. Our method outperforms GCN-BiLSTM-CRF model by 5.33 and 3.24 F 1 points on Catalan and Spanish. This shows that our proposed model demonstrates a better integration of contextual information and structured information. Furthermore, our proposed method brings 1.12 and 1.62 F 1 points improvement on Catalan and Spanish datasets compare to the DGLSTM-CRF (Jie and Lu, 2019). The DGLSTM-CRF employs 2-layer dependency guided BiLSTM to capture grandchild dependencies, which leads to longer training time and more model parameters. However, our Syn-LSTM-CRF is able to get better performance with fewer model parameters and shorter training time because of the fewer LSTM layers. Such results demonstrate that our proposed Syn-LSTM-CRF manages to capture structured information effectively.\nFurthermore, with the contextualized word representation, the Syn-LSTM-CRF + BERT achieves much higher performance improvement than any other method. Our model outperforms the strong baseline model DGLSTM-CRF + ELMO by 4.83 and 2.54 in terms of F 1 (p < 10 \u22125 ) on Catalan and Spanish, respectively.\nOntoNotes 5.0 English To understand the generalizability of our model, we evaluate the proposed Syn-LSTM-CRF model on large scale OntoNotes 5.0 datasets. Table 3 shows comparisons of our model with baseline models on English. Our Syn-LSTM-CRF model outperforms all existing methods with 89.04 in terms of F 1 score (p < 0.01) compared to DGLSTM-CRF, when GloVE word embeddings are used. Our model outperforms the BiLSTM-CRF model by 1.97 in F 1 , BiLSTM-GCN-CRF (Jie and Lu, 2019) model by 0.86. Note that our implemented GCN-BiLSTM-CRF outperforms the previous DGLSTM-CRF (Jie and Lu, 2019) by 0.14 in F 1 . Our Syn-LSTM-CRF further brings the improvement to 0.52. Moreover, with the contextualized word representation BERT, our method achieves an F 1 score of 90.85 (p < 10 \u22125 ) compared to DGLSTM-CRF + ELMO . Our method outperforms the previous model (Luo et al., 2020), which relies on document-level information, by 0.55 in F 1 . Furthermore, the performance improvement on recall is more prominent as compared to precision. This shows that the proposed Syn-LSTM-CRF is able to extract more entities.    Jie and Lu (2019). There are also other methods (Li et al., 2020a,b) that use external information, (Yu et al., 2020) use document-level information to encode the sentence, which are not direct comparisons to ours.\nforms the baseline models, specifically by 2.04 in F 1 compared to BiLSTM-CRF, by 2.39 compared to BiLSTM-GCN-CRF, by 1.86 compared to GCN-BILSTM-CRF and by 1.11 (p < 10 \u22125 ) compared to DGLSTM-CRF when FastText is used. Note that the baseline BiLSTM-GCN-CRF model is 0.35 points worse than BiLSTM-CRF. Such results further confirm the effectiveness of our proposed Syn-LSTM-CRF for incorporating structured information. We find a similar behavior when the contextualized word representation BERT is used. With the contextualized word representation, we achieve a higher F 1 score of 80.20.", "n_publication_ref": 7, "n_figure_ref": 0}, {"heading": "Analysis", "text": "Robustness Analysis To study the robustness of our model and check whether our model can regulate the flow of information from the graphencoded representation, we analyze the influence of the quality of dependency trees. We train and evaluate an additional dependency parser (Dozat and Manning, 2017). Specifically, we train the   Jie and Lu (2019). There are also other methods (Li et al., 2020a,b) that use external information, which are not direct comparisons to ours. dependency parser 6 on the given training datasets and select the best model based on the dev sets. Then we apply the best model to the test sets to obtain dependency trees. We also train and evaluate our model with random dependency trees. Table 8 presents the comparisons between Syn-LSTM-CRF + BERT and DGLSTM-CRF + ELMO with given, predicted and random dependency trees. We observe that both models encounter a performance drop when we use the predicted parse trees and random trees. Our performance differences with the given parse trees are relatively smaller than the corresponding differences in DGLSTM-CRF + ELMO . Such an observation demonstrates the robustness of our proposed model against structured information from the trees of different quality. It is worthwhile to note that, with the predicted dependencies, our proposed Syn-LSTM-CRF + BERT is still able to outperform the strong baseline DGLSTM-CRF + ELMO even with the given parse trees on Catalan, English, and Chinese datasets.\nTo further study the robustness, we conduct an analysis to investigate if the gate m t (Figure 2) has the ability to regulate the flow of information from the graph-encoded representation. Intuitively, the gate m t should tend to have a small value when 0 -0 .4 0 .4 -0 .5 0 .5 -0 .6 0 .6 -0 .7 0 .7 -0 .8 0 .8 -0 .9 0 .9 -1 the quality of the parse tree is not good (e.g., with random trees). We statistically plot the number of words with respect to different gate value ranges (m t ). Figure 4 shows the comparison between the models of using random trees and given trees on Catalan and Spanish 7 . We observe that the gate m t is more likely to open (the value is higher) when we use the given parse trees compared with random parse trees. Such behavior demonstrates that our proposed model can selectively aggregate the information from the graph-encoded representation.", "n_publication_ref": 3, "n_figure_ref": 2}, {"heading": "Effect of Sentence Length", "text": "We compare the performance of our Syn-LSTM-CRF + BERT with BiLSTM-CRF + BERT and DGLSTM-CRF + ELMO models with respect to sentence length, and the results are shown in Figure 5. We observe that the Syn-LSTM-CRF + BERT model consistently outperforms the two baseline models on the four languages 8 . In particular, although the performance tends to drop as the sentence length increases, our proposed model shows relatively better performance when the sentence length is \u2265 60. This confirms that the proposed Syn-LSTM-CRF + BERT is able to effectively incorporate structured information. Note that our 2-layer GCN is computed based on the  dependency trees, which include both short-range dependencies and long-range dependencies. With the graph-encoded representation and the proposed Syn-LSTM-CRF + BERT , the individual word representation is enhanced by both contextual and structured information. Therefore, for the sentences with length of \u2264 14, we can still observe obvious improvements. The significant performance improvements on the four datasets show the capability of our Syn-LSTM-CRF to capture the structured information despite the sentence length.", "n_publication_ref": 0, "n_figure_ref": 1}, {"heading": "Effect of Entity Length", "text": "We conduct another evaluation on BiLSTM-CRF + BERT , DGLSTM-CRF + ELMO , and Syn-LSTM-CRF + BERT models with respect to entity length \u2208 {1, 2, 3, 4, 5, \u2265 6} on the four languages. Table 6 shows the performance comparison of two models with respect to entity length. With the structured information, both DGLSTM-CRF + ELMO and Syn-LSTM-CRF + BERT achieve better performance compared to BiLSTM-CRF + BERT . When the length of entity is \u2264 3, Syn-LSTM-CRF + BERT achieves better results compared to DGLSTM-CRF + ELMO . This confirms that our proposed method can effectively incorporate the structured information. Our model consistently outperforms BiLSTM-CRF + BERT , and the performance tends to have more improvements when entities are getting longer except on the Chinese dataset. We note there are some special characteristics of the Chinese language. As mentioned by Jie and Lu (2019), the percentage of entities that are able to perfectly form a sub-tree is only 92.9% for OntoNotes Chinese, as compared to 98.5%, 100%, 100% for OntoNotes English, SemEval Catalan and Spanish. Furthermore, the ratio of long entities is much higher for Catalan and Spanish compared  to English and Chinese. The experimental results on Catalan and Spanish datasets show significant improvements for long entities. Such results show that the structured information conveyed by the dependency trees can be more crucial when entity length becomes longer.", "n_publication_ref": 1, "n_figure_ref": 0}, {"heading": "Number of GCN Layers", "text": "To fully explore the impact of the number of GCN layers, we conduct another experiment on Syn-LSTM-CRF + BERT model with the number of GCN layers \u2208 {1, 2, 3}, and Figure 6 shows the performance on the dev set of the four languages. The last bar, indicated as AVG, is obtained by averaging the dev results on the four datasets. We observe that the overall performance is better when the number of GCN layers equals 2. Note that similar behavior can also be found in the work by Kipf and Welling (2017) for document classification and node classification. Therefore, we evaluate our proposed Syn-LSTM-CRF model with 2-layer GCN.  Ablation Study To understand the contribution of each component, we conduct an ablation study on the OntoNotes 5.0 English dataset, and Table 7 presents the detailed results of our model with contextualized representation. We find that the performance drops by 0.24 F 1 score when we only use 1-layer GCN. Without GCN at all, the score drops by 1.13 F 1 . The original dependency contributes 0.27 F 1 score. Removing the dependency relation embedding also decreases the performance by 0.27 F 1 . When we remove the POS tags embedding, the result drops by 0.39 F 1 .", "n_publication_ref": 1, "n_figure_ref": 1}, {"heading": "Related Work", "text": "LSTM LSTM has demonstrated its great effectiveness in many NLP tasks and becomes a standard module for many state-of-the-art models (Wen et al., 2015;Ma and Hovy, 2016;Dozat and Manning, 2017). However, the sequential nature of the LSTM makes it challenging to capture long-range dependencies. Zhang et al. (2018a) propose the S-LSTM model to include a sentence state to allow both local and global information exchange simultaneously. Mogrifier LSTM (Melis et al., 2020) mutually gates the current input and the previous output to enhance the interaction between the input and the context. These two works do not consider structured information for the LSTM design. Since natural language is usually structured, Shen et al. (2018) propose ON-LSTM to add a hierarchical bias to allow the neurons to be updated by following certain order. While the ON-LSTM is learning the latent constituency parse trees, we focus on incorporating the explicit structured information conveyed by the dependency parse trees.\nNER Early work (Sasano and Kurohashi, 2008) uses syntactic dependency features to improve the SVM performance on Japanese NER task. Liu et al. (2010) propose to construct skip-edges to link similar words or words having typed dependencies to capture long-range dependencies. The later works (Collobert et al., 2010;Lample et al., 2016;Chiu and Nichols, 2016b) focus on using neural networks to extract features and achieved the stateof-the-art performance. Jie et al. (2017) find that some relations between the dependency edges and the entities can be used to reduce the search space of their model, which significantly reduces the time complexity. Yu et al. (2020) employ pre-trained language model to encode document-level information to explore all spans with the graph-based dependency graph based ideas. The pre-trained language models (e.g., BERT (Devlin et al., 2019), ELMO (Peters et al., 2018)) further improve neuralbased approaches with a good contextualized representation. However, previous works did not focus on investigating how to effectively integrate structured and contextual information well.", "n_publication_ref": 15, "n_figure_ref": 0}, {"heading": "Conclusion", "text": "In   language model BERT (Devlin et al., 2019) for the four datasets. Specifically, we use bert-as-service (Xiao, 2018) to generate the contextualized word representation without fine-tuning. Following Luo et al. (2020), we select the 18 th layer of the cased version of BERT large model for the experiments on the OntoNotes 5.0 English data. We use the the 9 th layer of cased version of BERT base model for the experiments on the rest three datasets. For the character embedding, we randomly initialize the character embeddings and set the dimension as 30, and set the hidden size of character-level BiLSTM as 50. The hidden size of GCN and Syn-LSTM is set as 200. Note that we only use one layer of bi-directional Syn-LSTM for our experiments. Dropout is set to 0.5 for input embeddings and hidden states. We adopt stochastic gradient descent (SGD) to optimize our model with batch size 100, L2 regularization 10 \u22128 , learning rate 0.2 and the learning rate is decayed with respect to the number of epoch 9 .", "n_publication_ref": 3, "n_figure_ref": 0}, {"heading": "B Performance of dependency parser", "text": "Table 8 presents the performance of dependency parser. 9 We set the decay as 0.1 and the learning rate for each epoch equals to learning_rate/(1 + decay * (epoch \u2212 1)). ", "n_publication_ref": 1, "n_figure_ref": 0}, {"heading": "C More data statistics", "text": "Table 9 shows the statistics of the number of entities with respect to entity length for OntoNotes 5.0 English and Chinese, SemEval 2010 Task 1 Catalan and Spanish datasets.", "n_publication_ref": 0, "n_figure_ref": 0}, {"heading": "D More Robustness Analysis", "text": "Figure 7 shows the comparisons of the models of using random trees and given trees on OntoNotes 5.0 English and Chinese datasets.", "n_publication_ref": 0, "n_figure_ref": 1}, {"heading": "E Effect of Sentence Length", "text": "We compare the performance of our Syn-LSTM-CRF + BERT with BiLSTM-CRF + BERT and DGLSTM-CRF + ELMO models with respect to sentence length, and the results are shown in Figure 8.", "n_publication_ref": 0, "n_figure_ref": 1}, {"heading": "F Case Study", "text": "We further show an example to visualize the propagation of non-local information (Figure 9). The example is selected from OntoNotes 5.0 English dataset. Even though the DGLSTM-CRF (Jie and Lu, 2019) model is able to recognize \"Tianshui\" as a named entity, it predicts a wrong entity type as PERSON while the true type is GPE. If only looking at the first half of the sentence, it is possible to predict \"Tianshui\" as PERSON because of the local information \"age\". However, the second half of the sentence confirms that the entity type of", "n_publication_ref": 1, "n_figure_ref": 1}, {"heading": "Acknowledgements", "text": "We would like to thank the anonymous reviewers for their helpful comments. This research is partially supported by Ministry of Education, Singapore, under its Academic Research Fund (AcRF) Tier 2 Programme (MOE AcRF Tier 2 Award No: MOE2017-T2-1-156). Any opinions, findings and conclusions or recommendations expressed in this material are those of the authors and do not reflect the views of the Ministry of Education, Singapore.", "n_publication_ref": 0, "n_figure_ref": 0}, {"heading": "A Experimental details", "text": "We test our model on RTX 2080 Ti GPU and Nvidia Tesla V100 GPU, with CUDA version 10.1, PyTorch version 1.40. The average run time for Syn-LSTM is 52 sec/epoch, 55 sec/epoch, 290 sec/epoch, 350 sec/epoch for Catalan, Spanish, Chinese and English datasets respectively. The total number of parameters is 11M. Table 10 shows the performance of our model on the dev sets of OntoNotes 5.0 English and Chinese, SemEval 2010 Task 1 Catalan and Spanish.\nFor hyper-parameter, we use the FastText (Grave et al., 2018) 300 dimensional embeddings to initialize the word embeddings for Catalan, Spanish, and Chinese. For OntoNotes 5.0 English, we adopt the publicly available GloVE (Pennington et al., 2014) 100 dimensional embeddings to initialize the word embeddings. For experiments with the contextualized representation, we adopt the pre-trained", "n_publication_ref": 2, "n_figure_ref": 0}, {"heading": "Models", "text": "English Chinese Catalan Spanish P. R. F 1 P.  During Tanshui 's golden age , large and small boats were constantly coming and going in the harbor , and it was not usual to see enormous steamships .\nROOT Figure 9: An example of dependency tree. The mentioned entity is highlighted in orange, and the entity type is GPE.\n\"Tianshui\" is GPE. With the non-local information from the graph-encoded representation, our Syn-LSTM-CRF successfully predicts the right entity type.", "n_publication_ref": 0, "n_figure_ref": 1}], "references": [{"title": "Dependency-aware named entity recognition with relative and global attentions", "journal": "", "year": "2019", "authors": "Gustavo Aguilar; Thamar Solorio"}, {"title": "Contextual string embeddings for sequence labeling", "journal": "", "year": "2018", "authors": "Alan Akbik; Duncan Blythe; Roland Vollgraf"}, {"title": "Learning Deep Architectures for AI", "journal": "Now Publishers", "year": "2009", "authors": "Y Bengio"}, {"title": "Named entity recognition with bidirectional lstm-cnns", "journal": "", "year": "2016", "authors": "P C Jason; Eric Chiu;  Nichols"}, {"title": "Named entity recognition with bidirectional LSTM-CNNs. Transactions of the Association for Computational Linguistics", "journal": "", "year": "2016", "authors": "P C Jason; Eric Chiu;  Nichols"}, {"title": "Three models for the description of language", "journal": "IRE Transactions on Information Theory", "year": "1956", "authors": "N Chomsky"}, {"title": "Aspects of the Theory of Syntax", "journal": "MIT Press", "year": "1969", "authors": "N Chomsky"}, {"title": "Natural language processing (almost) from scratch", "journal": "Journal of Machine Learning Research", "year": "2010", "authors": "Ronan Collobert; Jason Weston; Leon Bottou; Michael Karlen; Koray Kavukcuoglu; Pavel Kuksa"}, {"title": "Stanford typed dependencies manual", "journal": "", "year": "2008", "authors": "Marie-Catherine De Marneffe; Christopher D Manning"}, {"title": "BERT: Pre-training of deep bidirectional transformers for language understanding", "journal": "", "year": "2019", "authors": "Jacob Devlin; Ming-Wei Chang; Kenton Lee; Kristina Toutanova"}, {"title": "Deep biaffine attention for neural dependency parsing", "journal": "", "year": "2017", "authors": "Timothy Dozat; D Christopher;  Manning"}, {"title": "Incorporating non-local information into information extraction systems by Gibbs sampling", "journal": "", "year": "2005", "authors": "Jenny Rose Finkel; Trond Grenager; Christopher Manning"}, {"title": "Robust lexical features for improved neural network namedentity recognition", "journal": "", "year": "2018", "authors": "Abbas Ghaddar; Phillippe Langlais"}, {"title": "Learning word vectors for 157 languages", "journal": "", "year": "2018", "authors": "Edouard Grave; Piotr Bojanowski; Prakhar Gupta; Armand Joulin; Tomas Mikolov"}, {"title": "Representation learning on graphs: Methods and applications", "journal": "IEEE Data Eng. Bull", "year": "2017", "authors": "William L Hamilton; Rex Ying; Jure Leskovec"}, {"title": "Inductive representation learning on large graphs", "journal": "", "year": "2017", "authors": "William L Hamilton; Zhitao Ying; Jure Leskovec"}, {"title": "Long short-term memory", "journal": "Neural Computation", "year": "1997", "authors": "Sepp Hochreiter; J\u00fcrgen Schmidhuber"}, {"title": "Dependency-guided lstm-crf for named entity recognition", "journal": "", "year": "2019", "authors": "Zhanming Jie; Wei Lu"}, {"title": "Efficient dependency-guided named entity recognition", "journal": "", "year": "2017", "authors": "Zhanming Jie; Aldrian Obaja Muis; Wei Lu"}, {"title": "Semisupervised classification with graph convolutional networks", "journal": "", "year": "2017", "authors": "N Thomas; Max Kipf;  Welling"}, {"title": "Conditional random fields: Probabilistic models for segmenting and labeling sequence data", "journal": "", "year": "2001", "authors": "John Lafferty; Andrew Mccallum; Fernando Pereira"}, {"title": "Neural architectures for named entity recognition", "journal": "", "year": "2016", "authors": "Guillaume Lample; Miguel Ballesteros; Sandeep Subramanian; Kazuya Kawakami; Chris Dyer"}, {"title": "Long short-term memory as a dynamically computed element-wise weighted sum", "journal": "", "year": "2018", "authors": "Omer Levy; Kenton Lee; Nicholas Fitzgerald; Luke Zettlemoyer"}, {"title": "Leveraging linguistic structures for named entity recognition with bidirectional recursive neural networks", "journal": "", "year": "2017", "authors": " Peng-Hsuan; Ruo-Ping Li; Yu-Siang Dong; Ju-Chieh Wang; Wei-Yun Chou;  Ma"}, {"title": "A unified mrc framework for named entity recognition", "journal": "", "year": "2020", "authors": "Xiaoya Li; Jingrong Feng; Yuxian Meng; Qinghong Han; Fei Wu; Jiwei Li"}, {"title": "Dice loss for dataimbalanced nlp tasks", "journal": "", "year": "2020", "authors": "Xiaoya Li; Xiaofei Sun; Yuxian Meng; Junjun Liang; Fei Wu; Jiwei Li"}, {"title": "Recognizing biomedical named entities using skipchain conditional random fields", "journal": "", "year": "2010", "authors": "Jingchen Liu; Minlie Huang; Xiaoyan Zhu"}, {"title": "Hierarchical contextualized representation for named entity recognition", "journal": "", "year": "2020", "authors": "Ying Luo; Fengshun Xiao; Hai Zhao"}, {"title": "End-to-end sequence labeling via bi-directional lstm-cnns-crf", "journal": "", "year": "2016", "authors": "Xuezhe Ma; Eduard H Hovy"}, {"title": "The Stanford CoreNLP natural language processing toolkit", "journal": "", "year": "2014", "authors": "Christopher Manning; Mihai Surdeanu; John Bauer; Jenny Finkel; Steven Bethard; David Mcclosky"}, {"title": "Mogrifier lstm", "journal": "", "year": "2020", "authors": "G\u00e1bor Melis; Tom\u00e1s Kocisk\u00fd; Phil Blunsom"}, {"title": "Glove: Global vectors for word representation", "journal": "", "year": "2014", "authors": "Jeffrey Pennington; Richard Socher; Christopher Manning"}, {"title": "Deep contextualized word representations", "journal": "", "year": "2018", "authors": "Matthew Peters; Mark Neumann; Mohit Iyyer; Matt Gardner; Christopher Clark; Kenton Lee; Luke Zettlemoyer"}, {"title": "Towards robust linguistic analysis using ontonotes", "journal": "", "year": "2013", "authors": "Alessandro Sameer Pradhan; Nianwen Moschitti; Hwee Tou Xue; Anders Ng; Olga Bj\u00f6rkelund; Yuchen Uryupina; Zhi Zhang;  Zhong"}, {"title": "Semeval-2010 task 1: Coreference resolution in multiple languages", "journal": "", "year": "2010", "authors": "Marta Recasens; Llu\u00eds M\u00e0rquez; Emili Sapena; Ant\u00f2nia Mart\u00ed; Mariona Taul\u00e9; V\u00e9ronique Hoste"}, {"title": "Morphological Structure, Lexical Representation and Lexical Access (RLE Linguistics C: Applied Linguistics): A Special Issue of Language and Cognitive Processes. Taylor & Francis", "journal": "", "year": "2014", "authors": "D Sandra; M Taft"}, {"title": "Japanese named entity recognition using structural natural language processing", "journal": "", "year": "2008", "authors": "Ryohei Sasano; Sadao Kurohashi"}, {"title": "Ordered neurons: Integrating tree structures into recurrent neural networks", "journal": "", "year": "2018", "authors": "Yikang Shen; Shawn Tan; Alessandro Sordoni; Aaron C Courville"}, {"title": "Fast and accurate entity recognition with iterated dilated convolutions", "journal": "", "year": "2017", "authors": "Emma Strubell; Patrick Verga; David Belanger; Andrew Mccallum"}, {"title": "Neural segmental hypergraphs for overlapping mention recognition", "journal": "", "year": "2018", "authors": "Bailin Wang; Wei Lu"}, {"title": "A neural transition-based model for nested mention recognition", "journal": "", "year": "2018", "authors": "Bailin Wang; Wei Lu; Yu Wang; Hongxia Jin"}, {"title": "Chinese ner with height-limited constituent parsing", "journal": "", "year": "2019", "authors": "Rui Wang; Xin Xin; Wei Chang; Kun Ming; Biao Li; Xin Fan"}, {"title": "Ontonotes release 5.0 ldc2013t19. Linguistic Data Consortium", "journal": "", "year": "2013", "authors": "Ralph Weischedel; Martha Palmer; Mitchell Marcus; Eduard Hovy; Sameer Pradhan; Lance Ramshaw; Nianwen Xue; Ann Taylor; Jeff Kaufman; Michelle Franchini"}, {"title": "Semantically conditioned lstm-based natural language generation for spoken dialogue systems", "journal": "", "year": "2015", "authors": "Milica Tsung-Hsien Wen; Nikola Gasic; Pei Hao Mrksic; David Su; Steve J Vandyke;  Young"}, {"title": "Huggingface's transformers: State-of-the-art natural language processing", "journal": "ArXiv", "year": "2019", "authors": "Thomas Wolf; Lysandre Debut; Victor Sanh; Julien Chaumond; Clement Delangue; Anthony Moi; Pierric Cistac; Tim Rault; R'emi Louf; Morgan Funtowicz; Jamie Brew"}, {"title": "bert-as-service", "journal": "", "year": "2018", "authors": "Han Xiao"}, {"title": "Named entity recognition as dependency parsing", "journal": "", "year": "2020", "authors": "Juntao Yu; Bernd Bohnet; Massimo Poesio"}, {"title": "Sentence-state lstm for text representation", "journal": "", "year": "2018", "authors": "Yue Zhang; Qi Liu; Linfeng Song"}, {"title": "Chinese NER using lattice LSTM", "journal": "", "year": "2018", "authors": "Yue Zhang; Jie Yang"}, {"title": "Graph convolution over pruned dependency trees improves relation extraction", "journal": "", "year": "2018", "authors": "Yuhao Zhang; Peng Qi; Christopher D Manning"}], "figures": [{"figure_label": "1", "figure_type": "", "figure_id": "fig_0", "figure_caption": "Figure 1 :1Figure 1: A sentence annotated with dependency trees and named entities. The paths to connect two entities are shown below the sentence.", "figure_data": ""}, {"figure_label": "3", "figure_type": "", "figure_id": "fig_1", "figure_caption": "Figure 3 :3Figure 3: Syn-LSTM-CRF architecture.", "figure_data": ""}, {"figure_label": "", "figure_type": "", "figure_id": "fig_2", "figure_caption": "guided LSTM-CRF (DGLSTM-CRF) proposed by Jie and Lu (2019), and our implemented GCN-BiLSTM-CRF. The BiLSTM-GCN-CRF model simply stacks the GCN on top of the BiLSTM to incorporate the dependency trees. The GCN-BiLSTM-CRF model takes the concatenation of the graph-encoded representation from GCN and word embedding as input into BiLSTM. The DGLSTM-CRF takes the concatenation of the head word representation and word embedding as input into BiLSTM. Note that the original implementation of DGLSTM-CRF uses ELMo", "figure_data": ""}, {"figure_label": "", "figure_type": "", "figure_id": "fig_3", "figure_caption": "OntoNotes 5.0 Chinese We present the experimental results on the OntoNotes 5.0 Chinese test set in", "figure_data": ""}, {"figure_label": "45", "figure_type": "", "figure_id": "fig_4", "figure_caption": "Figure 4 :Figure 5 :45Figure 4: Left: Catalan, Right: Spanish. x-axis: the value of gate m t . y-axis: the number of words.", "figure_data": ""}, {"figure_label": "", "figure_type": "", "figure_id": "fig_5", "figure_caption": ".4 77.8 53.3 31.8 36.2 DGLSTM-CRF + ELMO 85.4 85.1 84.1 78.9 60.9 59.3 Syn-LSTM-CRF + BERT 90.5 91.1 87.2 77.8 63.8 60.6 Spanish BiLSTM-CRF + BERT 85.1 84.2 81.5 33.7 43.1 27.2 DGLSTM-CRF + ELMO 89.3 87.4 90.8 74.1 67.7 64.4 Syn-LSTM-CRF + BERT 92.7 90.9 91.1 73.0 75.4 58.5 English BiLSTM-CRF + BERT 92.9 88.3 83.1 85.5 80.5 77.9 DGLSTM-CRF + ELMO 91.8 90.1 85.4 87.0 80.8 78.7 Syn-LSTM-CRF + BERT 92.9 90.8 87.7 87.4 80.6 79.8 Chinese BiLSTM-CRF + BERT 82.5 74.6 71.4 65.0 69.8 52.5 DGLSTM-CRF + ELMO 82.2 75.5 71.8 64.1 58.5 41.1 Syn-LSTM-CRF + BERT 82.5 75.6 73.1 66.4 66.1 42.5", "figure_data": ""}, {"figure_label": "78", "figure_type": "", "figure_id": "fig_6", "figure_caption": "Figure 7 :Figure 8 :78Figure 7: Left: English, Right: Chinese. The x-axis indicates the value of gate m t , the y-axis denotes the number of cells.", "figure_data": ""}, {"figure_label": "1", "figure_type": "table", "figure_id": "tab_2", "figure_caption": "Statistics of datasets.", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_3", "figure_caption": "BiLSTM-CRF \u2020 76.83 63.47 69.51 78.33 69.89 73.87 BiLSTM-GCN-CRF \u2020 81.25 75.22 78.12 84.10 79.88 81.93 GCN-BiLSTM-CRF * 80.95 74.19 77.43 84.36 79.48 81.85 DGLSTM-CRF (2019) 83.35 80.00 81.64 84.05 82.90 83.47 Syn-LSTM-CRF (Ours) 83.90 81.65 82.76 86.22 84.24 85.09 + Contextualized Word Representation BERT-CRF * 76.34 76.05 76.19 79.30 77.22 78.24 Wolf et al. (2019) * 82.82 85.7 84.23 81.36 85.58 83.42 BiLSTM-CRF + ELMO \u2020 77.85 76.22 77.03 81.72 79.09 80.38 BiLSTM-CRF + BERT * 81.21 79.90 80.55 83.28 80.11 81.66 BiLSTM-GCN-CRF + ELMO \u2020 83.68 83.16 83.42 85.31 85.19 85.25 GCN-BiLSTM-CRF + BERT * 87.60 86.39 86.99 88.07 87.46 87.76 DGLSTM-CRF (2019) + ELMO 84.71 83.75 84.22 87.79 87.33 87.56 DGLSTM-CRF + BERT * 85.92 84.50 85.20 85.67 85.00 85.33 Syn-LSTM-CRF + BERT (Ours) 89.07 89.04 89.05 89.66 90.54 90.10", "figure_data": "ModelsCatalanSpanishP.R.F 1P.R.F 1"}, {"figure_label": "2", "figure_type": "table", "figure_id": "tab_4", "figure_caption": "Experimental results [%] on SemEval 2010 Task 1 Catalan and Spanish test set. The models with * symbol are our implementations. The models with \u2020 symbol are retrieved from Jie and Lu (2019).", "figure_data": ""}, {"figure_label": "4", "figure_type": "table", "figure_id": "tab_5", "figure_caption": "Our model still consistently outper-", "figure_data": "ModelsP.R.F 1Chiu and Nichols (2016a)86.04 86.53 86.28Li et al. (2017)88.00 86.50 87.21Strubell et al. (2017)--86.84Ghaddar and Langlais (2018)--87.95BiLSTM-CRF  \u202087.21 86.93 87.07BiLSTM-GCN-CRF  \u202088.30 88.06 88.18GCN-BiLSTM-CRF  *88.56 88.76 88.66DGLSTM-CRF (2019)88.53 88.50 88.52Luo et al. (2020)--87.98Syn-LSTM-CRF (Ours)88.96 89.13 89.04+ Contextualized Word RepresentationAkbik et al. (2018)--89.30BERT-CRF  *88.42 88.33 88.37Wolf et al. (2019)  *88.39 90.29 89.33BiLSTM-CRF + ELMO\u202089.14 88.59 88.87BiLSTM-CRF + BERT*89.32 90.02 89.67BiLSTM-GCN-CRF + ELMO\u202089.40 89.71 89.55GCN-BiLSTM-CRF + BERT*89.34 91.26 90.29DGLSTM-CRF (2019) + ELMO89.59 90.17 89.88DGLSTM-CRF + BERT*89.63 89.87 89.75Luo et al. (2020) + BERT--90.30Syn-LSTM-CRF + BERT (Ours) 90.14 91.58 90.85"}, {"figure_label": "3", "figure_type": "table", "figure_id": "tab_6", "figure_caption": "Experimental results [%] on OntoNotes 5.0 English test set. The models with * symbol are our implementations. The models with \u2020 symbol are retrieved from", "figure_data": ""}, {"figure_label": "4", "figure_type": "table", "figure_id": "tab_8", "figure_caption": "Experimental results [%] on OntoNotes 5.0 Chinese test set. The models with * symbol are our implementations. The models with \u2020 symbol are retrieved from", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_9", "figure_caption": "DGLSTM-CRF + ELMO (Given) 84.71 83.75 84.22 87.79 87.33 87.56 89.59 90.17 89.88 78.86 81.00 79.92 CRF + ELMO (Random) 78.99 79.31 79.15 82.11 80.89 81.49 88.80 88.91 88.85 77.68 80.60 79.11", "figure_data": "ModelsCatalanSpanishEnglishChineseP.R.F 1P.R.F 1P.R.F 1P.R.F 1DGLSTM-CRF + ELMO (Predicted)--82.37--83.92--89.64--79.59Differences---1.85---3.64---0.24---0.33DGLSTM-Differences-5.72 -4.44 -5.07 -5.68 -6.44 -6.07 -0.79 -1.26 -1.03 -1.18 -0.40 -0.81Syn-LSTM-CRF + BERT (Given)89.07 89.04 89.05 89.66 90.54 90.10 90.14 91.58 90.85 78.66 81.80 80.20Syn-LSTM-CRF + BERT (Predicted) 87.33 87.42 87.38 86.50 87.49 86.99 89.91 91.27 90.58 78.86 81.57 80.19Differences-1.74 -1.62 -1.67 -3.16 -3.05 -3.11 -0.23 -0.31 -0.27 +0.20 -0.23 -0.01Syn-LSTM-CRF + BERT (Random) 84.57 85.53 85.05 84.61 86.61 85.59 89.24 90.46 89.84 77.25 81.91 79.51Differences-4.50 -3.51 -4.00 -5.05 -3.93 -4.51 -0.90 -1.12 -1.01 -1.41 -0.11 -0.69"}, {"figure_label": "5", "figure_type": "table", "figure_id": "tab_10", "figure_caption": "Performance comparison between adopting the given, predicted and random dependencies on SemEval 2010 Task 1 Catalan and Spanish, and OntoNotes 5.0 English and Chinese datasets. Note that DGLSTM-CRF + ELMO have better performance compared to DGLSTM-CRF + BERT based on Table2, 3, 4.", "figure_data": ""}, {"figure_label": "6", "figure_type": "table", "figure_id": "tab_11", "figure_caption": "F 1 score [%] based on entity length on Catalan, Spanish, English and Chinese datasets. Note that DGLSTM-CRF + ELMO have better performance compared to DGLSTM-CRF + BERT based on the results in the main paper.", "figure_data": ""}, {"figure_label": "7", "figure_type": "table", "figure_id": "tab_13", "figure_caption": "Ablation study of the Syn-LSTM-CRF + BERT model on OntoNotes 5.0 English. -means removing.", "figure_data": ""}, {"figure_label": "8", "figure_type": "table", "figure_id": "tab_15", "figure_caption": "Performance of the trained dependency parser.", "figure_data": "Dataset12Entity Length 3 45\u22656Train 46,525 17,391 9,714 4,892 1,938 1,368EnglishDev6,3252,395 1,256643275172Test6,1292,598 1,359706278187Train 47,2859,668 3,626 1,139467358ChineseDev6,9691,3974731695541Test5,47912994731465542Train8,8193,897 1,742264119437CatalanDev1,370676269401858Test1,601811338572776Train 10,3073,609 2,302301175603SpanishDev1,5235593485431100Test1,7557023695934127"}, {"figure_label": "9", "figure_type": "table", "figure_id": "tab_16", "figure_caption": "Number of entities with respect to entity length for OntoNotes 5.0 English and Chinese, Se-mEval 2010 Catalan and Spanish datasets.", "figure_data": ""}], "doi": "10.1162/neco.1997.9.8.1735"}