{"authors": "Jiyeon Ham; Yo Joong Choe; Kyubyong Park; Ilji Choi; Hyungjoon Soh; Kakao Brain", "pub_date": "", "title": "KorNLI and KorSTS: New Benchmark Datasets for Korean Natural Language Understanding", "abstract": "Natural language inference (NLI) and semantic textual similarity (STS) are key tasks in natural language understanding (NLU). Although several benchmark datasets for those tasks have been released in English and a few other languages, there are no publicly available NLI or STS datasets in the Korean language. Motivated by this, we construct and release new datasets for Korean NLI and STS, dubbed KorNLI and KorSTS, respectively. Following previous approaches, we machine-translate existing English training sets and manually translate development and test sets into Korean. To accelerate research on Korean NLU, we also establish baselines on KorNLI and KorSTS. Our datasets are publicly available at https://github.com/ kakaobrain/KorNLUDatasets.", "sections": [{"heading": "Introduction", "text": "Natural language inference (NLI) and semantic textual similarity (STS) are considered as two of the central tasks in natural language understanding (NLU). They are not only featured in GLUE (Wang et al., 2018) and SuperGLUE (Wang et al., 2019), which are two popular benchmarks for NLU, but also known to be useful for supplementary training of pre-trained language models (Phang et al., 2018) as well as for building and evaluating fixedsize sentence embeddings (Reimers and Gurevych, 2019). Accordingly, several benchmark datasets have been released for both NLI (Bowman et al., 2015; and STS (Cer et al., 2017) in the English language.\nWhen it comes to the Korean language, however, benchmark datasets for NLI and STS do not exist. Popular benchmark datasets for Korean NLU typically involve question answering 12 and sentiment analysis 3 , but not NLI or STS. We believe that the lack of publicly available benchmark datasets for Korean NLI and STS has led to the lack of interest for building Korean NLU models suited for these key understanding tasks.\nMotivated by this, we construct and release Ko-rNLI and KorSTS, two new benchmark datasets for NLI and STS in the Korean language. Following previous work (Conneau et al., 2018), we construct our datasets by machine-translating existing English training sets and by translating English development and test sets via human translators. We then establish baselines for both KorNLI and KorSTS to facilitate research on Korean NLU.", "n_publication_ref": 8, "n_figure_ref": 0}, {"heading": "Background", "text": "", "n_publication_ref": 0, "n_figure_ref": 0}, {"heading": "NLI and the {S,M,X}NLI Datasets", "text": "In an NLI task, a system receives a pair of sentences, a premise and a hypothesis, and classifies their relationship into one out of three categories: entailment, contradiction, and neutral.\nThere are several publicly available NLI datasets in English. Bowman et al. (2015) introduced the Stanford NLI (SNLI) dataset, which consists of 570K English sentence pairs based on image captions.  introduced the Multi-Genre NLI (MNLI) dataset, which consists of 455K English sentence pairs from ten genres. Conneau et al. (2018) released the Cross-lingual NLI (XNLI) dataset by extending the development and test data of the MNLI corpus to 15 languages. Note that Korean is not one of the 15 languages in XNLI. There are also publicly available NLI datasets in a few other non-English languages (Fonseca et al., 2016;Real et al., 2019;Hayashibe, 2020), but none exists for Korean at the time of publication.\nFigure 1: Data construction process. MT and PE indicate machine translation and post-editing, respectively. We translate original English data into Korean using an internal translation engine. For development and test data, the machine translation outputs are further post-edited by human experts.", "n_publication_ref": 5, "n_figure_ref": 1}, {"heading": "STS and the STS-B Dataset", "text": "STS is a task that assesses the gradations of semantic similarity between two sentences. The similarity score ranges from 0 (completely dissimilar) to 5 (completely equivalent). It is commonly used to evaluate either how well a model grasps the closeness of two sentences in meaning, or how well a sentence embedding embodies the semantic representation of the sentence.\nThe STS-B dataset consists of 8,628 English sentence pairs selected from the STS tasks organized in the context of SemEval between 2012 and 2017 (Agirre et al., 2012(Agirre et al., , 2013(Agirre et al., , 2014(Agirre et al., , 2015(Agirre et al., , 2016. The domain of input sentences covers image captions, news headlines, and user forums. For details, we refer readers to Cer et al. (2017).", "n_publication_ref": 6, "n_figure_ref": 0}, {"heading": "Data", "text": "", "n_publication_ref": 0, "n_figure_ref": 0}, {"heading": "Data Construction", "text": "We explain how we develop two new Korean language understanding datasets: KorNLI and Ko-rSTS. The KorNLI dataset is derived from three different sources: SNLI, MNLI, and XNLI, while the KorSTS dataset stems from the STS-B dataset. The overall construction process, which is applied identically to the two new datasets, is illustrated in Figure 1.\nFirst, we translate the training sets of the SNLI, MNLI, and STS-B datasets, as well as the development and test sets of the XNLI 4 and STS-B datasets, into Korean using an internal neural machine translation engine. Then, the translation results of the development and test sets are post-edited by professional translators in order to guarantee the quality of evaluation. This multi-stage translation strategy aims not only to expedite the translators' work, but also to help maintain the translation consistency between the training and evaluation datasets. It is worth noting that the post-editing procedure does not simply mean proofreading. Rather, it refers to human translation based on the prior machine translation results, which serve as first drafts.", "n_publication_ref": 0, "n_figure_ref": 1}, {"heading": "Translation Quality", "text": "To ensure translation quality, we hired two professional translators with at least seven years of experience who specialize in academic papers/books as well as business contracts. The two translators each post-edited half of the dataset and cross-checked each other's translation afterward. This was further examined by one of the authors, who is fluent in both English and Korean.\nWe also note that the professional translators did not have to edit much during post-editing, suggesting that the machine-translated sentences were often good enough to begin with. We found that the BLEU scores between the machine-translated and post-edited sentences were 63.30 for KorNLI and 73.26 for KorSTS, and for approximately half the time (47% for KorNLI and 53% for KorSTS), the translators did not have to change the machinetranslated sentence at all.\nFinally, we note that translators did not see the English gold labels during post-editing, in order to expedite the post-editing process. See Section 5 for a discussion on the effect of translation on data quality.  ", "n_publication_ref": 0, "n_figure_ref": 0}, {"heading": "KorNLI", "text": "Examples Label P: \u1102 \u1165\u1102 \u1173 \u11ab \u1100 \u1165\u1100 \u1175\u110b \u1166 \u110b \u1175 \u11bb\u110b \u1173 \u11af \u1111 \u1175 \u11af\u110b \u116d \u110b \u1165 \u11b9\u110b \u1165.\nE \"You don't have to stay there.\"\nH: \u1100 \u1161\u1103 \u1169 \u1103 \u116b. \"You can leave.\" P: \u1102 \u1165\u1102 \u1173 \u11ab \u1100 \u1165\u1100 \u1175\u110b \u1166 \u110b \u1175 \u11bb\u110b \u1173 \u11af \u1111 \u1175 \u11af\u110b \u116d \u110b \u1165 \u11b9\u110b \u1165.\nC \"You don't have to stay there.\"\nH: \u1102 \u1165 \u11ab \u110c \u1165 \u11bc\u1112 \u116a \u11a8\u1112 \u1175 \u1100 \u1173 \u110c \u1161\u1105 \u1175\u110b \u1166 \u110b \u1175 \u11bb\u110b \u1165\u110b \u1163 \u1112 \u1162! \"You need to stay in this place exactly!\" P: \u1102 \u1165\u1102 \u1173 \u11ab \u1100 \u1165\u1100 \u1175\u110b \u1166 \u110b \u1175 \u11bb\u110b \u1173 \u11af \u1111 \u1175 \u11af\u110b \u116d \u110b \u1165 \u11b9\u110b \u1165.\nN \"You don't have to stay there.\" are almost twice as long as the hypotheses, as reported in Conneau et al. (2018). We present a few examples in Table 2. \nH: \u1102 \u1166\u1100 \u1161 \u110b \u116f \u11ab\u1112 \u1161\u1106 \u1167 \u11ab \u1102 \u1165 \u11ab \u110c \u1175 \u11b8\u110b \u1166 \u1100 \u1161\u1103 \u1169 \u1103 \u116b. \"You can go home if you like.\"", "n_publication_ref": 1, "n_figure_ref": 0}, {"heading": "KorSTS", "text": "", "n_publication_ref": 0, "n_figure_ref": 0}, {"heading": "As provided in", "text": "", "n_publication_ref": 0, "n_figure_ref": 0}, {"heading": "Baselines", "text": "In this section, we provide baselines for the Korean NLI and STS tasks using our newly created benchmark datasets. Because both tasks receive a pair of sentences as an input, there are two different approaches depending on whether the model encodes the sentences jointly (\"cross-encoding\") or separately (\"bi-encoding\"). 5", "n_publication_ref": 0, "n_figure_ref": 0}, {"heading": "Cross-encoding Approaches", "text": "As illustrated with BERT (Devlin et al., 2019) and many of its variants, the de facto standard approach for NLU tasks is to pre-train a large language model and fine-tune it on each task. In the cross-encoding  \nExamples Score A: \u1112 \u1161 \u11ab \u1102 \u1161 \u11b7\u110c \u1161\u1100 \u1161 \u110b \u1173 \u11b7\u1109 \u1175 \u11a8\u110b \u1173 \u11af \u1106 \u1165 \u11a8\u1100 \u1169 \u110b \u1175 \u11bb\u1103 \u1161. 4.2 \"A man is eating food.\" B: \u1112 \u1161 \u11ab \u1102 \u1161 \u11b7\u110c \u1161\u1100 \u1161 \u1106 \u116f \u11ab\u1100 \u1161\u1105 \u1173 \u11af \u1106 \u1165 \u11a8\u1100 \u1169 \u110b \u1175 \u11bb\u1103 \u1161.\n\"A man is eating something.\"\nA: \u1112 \u1161 \u11ab \u110b \u1167\u1109 \u1165 \u11bc\u110b \u1175 \u1100 \u1169\u1100 \u1175\u1105 \u1173 \u11af \u110b \u116d\u1105 \u1175\u1112 \u1161\u1100 \u1169 \u110b \u1175 \u11bb\u1103 \u1161. 0.0 \"A woman is cooking meat.\" B: \u1112 \u1161 \u11ab \u1102 \u1161 \u11b7\u110c \u1161\u1100 \u1161 \u1106 \u1161 \u11af\u1112 \u1161\u1100 \u1169 \u110b \u1175 \u11bb\u1103 \u1161.\n\"A man is speaking.\" approach, the pre-trained language model takes each sentence pair as a single input for fine-tuning. These cross-encoding models typically achieve the state-of-the-art performance over bi-encoding models, which encode each input sentence separately.\nFor both KorNLI and KorSTS, we consider two pre-trained language models. We first pre-train a Korean RoBERTa (Liu et al., 2019), both base and large versions, on a collection of internally collected Korean corpora (65GB). We construct a byte pair encoding (BPE) (Gage, 1994;Sennrich et al., 2016) dictionary of 32K tokens using Sen-tencePiece (Kudo and Richardson, 2018). We train our models using fairseq  with 32 V100 GPUs for the base model (25 days) and 64 for the large model (20 days).\nWe also use XLM-R (Conneau and Lample, 2019), a publicly available cross-lingual language model that was pre-trained on 2.5TB of Common   Crawl corpora in 100 languages including Korean (54GB). Note that the base and large architectures of XLM-R are identical to those of RoBERTa, except that the vocabulary size is significantly larger (250K), making the embedding and output layers that much larger.\nIn Table 5, we report the test set scores for crossencoding models fine-tuned on KorNLI (accuracy) and KorSTS (Spearman correlation). For KorNLI, we additionally include results for XLM-R models fine-tuned on the original MNLI training set (also known as cross-lingual transfer in XNLI). To ensure comparability across settings, we only train on the MNLI portion when fine-tuning on KorNLI.\nOverall, the Korean RoBERTa models outperform the XLM-R models, regardless of whether they are fine-tuned on Korean or English training sets. For each model, the larger variant outperforms the base one, consistent with previous findings. The large version of Korean RoBERTa performs the best for both KorNLI (83.67%) and KorSTS (85.27%) among all models tested. Among the XLM-R models for KorNLI, those fine-tuned on the Korean training set consistently outperform the cross-lingual transfer variants.", "n_publication_ref": 5, "n_figure_ref": 0}, {"heading": "Bi-encoding Approaches", "text": "We also report the KorSTS scores of bi-encoding models. The bi-encoding approach bears practical importance in applications such as semantic search, where computing pairwise similarity among a large set of sentences is computationally expensive with cross-encoding.\nHere, we first provide two baselines that do not use pre-trained language models: Korean fastText and the multilingual universal sentence encoder (M-USE). Korean fastText (Bojanowski et al., 2017) is a pre-trained word embedding model 6 trained on Korean text from Common Crawl. To produce sentence embeddings, we take the average of fastText word embeddings for each sentence. M-USE 7 (Yang et al., 2019), is a CNN-based sentence encoder model trained for NLI, questionanswering, and translation ranking across 16 languages including Korean. For both Korean fastText and M-USE, we compute the cosine similarity between two input sentence embeddings to make an unsupervised STS prediction.\nPre-trained language models can also be used as bi-encoding models following the approach of Sen-tenceBERT (Reimers and Gurevych, 2019), which involves fine-tuning a BERT-like model with a Siamese network structure on NLI and/or STS. We use the SentenceBERT approach for both Korean RoBERTa (\"Korean SRoBERTa\") and XLM-R (\"SXLM-R\"). We adopt the MEAN pooling strategy, i.e., computing the sentence vector as the mean of all contextualized word vectors.\nIn Table 6, we present the KorSTS test set scores (100 \u00d7 Spearman correlation) for the biencoding models. We categorize each result based on whether the model was additionally trained on KorNLI and/or KorSTS. Note that models that are not fine-tuned at all or only fine-tuned to KorNLI can be considered as unsupervised w.r.t. KorSTS. Also note that M-USE is trained on a machinetranslated version of SNLI, which is a subset of KorNLI, as part of its pre-training step.\n6 https://dl.fbaipublicfiles.com/ fasttext/vectors-crawl/cc.ko.300.bin.gz 7 https://tfhub.dev/google/ universal-sentence-encoder-multilingual/ 3\nFirst, given each model, we find that supplementary training on KorNLI consistently improves the KorSTS scores for both unsupervised and supervised settings, as was the case with English models (Conneau et al., 2017;Reimers and Gurevych, 2019). This shows that the KorNLI dataset can be an effective intermediate training source for biencoding approaches. When comparing the baseline models in each setting, we find that both M-USE and the SentenceBERT-based models trained on KorNLI achieve competitive unsupervised Ko-rSTS scores. Both models significantly outperform the average of fastText embeddings model and the Korean SRoBERTa and SXLM-R models without fine-tuning. Among our baselines, large SXLM-R trained on KorNLI followed by KorSTS achieves the best score (81.84).", "n_publication_ref": 5, "n_figure_ref": 0}, {"heading": "Effect of Translation on Data Quality", "text": "As noted in (Conneau et al., 2018), translation quality does not necessarily guarantee that the semantic relationships between sentences are preserved. We also translated each sentence independently and took the gold labels from the original English pair, so the resulting label might no longer be \"gold,\" due to both incorrect translations and (in rarer cases) linguistic differences that make it difficult to translate specific concepts.\nFortunately, it was also pointed out in (Conneau et al., 2018) that annotators could recover the NLI labels at a similar accuracy in translated pairs (83% in French) as in original pairs (85% in English). In addition, our baseline experiments in Section 4.1 show that supplementary training on KorNLI improves KorSTS performance (+1% for RoBERTa and +4-11% for XLM-R), suggesting that the labels of KorNLI are still meaningful. Another quantitative evidence is that the performance of XLM-R fine-tuned on KorNLI (80.3% with cross-lingual transfer) is within a comparable range of the model's performance on other XNLI languages (80.1% on average).\nNevertheless, we could also find some (not many) examples the gold label becomes incorrect after translating input sentences to Korean. For example, there were cases in which the two input sentences for KorSTS were so similar (with 4+ similarity scores) that upon translation, the two inputs simply became identical. In another case, the English word sir appeared in the premise of an NLI example and was translated to \u1109 \u1165 \u11ab\u1109 \u1162 \u11bc\u1102 \u1175 \u11b7, which is a correct word translation but is a gender-neutral noun, because there is no gender-specific counterpart to the word in Korean. As a result, when the hypothesis referencing the entity as the man got translated into \u1102 \u1161 \u11b7\u110c \u1161 (gender-specific), the English gold label (entailment) was no longer correct in the translated example. More systematically analyzing these errors is an interesting future work, although the amount of human efforts involved in this analysis would match that of labeling a new dataset.", "n_publication_ref": 2, "n_figure_ref": 0}, {"heading": "Conclusion", "text": "We introduced KorNLI and KorSTS-new datasets for Korean natural language understanding. Using these datasets, we also established baselines for Korean NLI and STS with both cross-encoding and bi-encoding approaches. Looking forward, we hope that our datasets and baselines will facilitate future research on not only improving Korean NLU systems but also increasing language diversity in NLU research.", "n_publication_ref": 0, "n_figure_ref": 0}, {"heading": "A Korean RoBERTa Pre-training", "text": "For the Korean RoBERTa baselines used in \u00a74, we pre-train a RoBERTa (Liu et al., 2019) model on an internal Korean corpora of size 65GB, consisting of online news articles (56GB), encyclopedia (7GB), movie subtitles (\u223c1GB), and the Sejong corpus 8 (\u223c0.5GB). We use fairseq , which includes the official implementation for RoBERTa.\nIn  compared to the original RoBERTa (English), the model architectures are identical except for the token embedding layer, as we use different vocabularies (32K sentencepiece vocab instead of 50K byte-level BPE). After training, the base and large models achieve validation perplexities of 2.55 and 2.39 respectively, where the validation set is a random 5% subset of the entire corpora.", "n_publication_ref": 1, "n_figure_ref": 0}, {"heading": "B Fine-tuning with Cross-encoding Approaches", "text": "To fine-tune Korean RoBERTa and XLM-R models using the cross-encoding approach ( \u00a74.1), we follow the fine-tuning procedures of RoBERTa (Liu et al., 2019)   The fine-tuning hyperparameters are summarized in Table 8. For each dataset and model size, we choose the hyperparameter configurations that are used in the corresponding English version of the dataset and model size (except for the XLM-R cross-lingual transfer using MNLI, where we also use the same hyperparameters as RoBERTa and XLM-R on KorNLI). We find that the hyperparameters used for English models and datasets give sufficiently good performances on the development set, so we do not perform an additional hyperparameter search. After training each model for 10 epochs, we choose the model checkpoint that achieve the highest score on the development set and evaluate it on the test set to obtain our final results in \u00a74.1.\nWe also report the development set scores for the best checkpoint in Table 9. We observe that the XLM-R models fine-tuned on KorNLI and KorSTS achieve the highest scores on the development set, although the Korean RoBERTa models perform better on the test set (Table 5 ", "n_publication_ref": 1, "n_figure_ref": 0}, {"heading": "C Fine-tuning with Bi-encoding Approaches", "text": "To fine-tune Korean RoBERTa and XLM-R models using the bi-encoding approach ( \u00a74.2), we train Korean Sentence RoBERTa (\"Korean SRoBERTa\") and Sentence XLM-R (\"SXLM-R\"), following the fine-tuning procedure of SentenceBERT (Reimers and Gurevych, 2019). Unless described otherwise, we follow the experimental settings, including all hyperparameters, of SentenceBERT 10 . For each model size, we manually search among learning rates {2e-5, 1e-5} for training on KorNLI, {1e-5, 2e-6} for training on KorSTS, and {1e-5, 2e-6} for training on KorSTS after KorNLI. After training until convergence, we choose the learning rate that lead to the highest KorSTS score on the development set. These hyperparameters are shown in Table 10.  We report the development set scores in Table 11. Korean SRoBERTa (large) achieves the best development set performance on both supervised settings, but SXLM-R (large) achieves the best performance for the KorNLI \u2192 KorSTS setting on test set.", "n_publication_ref": 1, "n_figure_ref": 0}, {"heading": "Acknowledgements", "text": "We thank Pulip Park for helping with hiring and contacting with the professional translators. We would also like to acknowledge Kakao Brain Cloud, which we used for our baseline experiments.", "n_publication_ref": 0, "n_figure_ref": 0}], "references": [{"title": "Semeval-2015 task 2: Semantic textual similarity, english, spanish and pilot on interpretability", "journal": "", "year": "2015", "authors": "Eneko Agirre; Carmen Banea; Claire Cardie; Daniel Cer; Mona Diab; Aitor Gonzalez-Agirre; Weiwei Guo; Inigo Lopez-Gazpio; Montse Maritxalar; Rada Mihalcea"}, {"title": "Semeval-2014 task 10: Multilingual semantic textual similarity", "journal": "", "year": "2014", "authors": "Eneko Agirre; Carmen Banea; Claire Cardie; Daniel Cer; Mona Diab; Aitor Gonzalez-Agirre; Weiwei Guo; Rada Mihalcea; German Rigau; Janyce Wiebe"}, {"title": "Semeval-2016 task 1: Semantic textual similarity, monolingual and cross-lingual evaluation", "journal": "", "year": "2016-06", "authors": "Eneko Agirre; Carmen Banea; Daniel Cer; Mona Diab; Aitor Gonzalez Agirre; Rada Mihalcea; German Rigau Claramunt; Janyce Wiebe"}, {"title": "ACL (Association for Computational Linguistics)", "journal": "", "year": "2016", "authors": ""}, {"title": "Semeval-2012 task 6: A pilot on semantic textual similarity", "journal": "", "year": "2012", "authors": "Eneko Agirre; Daniel Cer; Mona Diab; Aitor Gonzalez-Agirre"}, {"title": "* sem 2013 shared task: Semantic textual similarity", "journal": "", "year": "2013", "authors": "Eneko Agirre; Daniel Cer; Mona Diab; Aitor Gonzalez-Agirre; Weiwei Guo"}, {"title": "Enriching word vectors with subword information", "journal": "Transactions of the Association for Computational Linguistics", "year": "2017", "authors": "Piotr Bojanowski; Edouard Grave; Armand Joulin; Tomas Mikolov"}, {"title": "A large annotated corpus for learning natural language inference", "journal": "", "year": "2015", "authors": "R Samuel; Gabor Bowman; Christopher Angeli; Christopher D Potts;  Manning"}, {"title": "SemEval-2017 task 1: Semantic textual similarity multilingual and crosslingual focused evaluation", "journal": "Association for Computational Linguistics", "year": "2017", "authors": "Daniel Cer; Mona Diab; Eneko Agirre; I\u00f1igo Lopez-Gazpio; Lucia Specia"}, {"title": "Supervised learning of universal sentence representations from natural language inference data", "journal": "", "year": "2017", "authors": "Alexis Conneau; Douwe Kiela; Holger Schwenk; Lo\u00efc Barrault; Antoine Bordes"}, {"title": "Crosslingual language model pretraining", "journal": "", "year": "2019", "authors": "Alexis Conneau; Guillaume Lample"}, {"title": "XNLI: Evaluating cross-lingual sentence representations", "journal": "Association for Computational Linguistics", "year": "2018", "authors": "Alexis Conneau; Ruty Rinott; Guillaume Lample; Adina Williams; Samuel Bowman; Holger Schwenk; Veselin Stoyanov"}, {"title": "BERT: Pre-training of deep bidirectional transformers for language understanding", "journal": "Long and Short Papers", "year": "2019", "authors": "Jacob Devlin; Ming-Wei Chang; Kenton Lee; Kristina Toutanova"}, {"title": "Assin: Avaliacao de similaridade semantica e inferencia textual", "journal": "", "year": "2016", "authors": "E Fonseca; Marcelo Santos; S Criscuolo;  Aluisio"}, {"title": "A new algorithm for data compression", "journal": "C Users J", "year": "1994", "authors": "Philip Gage"}, {"title": "Japanese realistic textual entailment corpus", "journal": "European Language Resources Association", "year": "2020", "authors": "Yuta Hayashibe"}, {"title": "Poly-encoders: Architectures and pre-training strategies for fast and accurate multi-sentence scoring", "journal": "", "year": "2020", "authors": "Samuel Humeau; Kurt Shuster; Marie-Anne Lachaux; Jason Weston"}, {"title": "SentencePiece: A simple and language independent subword tokenizer and detokenizer for neural text processing", "journal": "Association for Computational Linguistics", "year": "2018", "authors": "Taku Kudo; John Richardson"}, {"title": "Korquad1. 0: Korean qa dataset for machine reading comprehension", "journal": "", "year": "2019", "authors": "Seungyoung Lim; Myungji Kim; Jooyoul Lee"}, {"title": "RoBERTa: A robustly optimized bert pretraining approach", "journal": "", "year": "2019", "authors": "Yinhan Liu; Myle Ott; Naman Goyal; Jingfei Du; Mandar Joshi; Danqi Chen; Omer Levy; Mike Lewis; Luke Zettlemoyer; Veselin Stoyanov"}, {"title": "fairseq: A fast, extensible toolkit for sequence modeling", "journal": "", "year": "2019", "authors": "Myle Ott; Sergey Edunov; Alexei Baevski; Angela Fan; Sam Gross; Nathan Ng; David Grangier; Michael Auli"}, {"title": "Sentence encoders on stilts: Supplementary training on intermediate labeled-data tasks", "journal": "", "year": "2018", "authors": "Jason Phang; Thibault F\u00e9vry; Samuel R Bowman"}, {"title": "Organizing the assin 2 shared task", "journal": "", "year": "2019", "authors": "Livy Real; Erick Fonseca; Hugo Gon\u00e7alo Oliveira"}, {"title": "Sentence-BERT: Sentence embeddings using Siamese BERTnetworks", "journal": "Association for Computational Linguistics", "year": "2019", "authors": "Nils Reimers; Iryna Gurevych"}, {"title": "Neural machine translation of rare words with subword units", "journal": "Long Papers", "year": "2016", "authors": "Rico Sennrich; Barry Haddow; Alexandra Birch"}, {"title": "Superglue: A stickier benchmark for general-purpose language understanding systems", "journal": "", "year": "2019", "authors": "Alex Wang; Yada Pruksachatkun; Nikita Nangia; Amanpreet Singh; Julian Michael; Felix Hill; Omer Levy; Samuel R Bowman"}, {"title": "GLUE: A multi-task benchmark and analysis platform for natural language understanding", "journal": "Association for Computational Linguistics", "year": "2018", "authors": "Alex Wang; Amanpreet Singh; Julian Michael; Felix Hill; Omer Levy; Samuel Bowman"}, {"title": "A broad-coverage challenge corpus for sentence understanding through inference", "journal": "Association for Computational Linguistics", "year": "2018", "authors": "Adina Williams; Nikita Nangia; Samuel Bowman"}, {"title": "Chris Tar, Yun-Hsuan Sung, Brian Strope, and Ray Kurzweil. 2019. Multilingual universal sentence encoder for semantic retrieval", "journal": "", "year": "", "authors": "Yinfei Yang; Daniel Cer; Amin Ahmad; Mandy Guo; Jax Law; Noah Constant; Gustavo Hernandez Abrego; Steve Yuan"}], "figures": [{"figure_label": "1", "figure_type": "table", "figure_id": "tab_0", "figure_caption": "shows the statistics of the KorNLI dataset. There are 942,854 training examples translated automatically and 7,500 evaluation (development and test) examples translated manually. The premises", "figure_data": "KorNLITotalTrainDev.TestSource-SNLI, MNLI XNLI XNLITranslated by-MachineHuman Human# Examples 950,354942,8542,4905,010# Words (P)13.613.613.013.1# Words (H)7.17.26.86.8"}, {"figure_label": "1", "figure_type": "table", "figure_id": "tab_1", "figure_caption": "Statistics of KorNLI dataset. The last two rows mean the average number of words in a Premise (P) and a Hypothesis (H), respectively.", "figure_data": ""}, {"figure_label": "2", "figure_type": "table", "figure_id": "tab_2", "figure_caption": "Examples from KorNLI dataset. P: Premise,", "figure_data": ""}, {"figure_label": "3", "figure_type": "table", "figure_id": "tab_3", "figure_caption": ", the KorSTS dataset comprises 5,749 training examples translated automatically and 2,879 evaluation examples translated manually. Examples are shown in Table4.", "figure_data": ""}, {"figure_label": "3", "figure_type": "table", "figure_id": "tab_5", "figure_caption": "Statistics of KorSTS dataset.", "figure_data": ""}, {"figure_label": "4", "figure_type": "table", "figure_id": "tab_6", "figure_caption": "Examples from KorSTS dataset.", "figure_data": ""}, {"figure_label": "5", "figure_type": "table", "figure_id": "tab_8", "figure_caption": "", "figure_data": "KorSTSUnsupervisedSupervisedModel# Params.-Trained on: KorNLITrained on: KorSTSTrained on: KorNLI \u2192 KorSTSKorean fastText-47.96---M-USECNN (base)68.9M-\u2020 72.74--M-USECNN (large)85.2M-\u2020 76.32--Korean SRoBERTa (base)111M48.9674.1978.9480.29Korean SRoBERTa (large)338M51.3575.4679.5580.49SXLM-R (base)270M45.0573.9968.3679.13SXLM-R (large)550M39.9277.0177.7181.84"}, {"figure_label": "6", "figure_type": "table", "figure_id": "tab_9", "figure_caption": "KorSTS test set scores (100 \u00d7 Spearman correlation) of bi-encoding models. Note that the first two columns of results are unsupervised w.r.t. KorSTS, and the latter two are supervised w.r.t. KorSTS.", "figure_data": ""}, {"figure_label": "7", "figure_type": "table", "figure_id": "tab_10", "figure_caption": "", "figure_data": ", we list all hyperparameters we usefor Korean RoBERTa pre-training. Note that,8 https://ithub.korean.go.kr/user/guide/corpus/guide1.do"}, {"figure_label": "7", "figure_type": "table", "figure_id": "tab_11", "figure_caption": "", "figure_data": ": Hyperparameters for Korean RoBERTa pre-training. * For the large model, we initially scheduledour learning rate to decay to zero at 2M steps. After500K steps, however, we observed no significant im-provement in the KorNLI and KorSTS fine-tuning per-formance."}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_12", "figure_caption": "on MNLI and STS-B, as described in RoBERTa's code release 9 .", "figure_data": "HyperparameterKorNLI KorSTSBatch Size3216Learning Rate Schedule LinearLinearPeak Learning Rate1e-52e-5# Warmup Steps7318214Total # Updates1219793596"}, {"figure_label": "8", "figure_type": "table", "figure_id": "tab_13", "figure_caption": "", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_14", "figure_caption": "in \u00a74.1). Both models outperform the cross-lingual transfer models on the development set, as is the case on the test set.", "figure_data": "Model# Params.  \u2020 KorNLI KorSTSFine-tuned on Korean training setKorean RoBERTa (base)111M81.9784.97Korean RoBERTa (large) 338M83.1787.82XLM-R (base)270M79.2083.02XLM-R (large)550M84.4288.37Fine-tuned on English training set (Cross-lingual Transfer)XLM-R (base)270M74.34-XLM-R (large)550M81.45-"}, {"figure_label": "9", "figure_type": "table", "figure_id": "tab_15", "figure_caption": "KorNLI and KorSTS development set scores for fine-tuned cross-encoding language models. Ko-rNLI scores are accuracy (%) and KorSTS scores are 100 \u00d7 Spearman correlation. \u2020 To ensure comparability with XNLI, we only use the MNLI portion of the KorNLI dataset.", "figure_data": ""}, {"figure_label": "10", "figure_type": "table", "figure_id": "tab_16", "figure_caption": "Learning rates for Korean SRoBERTa and SXLM-R fine-tuning using the bi-encoding approach.", "figure_data": ""}], "doi": "10.18653/v1/D15-1075"}