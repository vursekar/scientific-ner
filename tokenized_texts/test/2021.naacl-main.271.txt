Better Feature Integration for Named Entity Recognition
Lu Xu1 , 2 , Zhanming Jie1 , 3 , Wei Lu1 , Lidong Bing2 1 StatNLP Research Group , Singapore University of Technology and Design 2 DAMO Academy , Alibaba Group 3 ByteDance xu_lu@mymail.sutd.edu.sg , allan@bytedance.com luwei@sutd.edu.sg , l.bing@alibaba-inc.com
Abstract
It has been shown that named entity recognition ( NER ) could beneﬁt from incorporating the long - distance structured information captured by dependency trees .
We believe this is because both types of features – the contextual information captured by the linear sequences and the structured information captured by the dependency trees may complement each other .
However , existing approaches largely focused on stacking the LSTM and graph neural networks such as graph convolutional networks ( GCNs ) for building improved NER models , where the exact interaction mechanism between the two different types of features is not very clear , and the performance gain does not appear to be signiﬁcant .
In this work , we propose a simple and robust solution to incorporate both types of features with our SynergizedLSTM ( Syn - LSTM ) , which clearly captures how the two types of features interact .
We conduct extensive experiments on several standard datasets across four languages .
The results demonstrate that the proposed model achieves better performance than previous approaches while requiring fewer parameters .
Our further analysis demonstrates that our model can capture longer dependencies compared with strong baselines.1
1
Introduction
Named entity recognition ( NER ) is one of the most fundamental and important tasks in natural language processing ( NLP ) .
While the literature ( Peters et al , 2018 ; Akbik et al , 2018 ; Devlin et al , 2019 ) largely focuses on training deep language models to improve the contextualized word representations , previous studies show that
∗ Lu Xu is under the Joint PhD Program between Alibaba and Singapore University of Technology and Design .
The work was done when Zhanming Jie was a PhD student in Singapore University of Technology and Design .
1We make our code publicly available at https://
github.com/xuuuluuu/SynLSTM-for-NER .
Precision Castparts Corp.
, Portlan , will begin trading with the symbol PCP .
ORG
PRODUCT
?
ORG
Dependency Path : Corp. begin trading with symbol PCP
Hybrid Paths : Corp. begin .
PCP OR Corp. begin trading with the symbol PCP
neighbor
context
Figure 1 : A sentence annotated with dependency trees and named entities .
The paths to connect two entities are shown below the sentence .
the structured information such as interactions between non - adjacent words can also be important for NER ( Finkel et al , 2005 ; Jie et al , 2017 ; Aguilar and Solorio , 2019 ) .
However , sequence models such as bidirectional LSTM ( Hochreiter and Schmidhuber , 1997 ) are not able to fully capture the long - range dependencies ( Bengio , 2009 ) .
For instance , Figure 1 ( top ) shows one type of structured information in NER .
The words “ Precision Castparts Corp. ” can be easily inferred as ORGANIZATION by its context ( i.e. , Corp. ) .
However , the second entity “ PCP ” could be misclassiﬁed as a PRODUCT entity if a model relies more on the context “ begin trading with ” but ignores the hidden information that “ PCP ” is the symbol of “ Precision Castparts Corp. ” .
Previous research works ( Li et al , 2017 ; Jie and Lu , 2019 ; Wang et al , 2019 ) have been using the parse trees ( Chomsky , 1956 , 1969 ; Sandra and Taft , 2014 ) to incorporate such structured information .
Figure 1 ( Dependency Path ) shows that the ﬁrst entity can be connected to the second entity following the dependency tree with 5 hops .
Incorporating the dependency information can be done with graph neural networks ( GNNs ) such as graph convolutional networks ( GCNs ) ( Kipf and Welling , 2017 ) .
However , simply stacking the LSTM and GCN architectures for NER can only provide us with modest improvements ; sometimes , it decreases performance ( Jie and Lu , 2019 ) .
Based on the depenProceedingsofthe2021ConferenceoftheNorthAmericanChapteroftheAssociationforComputationalLinguistics : HumanLanguageTechnologies , pages3457–3469June6–11,2021. © 2021AssociationforComputationalLinguistics3457  dency path in Figure 1 , it requires a 5 - layer GCN to capture the connections between these two entities .
However , deep GCN architectures often face training difﬁculties , which cause a performance drop ( Hamilton et al , 2017b ; Kipf and Welling , 2017 ) .
Directly stacking GCN and LSTM has difﬁculties in modeling the interaction between dependency trees and contextual information .
To address the above limitations , we propose the Synergized - LSTM ( Syn - LSTM ) , a new recurrent neural network architecture that considers an additional graph - encoded representation to update the memory and hidden states , as shown in Figure 2 .
More speciﬁcally , the graph - encoded representation for each word can be obtained with GCNs .
Our proposed Syn - LSTM allows the cell to receive the structured information from the graph - encoded representation .
With the newly designed gating mechanism , our model is able to make independent assessments on the amounts of information to be retrieved from the word representation and the graph - encoded representation respectively .
Such a mechanism allows for better integration of both contextual and structured information .
Our contributions can be summarized as :
• We propose a simple and robust Syn - LSTM model to better incorporate the structured information conveyed by dependency trees .
The output of the Syn - LSTM cell is jointly determined by both contextual and structured information .
We adopt the classic conditional random ﬁelds ( CRF ) ( Lafferty et al , 2001 ) on top of the Syn - LSTM for NER .
• We conduct extensive experiments on several standard datasets across four languages .
The proposed model signiﬁcantly outperforms previous approaches on these datasets .
• We show that the proposed model can capture long - distance interactions between entities .
Our further analysis statistically demonstrates the proposed gating mechanism is able to aggregate the structured information selectively .
Current Hidden
ht
×
+
+
× ˜ct mt σ tanh
× ˜st tanh
ot
σ
ft σ
it σ
tanh
×
Previous Cell
ct-1
Previous Hidden
ht-1
Current Cell
ct
Current Hidden
ht
Current Input
xt
gt Graph - encoded
Representation
Figure 2 : Syn - LSTM cell .
t is the current time step .
contextual and structured information .
The graphencoded representation gt can be derived from Graph Neural Networks ( GNNs ) such as GCN ( Kipf and Welling , 2017 ) , which are capable of bringing in structured information through graph structure ( Hamilton et al , 2017a ) .
However , structured information sometimes is hard to encode , as we can see from the example in Figure 1 .
One naive approach is to use a deep GNN to capture such information along multiple dependency arcs between two words , which could mess up information and lead to training difﬁculties .
A straightforward solution is to integrate both structured and contextual information via LSTM .
As shown in Figure 1 ( Hybrid Paths ) , the structured information can be passed to neighbors or context , which allows a model to use less number of GNN layers and alleviate such issues for long - range dependencies .
The input to the LSTM can simply be the concatenation of word representation xt and gt at each position ( Jie and Lu , 2019)2 .
However , because such an approach requires both xt and gt to decide the value of the input gate jointly , it could be a potential victim of two sources of uncertainties : 1 ) the uncertainty of the quality of graph - encoded representation gt , and 2 ) the uncertainty of the exact interaction mechanism between the two types of features .
These may lead to sub - optimal performance , especially if the graph - encoded representation gt is unsatisfactory .
Thus , we need to design a new approach to incorporate both types of information from xt and gt with a more explicit interaction mechanism , with which we hope to alleviate the above issues .
2They concatenate the current word and head word repre2 Synergized - LSTM
2.1
Incorporating Structured Information
To incorporate the long - range dependencies , we consider an additional graph - encoded representation gt ( Figure 2 ) as the model input to integrate
sentations .
3458  2.2 Syn - LSTM Cell
We propose the Synergized - LSTM ( Syn - LSTM ) to better integrate the contextual and structured information to address the above limitations .
The inputs of the Syn - LSTM cell include previous cell state ct−1 , previous hidden state ht−1 , current cell input xt , and an additional graph - encoded representation gt .
The outputs of the Syn - LSTM cell include current cell state ct and current hidden state ht .
Within the cell , there are four gates : input gate it , forget gate ft , output gate ot , and an additional new gate mt to control the ﬂow of information .
Note that the forget gate ft and output gate ot are not just looking at ht−1 and xt ; they are also affected by the graph - encoded representation gt .
The cell state ct and hidden state ht are computed as follows :
ft = σ(W ( f ) xt
+ U ( f ) ht−1 + Q(f ) gt + b(f ) )
( 1 )
ot = σ(W ( o)xt + U ( o)ht−1 + Q(o)gt + b(o ) )
it = σ(W ( i)xt + U ( i)ht−1 + b(i ) )
mt = σ(W ( m)gt + U ( m)ht−1 + b(m ) ) ˜ct = tanh(W ( u)xt + U ( u)ht−1 + b(u ) ) ˜st
= tanh(W ( n)gt + U ( n)ht−1 + b(n ) )
ct = ft ( cid:12 ) ct−1 + it ( cid:12 ) ˜ct + mt ( cid:12 ) ˜st ht = ot ( cid:12 ) tanh(ct )
( 2 )
( 3 )
( 4 )
( 5 )
( 6 )
( 7 )
( 8)
where σ is the sigmoid function , W ( · ) , U ( · ) , Q ( · ) and b ( · ) are learnable parameters .
The additional new gate mt is used to control the information from the graph - encoded representation directly .
Such a design allows the original input gates it and our new gate mt to make independent assessments on the amounts of information to be retrieved from the word representation xt
and the graph - encoded representation gt respectively .
On the other hand , we also have a different candidate state ˜st to represent the cell state that corresponds to the graph - encoded representation separately .
With the proposed Syn - LSTM , the structured information captured by the dependency trees can be passed to each cell , and the additional gate mt is able to control how much structured information can be incorporated .
The additional gate enables the model to feed the contextual and structured information into the LSTM cell separately .
Such a mechanism allows our model to aggregate the information from linear sequence and dependency trees selectively .
yt−1
yt
yt+1
yt+2
Syn - LSTM
Syn - LSTM
Syn - LSTM
Syn - LSTM
xt-1
gL t-1
xt
gL t
xt+1
gL t+1
xt+2
gL t+2
Graph Convolutional Network
g0 t-1
g0 t
g0
t+1
g0
t+2
Figure 3 : Syn - LSTM - CRF architecture .
Similar to the previous work ( Levy et al , 2018 ) , it is also possible to show that the cell state ct implicitly computes the element - wise weighted sum of the previous states by expanding Equation 7 :
ct = ft ( cid:12 ) ct−1 + it ( cid:12 ) ˜ct + mt ( cid:12 ) ˜st t ( cid:89 )
t ( cid:88 )
=
( ij ( cid:12 )
fk ) ( cid:12 )
˜cj
( 9 )
j=0
t ( cid:88 )
j=0
t ( cid:88 )
j=0
k = j+1
t ( cid:89 )
k = j+1
t ( cid:88 )
j=0
+
( mj ( cid:12 )
fk ) ( cid:12 ) ˜sj
( 10 )
=
at j ( cid:12 ) ˜cj +
qt j ( cid:12 ) ˜sj
( 11 )
j and qt
Note that the two terms , at
j , are the product of gates .
The value of the two terms are in the range from 0 to 1 .
Since the ˜ct and ˜st represent contextual and structured features , the corresponding weights control the ﬂow of information .
3 Syn - LSTM - CRF
The goal of named entity recognition is to predict the label sequence
y = { y1 , y2 , ... , yn } given the input sequence w = { w1 , w2 , ... , wn } , where wt represents the t - th word and n is the number of words .
Our model is mainly constructed with three layers : input representation layer , bi - directional Syn - LSTM layer , and CRF layer .
The architecture of our Syn - LSTM - CRF is shown in Figure 3 .
Input Representation Layer Similar to the work by Lample et al ( 2016 ) , our input representation also includes the character embeddings , which are the hidden states of character - based BiLSTM .
Jie and Lu ( 2019 ) highlight that the dependency relation helps to enhance the input representation .
Furthermore , previous methods ( Wang et al , 2018 ;
3459  Wang and Lu , 2018 ) use embeddings of part - ofspeech ( POS ) tags as additional input representation .
The input representation xt of our model is the concatenation of the word embedding vt , the character representation et , the dependency relation embedding rt , and the POS embedding pt :
xt
=
[ vt ; et ; rt ; pt ]
( 12 )
English
where both rt and pt embeddings are randomly initialized and are ﬁne - tuned during training .
For experiments with the contextualized representations ( e.g. , BERT ( Devlin et al , 2019 ) ) , we further concatenate the contextual word representation to xt .
For our task , we employ the graph convolutional network ( Kipf and Welling , 2017 ; Zhang et al , 2018b ) to get the graph - encoded representation gt .
Given a graph , an adjacency matrix A of size n × n is able to represent the graph structure , where n is the number of nodes ; Ai , j = 1 indicates that node i and node j are connected .
We transform dependency tree into its corresponding adjacency matrix3
A , and Ai , j = 1 denotes that node i and node j have dependency relation .
Note that the purpose of graph - encoded representation gt is to incorporate the dependency information from neighbor nodes .
The input and output representations of the l - th layer GCN at t - th position are denoted as gl−1 and gl t respectively .
Similar to the work by Zhang et al ( 2018b ) , we use dt = ( cid:80)n j=1
At , j , which is the total number of neighbors of node t , to normalize the representation before going through the nonlinear function .
The GCN operation is deﬁned as :
t
gl t = ReLU (
At , jW lgl−1
/dt + bl )
t
( 13 )
n ( cid:88 )
j=1
where W l is a linear transformation and bl is a bias .
The initial g0 t is the concatenation of word embedding vt , character embedding et , and dependency relation embedding rt : g0
t =
[ vt ; et ; rt ] .
Bi - directional Syn - LSTM Layer With the word representation xt and the graph - encoded representation gt , a bi - directional Syn - LSTM is applied to generate contextual representation .
The forward and backward Syn - LSTM enable the model to integrate the contextual and structured information from both directions .
We concatenate the hidden −→ ht from forward Syn - LSTM and hidden state state
3We treat the dependency edge as undirected and add a
self - loop for each node : Ai , j = Aj , i and Ai , i = 1 .
Dataset
# Sent .
# Entity in Sentence Length
≤ 14
15 - 29
30 - 44
45 - 59 ≥ 60
Catalan
Spanish
Chinese
Train Dev Test
Train Dev Test
Train Dev Test
Train Dev Test
8,709 1,445 1,698
9,022 1,419 1,705
59,924 8,528 8,262
36,487 6,083 4,472
944 135 243
855 125 175
13,309 1,778 1,785
8,424 1,493 968
4,821 836 919
4,031 612 703
33,853 4,830 4,673
21,033 3,250 2,517
5,309 815 946
6,656 911 1,143
22728 2,882 3,171
17,260 2,284 2,149
2,815 477 518
4,279 707 783
8,099 1,051 1,082
8,392 1,099 1,024
1,389 168 284
1,446 260 242
3,839 525 546
7,434 978 836
Table 1 : Statistics of datasets .
←− ht from backward Syn - LSTM to form the contextual representation of t - th token : ht =
[
←− ht ] .
−→ ht ;
CRF Layer The CRF ( Lafferty et al , 2001 ) is widely used in NER tasks as it is capable of capturing the structured correlations between adjacent output labels .
Given the sentence w and dependency tree τ , the probability of the label sequence y is deﬁned as :
P ( y|w , τ )
=
exp(score(w , τ , y ) ) y(cid:48 ) exp(score(w , τ , y(cid:48 ) ) )
( cid:80 )
( 14 )
The score function is deﬁned as :
score(w , τ , y )
=
Tyt , yt+1 +
Eyt
( 15 )
n ( cid:88 )
t=0
n ( cid:88 )
t=1
where Tyt , yt+1 denotes the transition score from label yt to yt+1 , Eyt denotes the score of label yt at the t - th position and the scores are computed using the hidden state ht .
We learn the model parameters by minimizing the negative log - likelihood and employ the Viterbi algorithm to obtain the best label sequence during evaluation .
4 Experiments
Datasets The proposed model is evaluated on four benchmark datasets : SemEval 2010 Task 1 ( Recasens et al , 2010 )
Catalan and Spanish datasets , and OntoNotes 5.0 ( Weischedel et al , 2013 ) English and Chinese datasets .
We choose these four datasets as they have explicit dependency annotations which allow us to evaluate the effectiveness of our approach when dependency trees of different qualities are used .
For SemEval 2010 Task 1 datasets , there are 4 entity types : PER , LOC and ORG and MISC .
For OntoNotes 5.0 datasets , there are 18 entity types in total .
Following the work
3460  by Jie and Lu ( 2019 ) , we transform the parse trees into the Stanford dependency trees ( De Marneffe and Manning , 2008 ) by using Stanford CoreNLP ( Manning et al , 2014 ) .
Detailed statistics of each dataset can be found in Table 1 .
Intuitively , longer sentences would require the model to capture more long - distance interactions in the sentences .
We present the number of entities in terms of different sentence lengths to show that these datasets have a modest amount of entities in long sentences .
Experimental Setup For Catalan , Spanish , and Chinese , we use the FastText ( Grave et al , 2018 ) 300 dimensional embeddings to initialize the word embeddings .
For OntoNotes 5.0 English , we adopt the publicly available GloVE ( Pennington et al , 2014 ) 100 dimensional embeddings to initialize the word embeddings .
For experiments with the contextualized representation , we adopt the pre - trained language model BERT ( Devlin et al , 2019 ) for the four datasets .
Speciﬁcally , we use bert - as - service ( Xiao , 2018 ) to generate the contextualized word representation without ﬁne - tuning .
Following Luo et al ( 2020 ) , we use the cased version of BERT large model for the experiments on the OntoNotes 5.0 English data .
We use the cased version of BERT base model for the experiments on the other three datasets .
For the character embedding , we randomly initialize the character embeddings and set the dimension as 30 , and set the hidden size of character - level BiLSTM as 50 .
The hidden size of GCN and Syn - LSTM is set as 200 , the number of GCN layer is 2 .
We adopt stochastic gradient descent ( SGD ) to optimize our model with batch size 100 , L2 regularization 10−8 , initial learning rate lr 0.2 and the learning rate is decayed4 with respect to the number of epoch .
We select the best model based on the performance on the dev set5 and apply it to the test set .
We use the bootstrapping t - test to compare the results .
Baselines We compare our model with several baselines with or without dependency tree information .
The ﬁrst one is BERT - CRF , where we apply a CRF layer on top of BERT ( Devlin et al , 2019 ) .
Secondly , we compare with the BERT implementation by HuggingFace ( Wolf et al , 2019 ) .
For models with dependency trees , we take the models BiLSTM - GCN - CRF and dependency4We set the decay as 0.1 and the learning rate for each
epoch equals to lr/(1 + decay ∗ ( epoch − 1 ) ) .
5The experimental results on the dev set and other experimental details can be found in the Appendix .
Models
BiLSTM - CRF† BiLSTM - GCN - CRF† GCN - BiLSTM - CRF∗ DGLSTM - CRF ( 2019 ) Syn - LSTM - CRF ( Ours )
Catalan
Spanish
P.
R.
F1
P.
R.
F1
76.83 63.47 69.51 78.33 69.89 73.87 81.25 75.22 78.12 84.10 79.88 81.93 80.95 74.19 77.43 84.36 79.48 81.85 83.35 80.00 81.64 84.05 82.90 83.47 83.90 81.65 82.76 86.22 84.24 85.09
†
+
Contextualized Word Representation BERT - CRF∗ 76.34 76.05 76.19 79.30 77.22 78.24 Wolf et al ( 2019)∗ 82.82 85.7 84.23 81.36 85.58 83.42 77.85 76.22 77.03 81.72 79.09 80.38 BiLSTM - CRF + ELMO ∗ 81.21 79.90 80.55 83.28 80.11 81.66 BiLSTM - CRF + BERT 83.68 83.16 83.42 85.31 85.19 85.25 BiLSTM - GCN - CRF+ ELMO ∗ 87.60 86.39 86.99 88.07 87.46 87.76 GCN - BiLSTM - CRF+ BERT DGLSTM - CRF ( 2019)+ ELMO 84.71 83.75 84.22 87.79 87.33 87.56 85.92 84.50
85.20 85.67 85.00 85.33 DGLSTM - CRF+ BERT Syn - LSTM - CRF+ BERT ( Ours ) 89.07 89.04 89.05 89.66 90.54 90.10
∗
†
Table 2 : Experimental results
[ % ] on SemEval 2010 Task 1 Catalan and Spanish test set .
The models with * symbol are our implementations .
The models with † symbol are retrieved from Jie and Lu ( 2019 ) .
guided LSTM - CRF ( DGLSTM - CRF ) proposed by Jie and Lu ( 2019 ) , and our implemented GCNBiLSTM - CRF .
The BiLSTM - GCN - CRF model simply stacks the GCN on top of the BiLSTM to incorporate the dependency trees .
The GCNBiLSTM - CRF model takes the concatenation of the graph - encoded representation from GCN and word embedding as input into BiLSTM .
The DGLSTMCRF takes the concatenation of the head word representation and word embedding as input into BiLSTM .
Note that the original implementation of DGLSTM - CRF uses ELMo ( Peters et al , 2018 ) , but we also implement it with BERT .
Besides , we compare our model with previous works that have results on these datasets .
4.1 Main Results
SemEval 2010 Task 1 Table 2 shows comparisons of our model with baseline models on the SemEval
2010 Task 1 Catalan and Spanish datasets .
Our Syn - LSTM - CRF model outperforms all existing models with F1 82.76 and 85.09 ( p < 10−5 ) compared to DGLSTM - CRF on Catalan and Spanish datasets when FastText word embeddings are used .
Our model outperforms the BiLSTM - CRF model by 13.25 and 11.22 F1 points , and outperforms BiLSTM - GCN - CRF ( Jie and Lu , 2019 ) model by 4.64 and 3.16 on Catalan and Spanish .
The large performance gap between BiLSTMGCN - CRF and our model indicates that SynLSTM - CRF shows better compatibility with GCN , and this conﬁrms that simply stacking GCN on top of the BiLSTM does not perform well .
Our method outperforms GCN - BiLSTM - CRF model
3461  by 5.33 and 3.24 F1 points on Catalan and Spanish .
This shows that our proposed model demonstrates a better integration of contextual information and structured information .
Furthermore , our proposed method brings 1.12 and 1.62 F1 points improvement on Catalan and Spanish datasets compare to the DGLSTM - CRF ( Jie and Lu , 2019 ) .
The DGLSTM - CRF employs 2 - layer dependency guided BiLSTM to capture grandchild dependencies , which leads to longer training time and more model parameters .
However , our Syn - LSTM - CRF is able to get better performance with fewer model parameters and shorter training time because of the fewer LSTM layers .
Such results demonstrate that our proposed Syn - LSTM - CRF manages to capture structured information effectively .
Furthermore , with the contextualized word representation , the Syn - LSTM - CRF+ BERT achieves much higher performance improvement than any other method .
Our model outperforms the strong baseline model DGLSTM - CRF+ ELMO by 4.83 and 2.54 in terms of F1 ( p < 10−5 ) on Catalan and Spanish , respectively .
OntoNotes 5.0 English To understand the generalizability of our model , we evaluate the proposed Syn - LSTM - CRF model on large scale OntoNotes 5.0 datasets .
Table 3 shows comparisons of our model with baseline models on English .
Our SynLSTM - CRF model outperforms all existing methods with 89.04 in terms of F1 score ( p < 0.01 ) compared to DGLSTM - CRF , when GloVE word embeddings are used .
Our model outperforms the BiLSTM - CRF model by 1.97 in F1 , BiLSTMGCN - CRF ( Jie and Lu , 2019 ) model by 0.86 .
Note that our implemented GCN - BiLSTM - CRF outperforms the previous DGLSTM - CRF ( Jie and Lu , 2019 ) by 0.14 in F1 .
Our Syn - LSTM - CRF further brings the improvement to 0.52 .
Moreover , with the contextualized word representation BERT , our method achieves an F1 score of 90.85 ( p < 10−5 ) compared to DGLSTM - CRF+ ELMO .
Our method outperforms the previous model ( Luo et al , 2020 ) , which relies on document - level information , by 0.55 in F1 .
Furthermore , the performance improvement on recall is more prominent as compared to precision .
This shows that the proposed SynLSTM - CRF is able to extract more entities .
OntoNotes 5.0 Chinese We present the experimental results on the OntoNotes 5.0 Chinese test set in Table 4 .
Our model still consistently outperModels
P.
R.
Chiu and Nichols ( 2016a ) Li et al ( 2017 )
Strubell et al ( 2017 ) Ghaddar and Langlais ( 2018 ) BiLSTM - CRF† BiLSTM - GCN - CRF† GCN - BiLSTM - CRF∗ DGLSTM - CRF ( 2019 )
Luo et al ( 2020 ) Syn - LSTM - CRF ( Ours )
86.04 88.00 87.21 88.30 88.56 88.53 88.96
86.53 86.50 86.93 88.06 88.76 88.50 89.13
†
+ Contextualized Word Representation Akbik et al ( 2018 ) BERT - CRF∗ Wolf et al ( 2019)∗ BiLSTM - CRF+ ELMO ∗ BiLSTM - CRF+ BERT BiLSTM - GCN - CRF+ ELMO ∗ GCN - BiLSTM - CRF+ BERT DGLSTM - CRF (
2019)+ ELMO DGLSTM - CRF+ BERT Luo et al ( 2020)+ BERT Syn - LSTM - CRF+ BERT ( Ours )
88.42 88.39 89.14 89.32 89.40 89.34 89.59 89.63 90.14
88.33 90.29 88.59 90.02 89.71 91.26 90.17 89.87 91.58
∗
†
F1
86.28 87.21 86.84 87.95 87.07 88.18 88.66 88.52 87.98 89.04
89.30 88.37 89.33 88.87 89.67 89.55 90.29 89.88 89.75 90.30 90.85
Table 3 : Experimental results
[ % ] on OntoNotes 5.0 English test set .
The models with * symbol are our implementations .
The models with † symbol are retrieved from Jie and Lu ( 2019 ) .
There are also other methods ( Li et al , 2020a , b ) that use external information , ( Yu et al , 2020 ) use document - level information to encode the sentence , which are not direct comparisons to ours .
forms the baseline models , speciﬁcally by 2.04 in F1 compared to BiLSTM - CRF , by 2.39 compared to BiLSTM - GCN - CRF , by 1.86 compared to GCNBILSTM - CRF and by 1.11 ( p < 10−5 ) compared to DGLSTM - CRF when FastText is used .
Note that the baseline BiLSTM - GCN - CRF model is 0.35 points worse than BiLSTM - CRF .
Such results further conﬁrm the effectiveness of our proposed SynLSTM - CRF for incorporating structured information .
We ﬁnd a similar behavior when the contextualized word representation BERT is used .
With the contextualized word representation , we achieve a higher F1 score of 80.20 .
5 Analysis
Robustness Analysis To study the robustness of our model and check whether our model can regulate the ﬂow of information from the graphencoded representation , we analyze the inﬂuence of the quality of dependency trees .
We train and evaluate an additional dependency parser ( Dozat and Manning , 2017 ) .
Speciﬁcally , we train the
3462  Models
Pradhan et al ( 2013 ) Lattice LSTM ( 2018 ) BiLSTM - CRF† BiLSTM - GCN - CRF† GCN - BiLSTM - CRF∗ DGLSTM - CRF ( 2019 ) Syn - LSTM - CRF ( Ours )
P.
R.
78.20 76.34 78.45 76.35 78.30 77.40 77.95
66.45 77.01 74.59 75.89 75.07 77.41 79.07
†
+ Contextualized Word Representation BERT - CRF∗ Wolf et al ( 2019)∗ BiLSTM - CRF+ ELMO ∗ BiLSTM - CRF+ BERT BiLSTM - GCN - CRF+ ELMO ∗ GCN - BiLSTM - CRF+ BERT DGLSTM - CRF ( 2019)+ ELMO DGLSTM - CRF+ BERT Syn - LSTM - CRF+ BERT ( Ours )
79.83 77.35 79.20 78.45 78.71 79.03 78.86 77.79 78.66
79.68 81.74 79.21 81.24 79.29 80.98 81.00 81.65 81.80
∗
†
F1
71.85 76.67 76.47 76.12 76.65 77.40 78.51
79.75 79.49 79.20 79.82 79.00 80.00 79.92 79.67 80.20
2
1
0
100
90
80
70
60
Table 4 : Experimental results
[ % ] on OntoNotes 5.0 Chinese test set .
The models with * symbol are our implementations .
The models with † symbol are retrieved from Jie and Lu ( 2019 ) .
There are also other methods ( Li et al , 2020a , b ) that use external information , which are not direct comparisons to ours .
dependency parser6 on the given training datasets and select the best model based on the dev sets .
Then we apply the best model to the test sets to obtain dependency trees .
We also train and evaluate our model with random dependency trees .
Table 8 presents the comparisons between Syn - LSTMCRF+ BERT and DGLSTM - CRF+ ELMO with given , predicted and random dependency trees .
We observe that both models encounter a performance drop when we use the predicted parse trees and random trees .
Our performance differences with the given parse trees are relatively smaller than the corresponding differences in DGLSTM - CRF+ ELMO .
Such an observation demonstrates the robustness of our proposed model against structured information from the trees of different quality .
It is worthwhile to note that , with the predicted dependencies , our proposed Syn - LSTM - CRF+ BERT is still able to outperform the strong baseline DGLSTM - CRF+ ELMO even with the given parse trees on Catalan , English , and Chinese datasets .
To further study the robustness , we conduct an analysis to investigate if the gate mt ( Figure 2 ) has the ability to regulate the ﬂow of information from the graph - encoded representation .
Intuitively , the gate mt should tend to have a small value when
6The performance of the dependency parser can be found
in the Appendix .
2
1
0
100
90
80
70
60
· 107
· 107
With Random Parse Tree
With Given Parse Tree
With Random Parse Tree
With Given Parse Tree
0 - 0.4
0.4 - 0.5
0.5 - 0.6
0.6 - 0.7
0.7 - 0.8
0.8 - 0.9
0.9 - 1
0 - 0.4
0.4 - 0.5
0.5 - 0.6
0.6 - 0.7
0.7 - 0.8
0.8 - 0.9
0.9 - 1
Figure 4 : Left : Catalan , Right : Spanish .
x - axis : the value of gate mt .
y - axis : the number of words .
BiLSTM - CRF+ BERT DGLSTM - CRF+ ELMO Syn - LSTM - CRF+ BERT
BiLSTM - CRF+ BERT DGLSTM - CRF+ ELMO Syn - LSTM - CRF+ BERT
≤ 14 15 - 29 30 - 44 45 - 59 ≥ 60
≤ 14 15 - 29 30 - 44 45 - 59 ≥ 60
Figure 5 : Left : Catalan , Right : Spanish .
x - axis : y - axis : F1 score ( % ) .
Note that sentence length .
DGLSTM - CRF+ ELMO have better performance compared to DGLSTM - CRF+ BERT based on Table 2 , 3 , 4 .
the quality of the parse tree is not good ( e.g. , with random trees ) .
We statistically plot the number of words with respect to different gate value ranges ( mt ) .
Figure 4 shows the comparison between the models of using random trees and given trees on Catalan and Spanish7 .
We observe that the gate mt is more likely to open ( the value is higher ) when we use the given parse trees compared with random parse trees .
Such behavior demonstrates that our proposed model can selectively aggregate the information from the graph - encoded representation .
Effect of Sentence Length We compare the performance of our Syn - LSTM - CRF+ BERT with BiLSTM - CRF+ BERT and DGLSTM - CRF+ ELMO models with respect to sentence length , and the results are shown in Figure 5 .
We observe that the SynLSTM - CRF+ BERT model consistently outperforms the two baseline models on the four languages8 .
In particular , although the performance tends to drop as the sentence length increases , our proposed model shows relatively better performance when the sentence length is ≥ 60 .
This conﬁrms that the proposed Syn - LSTM - CRF+ BERT is able to effectively incorporate structured information .
Note that our 2 - layer GCN is computed based on the
7We found a similar behavior for OntoNotes 5.0 English and Chinese datasets , and the detailed result can be found in the Appendix .
8See the Appendix for the results on OntoNotes 5.0 English
and Chinese datasets .
3463  Models
Catalan
Spanish
English
Chinese
P.
R.
P.
R.
P.
R.
P.
R.
DGLSTM - CRF+ ELMO ( Given ) DGLSTM - CRF+ ELMO ( Predicted )
Differences DGLSTM - CRF+ ELMO ( Random ) Differences
Syn - LSTM - CRF+ BERT ( Given ) Syn - LSTM - CRF+ BERT ( Predicted )
Differences Syn - LSTM - CRF+ BERT ( Random ) Differences
84.71 78.99 -5.72
89.07 87.33 -1.74 84.57 -4.50
83.75 79.31 -4.44
89.04 87.42 -1.62 85.53 -3.51
F1
84.22 82.37 -1.85 79.15 -5.07
89.05 87.38 -1.67 85.05 -4.00
87.79 82.11 -5.68
89.66 86.50 -3.16 84.61 -5.05
87.33 80.89 -6.44
90.54 87.49 -3.05 86.61 -3.93
F1
87.56 83.92 -3.64 81.49 -6.07
90.10 86.99 -3.11 85.59 -4.51
89.59 88.80 -0.79
90.14 89.91 -0.23 89.24 -0.90
90.17 88.91 -1.26
91.58 91.27 -0.31 90.46 -1.12
F1
89.88 89.64 -0.24 88.85 -1.03
90.85 90.58 -0.27 89.84 -1.01
78.86 77.68 -1.18
78.66 78.86 +0.20 77.25 -1.41
81.00 80.60 -0.40
81.80 81.57 -0.23 81.91 -0.11
F1
79.92 79.59 -0.33 79.11 -0.81
80.20 80.19 -0.01 79.51 -0.69
Table 5 : Performance comparison between adopting the given , predicted and random dependencies on SemEval 2010
Task 1 Catalan and Spanish , and OntoNotes 5.0 English and Chinese datasets .
Note that DGLSTM - CRF+ ELMO have better performance compared to DGLSTM - CRF+ BERT based on Table 2 , 3 , 4 .
dependency trees , which include both short - range dependencies and long - range dependencies .
With the graph - encoded representation and the proposed Syn - LSTM - CRF+ BERT , the individual word representation is enhanced by both contextual and structured information .
Therefore , for the sentences with length of ≤ 14 , we can still observe obvious improvements .
The signiﬁcant performance improvements on the four datasets show the capability of our Syn - LSTM - CRF to capture the structured information despite the sentence length .
Effect of Entity Length We conduct another evaluation on BiLSTM - CRF+ BERT , DGLSTMCRF+ ELMO , and Syn - LSTM - CRF+ BERT models with respect to entity length ∈ { 1 , 2 , 3 , 4 , 5 , ≥ 6 } on the four languages .
Table 6 shows the performance comparison of two models with respect to entity length .
With the structured information , both DGLSTM - CRF+ ELMO and Syn - LSTMCRF+ BERT achieve better performance compared to BiLSTM - CRF+ BERT .
When the length of entity is ≤ 3 , Syn - LSTM - CRF+ BERT achieves better results compared to DGLSTM - CRF+ ELMO .
This conﬁrms that our proposed method can effectively incorporate the structured information .
Our model consistently outperforms BiLSTM - CRF+ BERT , and the performance tends to have more improvements when entities are getting longer except on the Chinese dataset .
We note there are some special characteristics of the Chinese language .
As mentioned by Jie and Lu ( 2019 ) , the percentage of entities that are able to perfectly form a sub - tree is only 92.9 % for OntoNotes Chinese , as compared to 98.5 % , 100 % , 100 % for OntoNotes English , SemEval Catalan and Spanish .
Furthermore , the ratio of long entities is much higher for Catalan and Spanish compared
Dataset Model
Catalan
Spanish
English
Chinese
BiLSTM - CRF+ BERT DGLSTM - CRF+ ELMO Syn - LSTM - CRF+ BERT
BiLSTM - CRF+ BERT DGLSTM - CRF+ ELMO Syn - LSTM - CRF+ BERT
BiLSTM - CRF+ BERT DGLSTM - CRF+ ELMO Syn - LSTM - CRF+ BERT
BiLSTM - CRF+ BERT DGLSTM - CRF+ ELMO Syn - LSTM - CRF+ BERT
Entity Length
1
2
3
4
5
82.4 85.4 90.5
85.1 89.3 92.7
92.9 91.8 92.9
82.5 82.2 82.5
84.4 85.1 91.1
84.2 87.4 90.9
88.3 90.1 90.8
74.6 75.5 75.6
77.8 84.1 87.2
81.5 90.8 91.1
83.1 85.4 87.7
71.4 71.8 73.1
53.3 78.9 77.8
33.7 74.1 73.0
85.5 87.0 87.4
65.0 64.1 66.4
31.8 60.9 63.8
43.1 67.7 75.4
80.5 80.8 80.6
69.8 58.5 66.1
≥6
36.2 59.3 60.6
27.2 64.4 58.5
77.9 78.7 79.8
52.5 41.1 42.5
Table 6 : F1 score
[ % ] based on entity length on Catalan , Spanish , English and Chinese datasets .
Note that DGLSTM - CRF+ ELMO have better performance compared to DGLSTM - CRF+ BERT based on the results in the main paper .
to English and Chinese .
The experimental results on Catalan and Spanish datasets show signiﬁcant improvements for long entities .
Such results show that the structured information conveyed by the dependency trees can be more crucial when entity length becomes longer .
Number of GCN Layers To fully explore the impact of the number of GCN layers , we conduct another experiment on Syn - LSTM - CRF+ BERT model with the number of GCN layers ∈ { 1 , 2 , 3 } , and Figure 6 shows the performance on the dev set of the four languages .
The last bar , indicated as AVG , is obtained by averaging the dev results on the four datasets .
We observe that the overall performance is better when the number of GCN layers equals 2 .
Note that similar behavior can also be found in the work by Kipf and Welling ( 2017 ) for document classiﬁcation and node classiﬁcation .
Therefore , we evaluate our proposed Syn - LSTMCRF model with 2 - layer GCN .
3464  1 layer
2 layer
3 layer
100
90
80
70
]
%
[
1 F v e D
Catalan Spanish English Chinese AVG
Figure 6 : Performance of different number of layers of GCN on dev set .
Model
Syn - LSTM - CRF+ BERT – 1 layer GCN – 2 layer GCN – original dependency – dependency embedding – POS embedding
P.
R.
90.14 89.93 89.50 89.91 89.85 89.84
91.58 91.30 89.93 91.27 91.31 90.95
F1
90.85 90.61 89.72 90.58 90.58 90.46
Table 7 : Ablation study of the Syn - LSTM - CRF+ BERT model on OntoNotes 5.0 English . – means removing .
Ablation Study To understand the contribution of each component , we conduct an ablation study on the OntoNotes 5.0 English dataset , and Table 7 presents the detailed results of our model with contextualized representation .
We ﬁnd that the performance drops by 0.24 F1 score when we only use 1 - layer GCN .
Without GCN at all , the score drops by 1.13 F1 .
The original dependency contributes 0.27 F1 score .
Removing the dependency relation embedding also decreases the performance by 0.27 F1 .
When we remove the POS tags embedding , the result drops by 0.39 F1 .
6 Related Work
LSTM LSTM has demonstrated its great effectiveness in many NLP tasks and becomes a standard module for many state - of - the - art models ( Wen et al , 2015 ; Ma and Hovy , 2016 ; Dozat and Manning , 2017 ) .
However , the sequential nature of the LSTM makes it challenging to capture long - range dependencies .
Zhang et al ( 2018a ) propose the S - LSTM model to include a sentence state to allow both local and global information exchange simultaneously .
Mogriﬁer LSTM ( Melis et al , 2020 ) mutually gates the current input and the previous output to enhance the interaction between the input and the context .
These two works do not consider structured information for the LSTM design .
Since natural language is usually structured , Shen et al
( 2018 ) propose ON - LSTM to add a hierarchical bias to allow the neurons to be updated by following certain order .
While the ON - LSTM is learning the latent constituency parse trees , we focus on incorporating the explicit structured information conveyed by the dependency parse trees .
NER Early work ( Sasano and Kurohashi , 2008 ) uses syntactic dependency features to improve the SVM performance on Japanese NER task .
Liu et al ( 2010 ) propose to construct skip - edges to link similar words or words having typed dependencies to capture long - range dependencies .
The later works ( Collobert et al , 2010 ; Lample et al , 2016 ; Chiu and Nichols , 2016b ) focus on using neural networks to extract features and achieved the stateof - the - art performance .
Jie et al ( 2017 ) ﬁnd that some relations between the dependency edges and the entities can be used to reduce the search space of their model , which signiﬁcantly reduces the time complexity .
Yu et al ( 2020 ) employ pre - trained language model to encode document - level information to explore all spans with the graph - based dependency graph based ideas .
The pre - trained language models ( e.g. , BERT ( Devlin et al , 2019 ) , ELMO ( Peters et al , 2018 ) ) further improve neuralbased approaches with a good contextualized representation .
However , previous works did not focus on investigating how to effectively integrate structured and contextual information well .
7 Conclusion
In this paper , we propose a simple and robust SynLSTM model to better integrate the structured information leveraged from the long - range dependencies .
Speciﬁcally , we introduce an additional graphencoded representation to each recurrent unit .
Such a graph - encoded representation can be obtained via GNNs .
Through the newly designed gating mechanism , the hidden states are enhanced by contextual information captured by the linear sequence and structured information captured by the dependency trees .
We present the Syn - LSTM - CRF for NER and adopt the GCN on dependency trees to obtain the graph - encoded representations .
Our extensive experiments and analysis on the datasets with four languages demonstrate that the proposed Syn - LSTM is able to effectively incorporate both contextual and structured information .
The robustness analysis demonstrates that our model is capable of selectively aggregating the information from the graph - encoded representation .
3465  Acknowledgements
We would like to thank the anonymous reviewers for their helpful comments .
This research is partially supported by Ministry of Education , Singapore , under its Academic Research Fund ( AcRF ) Tier 2 Programme ( MOE AcRF Tier 2 Award No : MOE2017 - T2 - 1 - 156 ) .
Any opinions , ﬁndings and conclusions or recommendations expressed in this material are those of the authors and do not reﬂect the views of the Ministry of Education , Singapore .
