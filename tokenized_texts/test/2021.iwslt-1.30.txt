Tag Assisted Neural Machine Translation of Film Subtitles
Aren Siekmeier∗ , WonKee Lee∗ , Hongseok Kwon† , and Jong - Hyeok Lee∗† Pohang University of Science and Technology ∗Department of Computer Science and Engineering †Graduate School of Artiﬁcial Intelligence { asiekmeier,wklee,hkwon,jhlee}@postech.ac.kr
Abstract
We implemented a neural machine translation system that uses automatic sequence tagging to improve the quality of translation .
Instead of operating on unannotated sentence pairs , our system uses pre - trained tagging systems to add linguistic features to source and target sentences .
Our proposed neural architecture learns a combined embedding of tokens and tags in the encoder , and simultaneous token and tag prediction in the decoder .
Compared to a baseline with unannotated training , this architecture increased the BLEU score of German to English ﬁlm subtitle translation outputs by 1.61 points using named entity tags ; however , the BLEU score decreased by 0.38 points using part - of - speech tags .
This demonstrates that certain token - level tag outputs from off - theshelf tagging systems can improve the output of neural translation systems using our combined embedding and simultaneous decoding extensions .
1
Introduction
Neural machine translation ( NMT ) uses neural networks to translate unannotated text between a source and target language , but without additional linguistic information certain ambiguous inputs may be translated incorrectly .
Consider the following examples :
1 ) Titanic struggles between good and evil .
( cid:51 ) 선과 악 사이의 엄청난 투쟁 .
big ﬁght between good and evil
( cid:55 ) 타이타닉은 선과 악 사이에서 투쟁 중이다 .
The Titanic is ﬁghting between good and evil
2 ) Titanic struggles to stay aﬂoat .
( cid:51 ) 타이타닉은 침몰하지 않도록 고군분투
중이다 .
The Titanic is struggling not to sink ( cid:55 ) 침몰하지 않기 위한 엄청난 투쟁 .
big ﬁght not to sink
In ( 1 ) , “ Titanic ” is best translated as a common adjective ; in ( 2 ) , it most likely refers to a named entity , the famous ship .
In addition to the bare token sequences , part - of - speech or named entity annotation of each token , provided manually or automatically , could provide additional information to improve the quality of translation .
Natural language processing ( NLP ) tools have beneﬁted from the same explosion in deep learning and neural network developments that has spurred NMT .
NLP tools include part - of - speech ( POS ) taggers , identifying the syntactic function of each input token , and named entity recognition systems .
Named entity recognition ( NER ) identiﬁes which tokens refer to named entities , including proper nouns such as people , place names , organizations , or dates .
Recently , automatic named entity recognition ( NER ) systems have seen much development and reﬁnement with the same deep learning tools used for NMT ( Li et al , 2020 ) .
Automatic neural NER systems have achieved accuracy exceeding 92 % F1 scores in many languages and domains ( Wang et al , 2019 ; Akbik et al , 2018 ) .
NER tags produced by these systems are useful in many other natural language processing contexts , such as coreference resolution , entity linking , or entity extraction ( Ferreira Cruz et
al , 2020 ) .
POS taggers have also achieved very high accuracy exceeding 98 % on public treebank datasets ( Akbik et al , 2018 ) .
We aim to use tags from publicly available pre - trained tagging systems as additional features to improve NMT training and output .
Tag assisted NMT requires modiﬁcations to the neural architecture to accommodate a tag at each token position .
The encoder must learn an embedding that combines information from each token and its tag , then compute a hidden state from these embeddings .
The decoder must learn to predict tokens and their tags simultaneously from the decoder state .
Adding tag information to the predicProceedingsofthe18thInternationalConferenceonSpokenLanguageTranslation , pages255–262Bangkok , Thailand(Online),August5–6,2021. © 2021AssociationforComputationalLinguistics255  tion and corresponding training loss encourages the model to incorporate this information into its latent representations to improve outputs .
Compared to an untagged baseline system on word - tokenized data , our tagged translation system improved the BLEU score by 1.61 points on German to English parallel ﬁlm subtitles data tagged with publicly available pre - trained named entity recognition systems , while part - of - speech tagging decreased the score by 0.38 BLEU points .
Subword tokenization reduced these effects to +0.22 points and – 0.22 points respectively .
Nonetheless , this demonstrates the feasibility of using certain pre - trained tagging outputs to improve translation quality .
2 Related Work
Very early work addressed named entity translation by treating automatically identiﬁed named entities with a special translation system , usually a transliterator ( Babych and Hartley , 2003 ) .
This work did not attempt to integrate the translation models for one to beneﬁt from information learned by the other .
Later , especially with neural machine translation ( NMT ) systems , source - side feature augmentation research studied the inclusion of linguistic feature information into the source - side token embeddings , usually by adding in or concatenating additional learned feature vectors to the token embedding vectors , as we do in this work ( Sennrich and Haddow , 2016 ; Hoang et al , 2016b ; Ugawa et al , 2018 ; Modrzejewski et al , 2020 ; Modrzejewski , 2020 ; Armengol - Estap´e et al , 2020 ) .
This approach can also be adopted on the target - side , as presented here or in ( Hoang et al , 2016a , 2018 ; Nguyen et al , 2018 ) .
However , these methods only add linguistic feature information to the input , without encouraging the system to model that information in any particular way .
Factored translation systems , under both statistical and neural machine translation , instead explore the addition of externally supplied linguistic features to the raw text at both input and output .
These features include part - of - speech ( POS ) tags , word lemmatizations , morphological analysis , and semantic analysis ( Koehn and Hoang , 2007 ; GarciaMartinez et al , 2016 , 2017 ; Tan et al , 2020 ) .
Factored translation models map feature - augmented input into feature - augmented output , however outputs include only an underlying lemma together
Figure 1 : Tagged seq2seq
with the predicted features .
These systems also use a rule - based morphology toolkit in post - processing to generate the output surface forms from predicted output features , requiring knowledge of appropriate rule systems for the output language .
An additional tagged architecture ( N˘adejde et al , 2017 ) predicted syntax - tagged surface forms , but did so by appending the tags to the surface form tokens directly , rather than predicting separate factors .
In general , the focus of factored models has been to increase vocabulary coverage , for example of highly agglutitanative languages with rich morphologies , rather than our goal of disambiguating polysemous of polysyntactic words or otherwise handling named entities in a more nuanced way .
Finally , one previous work does consider a fully tagged ( both source and target ) factored neural model predicting tags with surface forms with independent layers in much the same way as presented here ( Wagner , 2017 ) .
This work showed negative results for various syntactic tag types on IWSLT’14 shared task data ( Cettolo et al , 2014 ) , whereas this work presents NER and POS tags on ﬁlm subtitles data .
3 Tagged seq2seq
We implemented two extensions to the standard seq2seq encoder - decoder architecture for neural machine translation to use token - level tags to improve translation results.1 By combining token and tag embeddings in the input and simultaneously predicting tokens and tags in the output , the NMT
1Code at https://github.com/compwiztobe/
tagged - seq2seq
256srctokenstagsEmbed .
Embed.+EncodertgtprevioustokensprevioustagsEmbed .
Embed.+DecoderLinearSoftmaxnexttokenLinearSoftmaxnexttag(cid:27 )  system learned to translate tagged source sentences to tagged target sentences ( Figure 1 ) .
We used a Transformer encoder and decoder for the base seq2seq model ( Vaswani et al , 2017 ) .
Tags are added to the data as a preprocessing step .
3.1 Combined embedding
Learning an embedding for every possible token and tag combination would enormously increase the model ’s learnable parameter count .
Furthermore , training data is likely to be sparse in its coverage of all possible pairs , but not in its coverage of the token and tag vocabularies separately .
Therefore , we instead learn a separate embedding vector for each possible token and each possible tag , effectively concatenating these two vocabularies ( rather than taking the product space ) .
The embedding vectors for the token and tag at each position are then added to combine information from both channels into a single vector , so as not to increase the size of subsequent model layers and the capacity of the model , apart from the additional tag embedding vectors .
3.2 Simultaneous prediction
The decoder state di at each step is conditioned on the target preﬁx and the encoded source sentence ( 3 ) .
di = Decoder(preﬁx , src )
( 3 )
This shared decoder state is used to predict both the next token and the next tag , with token and tag feature projections T and τ ( 4 and 5 ) .
P ( token k | preﬁx ; src ) = softmaxk(T ( cid:62)di ) ( 4 ) P ( tag k | preﬁx ; src ) = softmaxk(τ ( cid:62)di ) ( 5 )
We model these probabilities independently ( 6 ) for the same data sparsity and model size reasons as the embeddings , and we can compute each pair probability and loss accordingly ( 7 ) .
P ( token , tag | preﬁx ; src )
= P ( token | pre . ; src ) · P ( tag | pre . ; src )
L = − log P ( token | preﬁx ; src )
− log P ( tag | preﬁx ; src )
This combined loss encourages the shared decoder state di to model the correct tag identity so that it can be used by the token prediction layer to improve translation .
( 6 )
( 7 )
4 Data Preparation
4.1 Subtitles corpus
Our experiments focused on ﬁlm subtitles in German and English .
The Opus project provided a parallel German to English subtitles corpus from OpenSubtitles ( Tiedemann , 2012 ; Aulamo et al , 2020 ) .
This data was cleaned with some rudimentary sentence length ﬁltering , and randomly divided into a 3 million sentence - pair training split ( about 49 million tokens ) , along with 100,000 pair validation and test splits ( about 1.6 million tokens each ) .
4.2 Tagging “ off the shelf ”
Flair NLP tools systems have achieved state - of - theart results on the sequence labeling tasks such as the CoNLL’03 NER dataset and universal part - ofspeech tagging from Universal Dependency treebanks ( Akbik et al , 2018 ; Tjong Kim Sang and De Meulder , 2003 ; Nivre et al , 2020 ) .
We used the publicly available pre - trained multilingual NER and universal POS taggers.2 NER tags followed the BIOES system with four entity classes : PER , person ; LOC , location ; ORG , organization ; and MISC , miscellaneous .
Four classes with four span markers , plus the null span marker O , gave the same 17 - tag vocabulary for NER on both German and English .
Meanwhile , POS tags came from the same 17 - tag universal POS tag set for both languages .
Around 3 % of words in the OpenSubtitles corpus were tagged as named entities ( non O ) .
We further divided the test split based on whether any named entities were found in either the source or the target sentence .
Out of 100,000 test pairs
, 79,201 had no named entities , and 20,799 had some .
4.3 Tokenization
Word tokenization , as used by the tagging systems , is most straightforward for maintaining one - to - one alignments between tokens and their assigned tags .
For word tokenization experiments , vocabularies of size 35,012 for German and 17,196 for English were selected , resulting in an unknown word replacement rate of 3 % .
This unknown word replacement was considerably higher on rare word categories , for example named entities saw a 25 – 30 % rate of unknown words outside the selected word vocabulary .
To alleviate this it is also possible to consider subword
2Models at https://huggingface.co/flair/
{ ner , upos}-multi
257  Table 1 : BLEU scores on word - tokenized sentences with or without named entities , for models with or without NER tags .
Table 2 : BLEU scores for word models with POS tags .
NER tags −src , −tgt3 + src , −tgt4 −src , + tgt5
+ src , + tgt
BLEU ( % )
no NEs
some NEs
all
34.70
34.89 35.69
35.84
32.43
34.15
32.14 35.03
34.22 35.53
35.50
35.76
improvement
↑ 1.14
↑ 3.07
↑ 1.61
tokenization , so additional experiments were conducted with a shared SentencePiece ( Kudo , 2018 ) vocabulary of 32,000 subwords , built from the training split and used to tokenize both languages .
After subword tokenization , the BIOES structure of named entity spans was propagated across subword tokens in the natural way to maintain spans .
For POS tags , subwords received the same tag as their parent word .
5 Experiments
encoder for
( Vaswani et al , 2017 )
and deWe used a Transformer the base coder seq2seq system , each with 6 layers and 8 attention heads , and layer and embedding dimensions 512 .
Training was done for 40 epochs at half precision with the optimizer known as Adam ( Kingma and Ba , 2015 ) with β = ( 0.9 , 0.98 ) and an inverse square root learning schedule with maximum learning rate 5 × 10−4 after 500 updates and decay 1 × 10−4 .
Parameter updates occurred after every 8,192 token - tag pairs at most ( rounding off to complete sentences ) , with 30 % dropout and label smoothing of 0.1 on the training loss .
At inference time , a beam of 5 candidates was maintained , and the models were evaluated with their BLEU score on the token sequence only ( tagging accuracy was not evaluated due to the difﬁculty of establishing alignment ) .
6 Results
BLEU scores from untagged and tagged translation experiments show an improvement from the use of NER tags ( Table 1 ) .
Adding NER tags , the
3baseline 4enhanced baseline / ablation study 5ablation study
POS tags
−src , −tgt
+ src , −tgt −src , + tgt
+ src , + tgt
improvement
BLEU ( % )
34.15
34.21 33.70
33.77
↓ 0.38
BLEU score on sentences containing some named entities improved by a larger margin , 3.07 points , presumably due to the tags ’ assistance with translating those named entities .
We also note an improvement in the BLEU score on sentences containing no named entities , which increased by 1.14 points .
This suggests that given O tag information the model can also treat common words with conﬁdence that they are not named entities and should not be translated as such .
These improvements averaged out to a net gain of 1.61 BLEU points on the entire test split .
We also evaluated a model trained with POS tags , but found a decrease in BLEU score ( Table 2 ) .
Translation scores with POS tags decreased by 0.38 BLEU points .
There are two ways to understand this in comparison with NER tags .
First , POS tags carry a signiﬁcant amount of information about the sentence , not only helping to disambiguate between different word senses by part - of - speech , but also assisting the model with encoding the sentence ’s syntactic structure .
Compared to NER tags , this amount of structural information might be difﬁcult to model with the same decoder architecture used for token prediction .
Second , POS tags tend to carry the same amount of information for each tag at each position , compared to NER tags only conveying most of their information at the named entity spans which are few and far between .
This also lends itself to the idea that POS tags have a higher information content that is less easily modeled by the decoder , leading to worse results than NER tagging .
6.1 Enhanced baselines and ablation study
For both NER and POS tagged results , the baseline was the same Transformer architecture trained only on untagged data ( without adding tag embeddings or predicting tags from the decoder ) .
Adding in only source - side tag embeddings could be considered an enhanced baseline , since this kind of
258  Table 3 : BLEU scores on subword - tokenized sentences with or without named entities , for models with or without NER tags .
Table 4 : BLEU scores for subword models with or without POS tags .
BLEU ( % )
NER tags
no NEs
some NEs
all
−src , −tgt
+ src , −tgt −src , + tgt
+ src , + tgt
35.77
35.83 35.88
35.94
36.51
35.96
36.75 36.82
36.06 36.12
36.92
36.19
improvement
↑ 0.17
↑ 0.41
↑ 0.22
feature augmentation has already been studied in depth ( Sennrich and Haddow , 2016 ; Hoang et al , 2016b ) .
Our results show that this source - only tagging does not provide signiﬁcant beneﬁts compared to training on untagged data ( Table 1 ) , although for POS tagging this remains the best result .
On the other hand , adding in target - side tags while also predicting them from the decoder , without adding in source - side tag embeddings could be considered an ablation test to isolate the effects of our main contribution : target - side tag decoding .
Our results show that this target tagging provides the same beneﬁt as the fully tagged training regime , demonstrating that it is the simultaneous tag decoding that accounts for the entire effect observed .
For NER tagging this was an improvement in BLEU scores , but for POS tagging scores decreased when adding target tagging .
Whereas source - side tag information is added into the embeddings without any modiﬁcation to the training objective , target - side tag predictions are a part of the modiﬁed training loss , so that it is the target - side tag prediction that pushes the model to incorporate accurate knowledge of the tags into its learning representations .
That NER tag modeling improved results while POS tag modeling did not is consistent with our earlier observation that POS tag modeling seems to be more difﬁcult than NER tag modeling , and is not done effectively by the current architecture .
6.2 Subword tokenization experiments
Experiments with subword tokenized data showed similar effects , but of a signiﬁcantly reduced size .
Adding NER tags improved the results , adding 0.22 points to the BLEU score , with the improvement again coming largely from the target side tagging , and again showing a larger improvement
POS tags
−src , −tgt
+ src , −tgt −src , + tgt
+ src , + tgt
improvement
BLEU ( % )
35.96
36.20 35.69
35.74
↓ 0.22
on sentences with named entities than on those without ( Table 3 ) .
Adding POS tags hurt results , decreasing the score by 0.22 , and again we see that source - only tagging is best case for POS tagging ( Table 4 ) .
However , the reduced magnitude of these deltas to the range of 0.1 – 0.4 BLEU points suggests these are not signiﬁcant changes to the translation performance , in the subword tokenization case .
It would appear that subword tokenization interferes with the beneﬁts of tagging the data .
Since tags are aligned one - to - one with the input words , subword tokenization destroys this alignment , and copying tags across a word ’s constituent subwords may interfere with the model ’s ability to make In particular for sense the of tag information .
named entities , rare words are likely to tokenized into a larger number of subword tokens , exacerbating this effect .
The set of embeddings for the subwords in a word may not be as useful to the model for translating a named entity or other rare category as the single embedding learned speciﬁcally for the full word in a word tokenization setting , and further these subword embeddings may be affected by other contexts unrelated to the larger word .
Speciﬁcally for the named entity case , subword tokenization algorithms might prioritize the atomicity of certain rare words tagged as named entities in order to counteract this .
6.3 Token prediction and tagging loss
Due to the conditional independence assumption , the cross - entropy loss ( 7 ) conveniently decomposes into separate terms for tokens and tags ( 8) , allowing us to measure the relative information content of each channel ( Table 5 ) .
L = − log P ( token | preﬁx ; src )
− log P ( tag | preﬁx ; src )
( 8)
= Ltoken + Ltag
259  Table 5 : Token prediction and tagging loss .
↓ cross entropy ( bits )
Ltoken
Ltag
L
no tags −src , −tgt
2.000
— 2.000
+ src , −tgt NER −src , + tgt + src , + tgt
+ src , −tgt POS −src , + tgt + src , + tgt
2.006 2.001 1.985
2.007 1.995 1.972
— 2.006 2.184 2.168
0.183 0.183
— 2.007 2.692 2.673
0.697 0.695
While adding tag information naturally increases the overall cross - entropy , as there are more possibilities to account for and to be predicted , restricting our attention only to the token loss shows that the token - level cross - entropy is consistently reduced from 2.000 ( base-2 ) to 1.985 with NER tags or 1.972 for POS tags .
This shows how both tag types can add disambiguating information to the token prediction process , with POS tags naturally add more of such information , since they carry syntactic information .
Looking only at tag - level cross - entropy , it ’s interesting to notice that the POS tagging loss is signiﬁcantly higher than the NER tagging loss .
While this could be simply because the lower - bound inherent entropy is higher ( POS tags naturally contain more information , being more uniformly distributed than NER tags ) , this could also be consistent with the idea that POS tag modeling is more difﬁcult , explaining the decreased translation scores observed with POS tag prediction .
7 Model Limitations
It should not go unnoticed that the typical inference algorithms for sequence labeling , particularly the BiLSTM - CRF inference employed by most NER systems , are incompatible with the autoregressive sequence decoding algorithms ( greedy decoding and beam search ) used for inference by seq2seq models .
That the beam decoding algorithm ( and autoregressive likelihood model ) used here for tags was unable to account for ( be conditioned on ) the as - yet uncomputed right context was cause for much apprehension before experimental results became available .
These positive results notwithstanding , future work could explore how to better incorporate the full tagging context in tag decoding , perhaps , for example , by predicting the sequence more wholistically with non - autoregressive decoding ( Gu et al , 2018 ) .
We also imagine that the design of the underlying seq2seq architecture may lend itself to certain types of sequence labeling .
For example , the bidirectional context modeled by a BiLSTM - based translation model may be more suitable for certain types of sequence labeling tasks than the Transformer ’s attentional activations .
Because our contributions are agnostic to the type of sequence labeling ( NER or part - of - speech tagging or any other kind ) as well as to the design of the encoder and decoder , future experiments should also explore these possibilities .
8 Conclusion
We implemented extensions to existing neural machine translation models that allow the use of offthe - shelf token - level tagging systems to improve translation accuracy .
Translation inputs and training outputs were tagged with pre - trained sequence labeling systems .
A standard encoder - decoder architecture was extended to include tag embeddings and tag prediction at each token position .
At model input , token and tag embedding vectors were added to produce a combined embedding .
At model output , the ﬁnal decoder layer used separate softmax layers to predict tokens and tags .
During training , a combined loss function encouraged the model to learn token and tag information jointly .
This tag assisted translation system was tested against baseline token - only systems on a German to English ﬁlm subtitle corpus with both word and subword tokenization .
Subword tokenization reduced the size of the effect , suggesting the need for specialized subword tokenization to prioritize the integrity of important word categories .
However , on word tokenized data , the 1.61 point increase in BLEU score using named entity tags demonstrates that the proposed architecture is useful for improving translation outputs with automatic named entity recognition , while the 0.38 point decrease using part - of - speech tags indicates more difﬁculty in utilizing that tag information .
Further examination of the cross - entropy showed that adding tags reduced the token cross - entropy thereby improving token modeling .
Future experiments can explore the use of other types of tag data as well as other decoding paradigms .
260  Acknowledgments
Many thanks go to my colleagues Jeesoo Bang , Jaehun Shin , and Baikjin Jung in the Knowledge and Language Engineering Lab ( POSTECH ) for their many hours generously spent discussing these research topics .
These results would not have been possible without their support .
This work was carried out as part of the HPC Support Project supported by the Ministry of Science and ICT ( MSIT ) and the National IT Industry Promotion Agency ( NIPA ) , and was funded by the Institute of Information & Communications Technology Planning & Evaluation ( IITP ) supported by the Korean government ( MSIT ):
Grant No . 2019 - 0 - 01906 , Graduate School of Artiﬁcial Intelligence ( POSTECH ) .
