PubMedQA : A Dataset for Biomedical Research Question Answering
Qiao Jin University of Pittsburgh qiao.jin@pitt.edu
Bhuwan Dhingra Carnegie Mellon University bdhingra@cs.cmu.edu
Zhengping Liu University of Pittsburgh zliu@pitt.edu
William W. Cohen Google AI wcohen@google.com
Xinghua Lu University of Pittsburgh xinghua@pitt.edu
Abstract
We introduce PubMedQA , a novel biomedical question answering ( QA ) dataset collected from PubMed abstracts .
The task of PubMedQA is to answer research questions with yes / no / maybe ( e.g. : Do preoperative statins reduce atrial ﬁbrillation after coronary artery bypass grafting ? ) using the corresponding abstracts .
PubMedQA has 1k expert - annotated , 61.2k unlabeled and 211.3k artiﬁcially generated QA instances .
Each PubMedQA instance is composed of ( 1 ) a question which is either an existing research article title or derived from one , ( 2 ) a context which is the corresponding abstract without its conclusion , ( 3 ) a long answer , which is the conclusion of the abstract and , presumably , answers the research question , and ( 4 ) a yes / no / maybe answer which summarizes the conclusion .
PubMedQA is the ﬁrst QA dataset where reasoning over biomedical research texts , especially their quantitative contents , is required to answer the questions .
Our best performing model , multi - phase ﬁne - tuning of BioBERT with long answer bag - of - word statistics as additional supervision , achieves 68.1 % accuracy , compared to single human performance of 78.0 % accuracy and majority - baseline of 55.2 % accuracy , leaving much room for improvement .
PubMedQA is publicly available at https://pubmedqa.github.io .
1
Introduction
A long - term goal of natural language understanding is to build intelligent systems that can reason and infer over natural language .
The question answering ( QA ) task , in which models learn how to answer questions , is often used as a benchmark for quantitatively measuring the reasoning and inferring abilities of such intelligent systems .
While many large - scale annotated general domain QA datasets have been introduced ( Rajpurkar et al , 2016 ; Lai et al , 2017 ; Koˇcisk`y
Question : Do preoperative statins reduce atrial ﬁbrillation after coronary artery bypass grafting ?
Context : ( Objective ) Recent studies have demonstrated that statins have pleiotropic effects , including anti - inﬂammatory effects and atrial ﬁbrillation ( AF ) preventive effects [ ... ] ( Methods ) 221 patients underwent CABG in our hospital from 2004 to 2007 .
14 patients with preoperative AF and 4 patients with concomitant valve surgery [ ... ] ( Results ) The overall incidence of postoperative AF was 26 % .
Postoperative AF was signiﬁcantly lower in the Statin group compared with the Non - statin group ( 16 % versus 33 % , p=0.005 ) .
Multivariate analysis demonstrated that independent predictors of AF
[ ... ] Long Answer : ( Conclusion ) Our study indicated that preoperative statin therapy seems to reduce AF development after CABG .
Answer : yes
Figure 1 : An instance ( Sakamoto et al , 2011 ) of PubMedQA dataset :
Question is the original question title ; Context includes the structured abstract except its conclusive part , which serves as the Long Answer ; Human experts annotated the Answer yes .
Supporting fact for the answer is highlighted .
et al , 2018 ; Yang et al , 2018 ; Kwiatkowski et al , 2019 ) , the largest annotated biomedical QA dataset , BioASQ ( Tsatsaronis et al , 2015 ) has less than 3k training instances , most of which are simple factual questions .
Some works proposed automatically constructed biomedical QA datasets ( Pampari et al , 2018 ; Pappas et al , 2018 ; Kim et al , 2018 ) , which have much larger sizes .
However , questions of these datasets are mostly factoid , whose answers can be extracted in the contexts without much reasoning .
In this paper , we aim at building a biomedical QA dataset which ( 1 ) has substantial instances with some expert annotations and ( 2 ) requires reasoning over the contexts to answer the questions .
For this , we turn to the PubMed1 , a search engine providing access to over 25 million references of
1https://www.ncbi.nlm.nih.gov/pubmed/
Proceedingsofthe2019ConferenceonEmpiricalMethodsinNaturalLanguageProcessingandthe9thInternationalJointConferenceonNaturalLanguageProcessing , pages2567–2577,HongKong , China , November3–7,2019.c(cid:13)2019AssociationforComputationalLinguistics2567  biomedical articles .
We found that around 760k articles in PubMed use questions as their titles .
Among them , the abstracts of about 120k articles are written in a structured style – meaning they have subsections of “ Introduction ” , “ Results ” etc .
Conclusive parts of the abstracts , often in “ Conclusions ” , are the authors ’ answers to the question title .
Other abstract parts can be viewed as the contexts for giving such answers .
This pattern perfectly ﬁts the scheme of QA , but modeling it as abstractive QA , where models learn to generate the conclusions , will result in an extremely hard task due to the variability of writing styles .
Interestingly , more than half of the question titles of PubMed articles can be brieﬂy answered by yes / no / maybe , which is signiﬁcantly higher than the proportions of such questions in other datasets , e.g. : just 1 % in Natural Questions ( Kwiatkowski et al , 2019 ) and 6 % in HotpotQA ( Yang et al , Instead of using conclusions to answer 2018 ) .
the questions , we explore answering them with yes / no / maybe and treat the conclusions as a long answer for additional supervision .
To this end , we present PubMedQA , a biomedical QA dataset for answering research questions using yes / no / maybe .
We collected all PubMed articles with question titles , and manually labeled 1k of them for cross - validation and testing .
An example is shown in Fig .
1 . The rest of yes / no / answerable QA instances compose of the unlabeled subset which can be used for semisupervised learning .
Further , we automatically convert statement titles of 211.3k
PubMed articles to questions and label them with yes / no answers using a simple heuristic .
These artiﬁcially generated instances can be used for pre - training .
Unlike other QA datasets in which questions are asked by crowd - workers for existing contexts ( Rajpurkar et al , 2016 ; Yang et al , 2018 ; Koˇcisk`y et al , 2018 ) , in PubMedQA contexts are generated to answer the questions and both are written by the same authors .
This consistency assures that contexts are perfectly related to the questions , thus making PubMedQA an ideal benchmark for testing scientiﬁc reasoning abilities .
As an attempt to solve PubMedQA and provide a strong baseline , we ﬁne - tune BioBERT ( Lee et al , 2019 ) on different subsets in a multi - phase style with additional supervision of long answers .
Though this model generates decent results and vastly outperforms other baselines , it ’s still much
worse than the single - human performance , leaving signiﬁcant room for future improvements .
2 Related Works
Biomedical QA : Expert - annotated biomedical QA datasets are limited by scale due to the difﬁculty of annotations .
In 2006 and 2007 , TREC2 held QA challenges on genomics corpus ( Hersh et al , 2006 , 2007 ) , where the task is to retrieve relevant documents for 36 and 38 topic questions , respectively .
QA4MRE ( Pe˜nas et al , 2013 ) included a QA task about Alzheimer ’s disease ( Morante et al , 2012 ) .
This dataset has 40 QA instances and the task is to answer a question related to a given document using one of ﬁve answer choices .
The QA task of BioASQ ( Tsatsaronis et al , 2015 ) has phases of ( a ) retrieve question - related documents and ( b ) using related documents as contexts to answer yes / no , factoid , list or summary questions .
BioASQ 2019 has a training set of 2,747 QA instances and a test set of 500 instances .
Several
large - scale
automatically collected biomedical QA datasets have been introduced : emrQA ( Pampari et al , 2018 ) is an extractive QA dataset for electronic medical records ( EHR ) built by re - purposing existing annotations on EHR corpora .
BioRead ( Pappas et al , 2018 ) and BMKC ( Kim et al , 2018 ) both collect cloze - style QA instances by masking biomedical named entities in sentences of research articles and using other parts of the same article as context .
Yes / No QA : Datasets such as HotpotQA ( Yang et al , 2018 ) , Natural Questions ( Kwiatkowski et al , 2019 ) , ShARC ( Saeidi et al , 2018 ) and BioASQ ( Tsatsaronis et al , 2015 ) contain yes / no questions as well as other types of questions .
BoolQ ( Clark et al , 2019 ) speciﬁcally focuses on naturally occurring yes / no questions , and those questions are shown to be surprisingly difﬁcult to answer .
We add a “ maybe ” choice in PubMedQA to cover uncertain instances .
Typical neural approaches to answering yes / no questions involve encoding both the question and context , and decoding the encoding to a class output , which is similar to the well - studied natural Recent breakthroughs of pre - trained language models like ELMo ( Peters et al , 2018 ) and BERT ( Devlin et al , 2018 ) show signiﬁcant performance imlanguage inference ( NLI ) task .
2https://trec.nist.gov/
2568  Algorithm 1 PQA - L data collection procedure
Input : pre - PQA - U ReasoningFreeAnnotation ← { } ReasoningRequiredAnnotation ← { } GroundTruthLabel ← { } while not ﬁnished do
Randomly sample an instance inst from pre - PQA - U if inst is not yes / no / maybe answerable then
Remove inst and continue to next iteration
end if Annotator 1 annotates inst with l1 ∈ { yes , no , maybe } using question , context and long answer Annotator 2 annotates inst with l2 ∈ { yes , no , maybe } using question and context if l1 = l2 then la ← l1
else
Annotator 1 and Annotator 2 discuss for an agreement annotation la if not ∃la then
Remove inst and continue to next iteration
end if
end if ReasoningFreeAnnotation[inst ] ← l1 ReasoningRequiredAnnotation[inst ] ← l2 GroundTruthLabel[inst ] ← la
end while
annotation .
We denote such setting as reasoningrequired setting .
Note that the annotation process might assign wrong labels when both annotator 1 and annotator 2 make a same mistake , but considering human performance in § 5.1 , such error rate could be as low as 1%4 . 500 randomly sampled PQA - L instances are used for 10 - fold cross validation and the rest 500 instances consist of PubMedQA test set .
Further , we include the unlabeled instances in pre - PQA - U with yes / no / maybe answerable questions to build PQA - U. For this , we use a simple rule - based method which removes all questions started with interrogative words ( i.e. wh - words ) or involving selections from multiple entities .
This results in over 93 % agreement with annotator 1 in identifying the questions that can be answered by yes / no / maybe .
Collection of PQA - A : Motivated by the recent successes of large - scale pre - training from ELMo ( Peters et al , 2018 ) and BERT ( Devlin et al , 2018 ) , we use a simple heuristic to collect many noisily - labeled instances to build PQA - A for pretraining .
Towards this end , we use PubMed articles with 1 ) a statement title which has POS tagging structures of NP-(VBP / VBZ)5 and 2 ) a structured abstract including a conclusive part .
The
4Roughly half of the products of two annotator error rates .
5Using Stanford CoreNLP parser ( Manning et
al , 2014 ) .
Figure 2 : Architecture of PubMedQA dataset .
PubMedQA is split into three subsets , PQA - A(rtiﬁcial ) , PQA - U(nlabeled ) and PQA - L(abeled ) .
provements on NLI tasks .
In this work , we use domain speciﬁc versions of them to set baseline performance on PubMedQA .
3 PubMedQA Dataset
3.1 Data Collection
PubMedQA is split into three subsets : labeled , unlabeled and artiﬁcially generated .
They are denoted as PQA - L(abeled ) , PQA - U(nlabeled ) and PQA - A(rtiﬁcial ) , respectively .
We show the architecture of PubMedQA dataset in Fig .
2 .
Statistic
PQA - L
PQA - U PQA - A
Number of QA pairs
Prop . of yes ( % ) Prop . of no ( % ) Prop . of maybe ( % )
Avg . question length Avg . context length Avg . long answer length
1.0k
55.2 33.8 11.0
14.4 238.9 43.2
61.2k
211.3k
– – –
15.0 237.3 45.9
92.8 7.2 0.0
16.3 238.0 41.0
Table 1 : PubMedQA dataset statistics .
Collection of PQA - L and PQA - U : PubMed articles which have i ) a question mark in the titles and ii ) a structured abstract with conclusive part are collected and denoted as pre - PQA - U.
Now each instance has 1 ) a question which is the original title 2 ) a context which is the structured abstract without the conclusive part and 3 ) a long answer which is the conclusive part of the abstract .
Two annotators3 labeled 1k instances from prePQA - U with yes / no / maybe to build PQA - L using Algorithm 1 .
The annotator 1 does n’t need to do much reasoning to annotate since the long answer is available .
We denote this reasoning - free setting .
However , the annotator 2 can not use the long answer , so reasoning over the context is required for
3Both are qualiﬁed M.D. candidates .
2569Ori .
Title - > QuestionLong Answer(Conclusion)Structured Context(Ori .
Abstractw / o conclusion)Generated yes / noPQA - Artificial ( 211.3k)Ori .
Question TitlePQA - Unlabeled ( 61.2k)Ori .
Question TitleYes / no / maybePQA - Labeled ( 1k)UnlabeledLong Answer(Conclusion)Structured Context(Ori .
Abstractw / o conclusion)Long Answer(Conclusion)Structured Context(Ori .
Abstractw / o conclusion )  Original Statement Title
Converted Question
Spontaneous electrocardiogram alterations predict ventricular ﬁbrillation in Brugada syndrome .
Do spontaneous electrocardiogram alterations predict ventricular ﬁbrillation in Brugada syndrome ?
Label %
yes
92.8
Liver grafts from selected older donors do not have signiﬁcantly more ischaemia reperfusion injury .
Do liver grafts from selected older donors have signiﬁcantly more ischaemia reperfusion injury ?
no
7.2
Table 2 : Examples of automatically generated instances for PQA - A. Original statement titles are converted to questions and answers are automatically generated according to the negation status .
Figure 3 : MeSH topic distribution of PubMedQA .
statement titles are converted to questions by simply moving or adding copulas ( “ is ” , “ are ” ) or auxiliary verbs ( “ does ” , “ do ” ) in the front and further revising for coherence ( e.g. : adding a question mark ) .
We generate the yes / no answer according to negation status of the VB .
Several examples are shown in Table 2 .
We collected 211.3k instances for PQA - A , of which 200k randomly sampled instances are for training and the rest 11.3k instances are for validation .
3.2 Characteristics
We show the basic statistics of three PubMedQA subsets in Table 1 .
Instance Topics : PubMed abstracts are manually annotated by medical librarians with Medical Subject Headings ( MeSH)6 , which is a controlled vocabulary designed to describe the topics of biomedical texts .
We use MeSH terms to represent abstract topics , and visualize their distribution in Fig .
3 .
Nearly all instances are human studies and they cover a wide variety of topics , including retrospective , prospective , and cohort studies , different age groups , and healthcare - related subjects like treatment outcome , prognosis and risk factors of diseases .
6https://www.nlm.nih.gov/mesh
Figure 4 : Proportional relationships between corresponded question types , reasoning types , and whether the text interpretations of numbers exist in contexts .
Question and Reasoning Types : We sampled 200 examples from PQA - L and analyzed the types of questions and types of reasoning required to answer them , which is summarized in Table 3 .
Various types of questions have been asked , including causal effects , evaluations of therapies , relatedness , and whether a statement is true .
Besides , PubMedQA also covers several different reasoning types : most ( 57.5 % ) involve comparing multiple groups ( e.g. : experiment and control ) , and others require interpreting statistics of a single group or its subgroups .
Reasoning over quantitative contents is required in nearly all ( 96.5 % ) of them , which is expected due to the nature of biomedical research .
75.5 % of contexts have text descriptions of the statistics while 21.0 % only have the numbers .
We use a Sankey diagram to show the proportional relationships between corresponded question type and reasoning type , as well as corresponded reasoning type and whether there are text interpretations of numbers in Fig .
4 .
3.3 Evaluation Settings
The main metrics of PubMedQA are accuracy and macro - F1 on PQA - L test set using question and context as input .
We denote prediction using question and context as a reasoning - required setting , because under this setting answers are not directly
25700.00.20.40.60.81.0Frequency of the MeSH termsHumansFemaleMaleMiddle AgedAdultAgedRetrospective StudiesAdolescentAged , 80 and overProspective StudiesTreatment OutcomeYoung AdultRisk FactorsChildFollow - Up StudiesTime FactorsSurveys and QuestionnairesChild , PreschoolCross - Sectional StudiesPregnancySensitivity and SpecificityCohort StudiesPrognosisPredictive Value of TestsInfantQuestion TypeReasoning TypeNumber interpretationalreadyin context ? 
26.0
18.0
57.5
16.5
Question Type
% Example Questions
Does a factor inﬂuence the output ?
36.5 Does reducing spasticity translate into functional beneﬁt ?
Is a therapy good / necessary ?
Is a statement true ?
Does ibuprofen increase perioperative blood loss during hip arthroplasty ?
Should circumcision be performed in childhood ?
Is external palliative radiotherapy for gallbladder carcinoma effective ?
Sternal fracture in growing children : A rare and often overlooked fracture ?
Xanthogranulomatous cholecystitis : a premalignant condition ?
Is a factor related to the output ?
18.0 Can PRISM predict length of PICU stay ?
Is trabecular bone related to primary stability of miniscrews ?
Reasoning Type
% Example Snippet in Context
Inter - group comparison
Interpreting subgroup statistics
Interpreting ( single ) group statistics
16.0
[ ... ] Postoperative AF was signiﬁcantly lower in the Statin group compared with the Non - statin group ( 16 % versus 33 % , p=0.005 ) .
[ ... ]
[ ... ] 57 % of patients were of lower socioeconomic status and they had more health problems , less functioning , and more symptoms [ ... ]
[ ... ] A total of 4 children aged 5 - 14 years with a sternal fracture were treated in 2 years , 2 children were hospitalized for pain management and [ ... ]
Text Interpretations of Numbers
% Example Snippet in Context
Existing interpretations of numbers
75.5
No interpretations ( numbers only )
21.0
[ ... ] Postoperative AF was signiﬁcantly lower in the Statin group compared with the Non - statin group ( 16 % versus 33 % , p=0.005 ) .
[ ... ]
[ ... ] 30 - day mortality was 12.4 % in those aged<70 years and 22 % in those>70 years ( p<0.001 ) .
[ ... ]
No numbers ( texts only )
3.5
[ ... ] The halofantrine therapeutic dose group showed loss and distortion of inner hair cells and inner phalangeal cells [ ... ]
Table 3 : Summary of PubMedQA question types , reasoning types and whether there are text descriptions of the statistics in context .
Colored texts are matched key phrases ( sentences ) between types and examples .
expressed in the input and reasoning over the contexts is required to answer the question .
Additionally , long answers are available at training time , so generation or prediction of them can be used as an auxiliary task in this setting .
A parallel setting , where models can use question and long answer to predict yes / no / maybe answer , is denoted as reasoning - free setting since yes /
no / maybe are usually explicitly expressed in the long answers ( i.e. : conclusions of the abstracts ) .
Obviously , it ’s a much easier setting which can be exploited for bootstrapping PQA - U.
4 Methods
4.1 Fine - tuning BioBERT
We ﬁne - tune BioBERT ( Lee et al , 2019 ) on PubMedQA as a baseline .
BioBERT is initialized with BERT ( Devlin et al , 2018 ) and further pretrained on PubMed abstracts and PMC7 articles .
Expectedly , it vastly outperforms BERT in various biomedical NLP tasks .
We denote the original transformer weights of BioBERT as θ0 .
While ﬁne - tuning , we feed PubMedQA questions and contexts ( or long answers ) , separated
by the special [ SEP ] token , to BioBERT .
The yes / no / maybe labels are predicted using the special [ CLS ] embedding using a softmax function .
Cross - entropy loss of predicted and true label distribution is denoted as LQA .
4.2 Long Answer as Additional Supervision
Under reasoning - required setting , long answers are available in training but not inference phase .
We use them as an additional signal for training : similar to Ma et al ( 2018 ) regularizing neural machine translation models with binary bag - of - word ( BoW ) statistics , we ﬁne - tune BioBERT with an auxiliary task of predicting the binary BoW statistics of the long answers , also using the special [ CLS ] embedding .
We minimize binary crossentropy loss of this auxiliary task :
LBoW = −
bilog ˆbi + ( 1 − bi)log(1 − ˆbi )
1 N
( cid:88 )
i
where bi and ˆbi are ground - truth and predicted probability of whether token i is in the long answers ( i.e. : bi ∈ { 0 , 1 } and ˆbi
∈
[ 0 , 1 ] ) , and N is the BoW vocabulary size .
The total loss is :
7https://www.ncbi.nlm.nih.gov/pmc/
L = LQA + βLBoW
2571  then we further ﬁne - tune BioBERTθB1 L , also under the reasoning - free setting :
on PQAθB2 ← argminθ L(BioBERTθ(qL , aL ) , lL )
( 3 )
We pseudo - label PQA - U instances using the most conﬁdent predictions of BioBERTθB2 for each class .
Conﬁdence is simply deﬁned by the corresponding softmax probability and then we label a subset which has the same proportions of yes / no / maybe labels as those in the PQA - L :
lU pseudo ← BioBERTθB2
( qU , aU )
( 4 )
In phase II , we ﬁne - tune BioBERTθI on the bootstrapped PQA - U using question and context ( under reasoning - required setting ):
θII ← argminθ L(BioBERTθ(qU , cU ) , lU
pseudo )
( 5 )
Final Phase Fine - tuning on PQA - L : nal phase , we ﬁne - tune BioBERTθII on PQA - L : θF ← argminθ L(BioBERTθ(qL , cL ) , lL )
In the ﬁ(6 )
Final predictions on instances of PQA - L validation and test sets are made using BioBERTθF :
lpred = BioBERTθF(qL , cL )
4.4 Compared Models
Majority : The majority ( about 55 % ) of the instances have the label “ yes ” .
We use a trivial baseline denoted as Majority where we simply predict “ yes ” for all instances , regardless of the question and context .
Shallow Features :
For each instance , we include the following shallow features : 1 ) TF - IDF statistics of the question 2 ) TF - IDF statistics of the context / long answer and 3 ) sum of IDF of the overlapping non - stop words between the question and the context / long answer .
To allow multi - phase ﬁne - tuning , we apply a feed - forward neural network on the shallow features instead of using a logistic classiﬁer .
BiLSTM : We simply concatenate the question and context / long answer with learnable segment embeddings appended to the biomedical word2vec embeddings ( Pyysalo et al , 2013 ) of each token .
The concatenated sentence is then fed to a biLSTM , and the ﬁnal hidden states of the forward and backward network are used for classifying the yes / no / maybe label .
Figure 5 : Multi - phase ﬁne - tuning architecture .
Notations and equations are described in § 4.3 .
In reasoning - free setting which we use for bootstrapping , the regularization coefﬁcient β is set to 0 because long answers are directly used as input .
4.3 Multi - phase Fine - tuning Schedule
Since PQA - A and PQA - U have different properties from the ultimate test set of PQA - L , BioBERT is ﬁne - tuned in a multi - phase style on different subsets .
Fig .
5 shows the architecture of this training schedule .
We use q , c , a , l to denote question , context , long answer and
yes / no / maybe label of instances , respectively .
Their source subsets are indexed by the superscripts of A for PQA - A , U for PQA - U and L for PQA - L.
Phase I Fine - tuning on PQA - A : PQA - A is automatically collected whose questions and labels are artiﬁcially generated .
As a result , questions of PQA - A might differ a lot from those of PQAU and PQA - L , and it only has yes / no labels with a very imbalanced distribution ( 92.8 % yes v.s. 7.2 % no ) .
Despite these drawbacks , PQA - A has substantial training instances so models could still beneﬁt from it as a pre - training step .
Thus , in Phase I of multi - phase ﬁne - tuning , we initialize BioBERT with θ0 , and ﬁne - tune it on PQA - A using question and context as input :
θI ← argminθ L(BioBERTθ(qA , cA ) , lA )
( 1 )
Phase II Fine - tuning on Bootstrapped PQA - U : To fully utilize the unlabeled instances in PQA - U , we exploit the easiness of reasoning - free setting to pseudo - label these instances with a bootstrapping strategy : ﬁrst , we initialize BioBERT with θ0 , and ﬁne - tune it on PQA - A using question and long answer ( reasoning - free ) ,
θB1 ← argminθ L(BioBERTθ(qA , aA ) , lA )
( 2 )
2572Bootstrapping(Reasoning - free)Training(Reasoning - required)(qA , cA),lA(qU , cU),lUpseudo(qL , cL),lL(qA , aA),lA(qL , aL),lL(qU , aU) ✓ 0 ✓ 0 ✓ I ✓ II ✓ F ✓ B1 ✓ B2Fine - tuningSupervisionPseudo - labelingeq .
( 1)eq .
( 2)eq . ( 3)eq .
( 5)eq .
( 6)eq . ( 4)Phase IPhase IIFinal Phase  ESIM with BioELMo : Following the state - ofthe - art recurrent architecture of NLI ( Peters et al , 2018 ) , we use pre - trained biomedical contextualized embeddings BioELMo ( Jin et al , 2019 ) for word representations .
Then we apply the ESIM model ( Chen et al , 2016 ) , where a biLSTM is used to encode the question and context / long answer , followed by an attentional local inference layer and a biLSTM inference composition layer .
After pooling , a softmax output unit is applied for predicting the yes / no / maybe label .
4.5 Compared Training Schedules
Final Phase Only : Under this setting , we train models only on PQA - L. It ’s an extremely low resources setting where there are only 450 training instances in each fold of cross - validation .
Phase I + Final Phase : Under this setting , we skip the training on bootstrapped PQA - U. Models are ﬁrst ﬁne - tuned on PQA - A , and then ﬁne - tuned on PQA - L.
Phase II + Final Phase : Under this setting , we skip the training on PQA - A. Models are ﬁrst ﬁne - tuned on bootstrapped PQA - U , and then ﬁnetuned on PQA - L.
Single - phase Training : Instead of training a model sequentially on different splits , under single - phase training setting we train the model on the combined training set of all PQA splits : PQAA , bootstrapped PQA - U and PQA - L.
5 Experiments
5.1 Human Performance
Human performance is measured during the annotation : As shown in Algorithm 1 , annotations of annotator 1 and annotator 2 are used to calculate reasoning - free and reasoning - required human performance , respectively , against the discussed ground truth labels .
Human performance on the test set of PQA - L is shown in Table 4 .
We only test single - annotator performance due to limited resources .
Kwiatkowski et al ( 2019 ) show that an ensemble of annotators perform signiﬁcantly better than single - annotator , so the results reported in Table 4 are the lower bounds of human performance .
Under reasoning - free setting where the annotator can see the conclusions , a single human achieves 90.4 % accuracy and 84.2 % macroF1 .
Under reasoning - required setting , the task becomes much harder , but it ’s still possible for humans to solve : a single annotator can get 78.0 % accuracy and 72.2 % macro - F1 .
Setting
Accuracy ( % ) Macro - F1 ( % )
Reasoning - Free Reasoning - Required
90.40 78.00
84.18 72.19
Table 4 : Human performance ( single - annotator ) .
5.2 Main Results
We report the test set performance of different models and training schedules in Table 5 .
In general , multi - phase ﬁne - tuning of BioBERT with additional supervision outperforms other baselines by large margins , but the results are still much worse than just single - human performance .
Comparison of Models : A trend of BioBERT > ESIM w/ BioELMo > BiLSTM > shallow features > majority , conserves across different training schedules on both accuracy and macro - F1 .
Fine - tuned BioBERT is better than state - of - theart recurrent model of ESIM w/ BioELMo , probably because BioELMo weights are ﬁxed while all BioBERT parameters can be ﬁne - tuned , which better beneﬁt from the pre - training settings .
Comparison of Training Schedules : Multiphase ﬁne - tuning setting gets 5 out of 9 modelwise best accuracy / macro - F1 .
Due to lack of annotated data , training only on the PQA - L ( ﬁnal phase only ) generates similar results as the majority baseline .
In phase I + Final setting where models are pre - trained on PQA - A , we observe signiﬁcant improvements on accuracy and macro - F1 and some models even achieve their best accuracy under this setting .
This indicates that a hard task with limited training instances can be at least partially solved by pre - training on a large automatically collected dataset when the tasks are similarly formatted .
Improvements are also observed in phase II + Final setting , though less signiﬁcant than those of phase I + Final .
As expected , multi - phase ﬁnetuning schedule is better than single - phase , due to different properties of the subsets .
Additional Supervision : Despite its simplicity , the auxiliary task of long answer BoW prediction clearly improves the performance : most results ( 28/40 ) are better with such additional supervision than without .
2573  Model
Majority Human ( single )
w/o A.S.
Shallow Features BiLSTM ESIM w/ BioELMo BioBERT
w/ A.S.
Acc
55.20 78.00
53.88 55.16 53.90 56.98
F1
23.71 72.19
36.12 23.97 32.40 28.50
Final Phase Only
Single - phase
Phase I + Final
Phase II + Final
Multi - phase
Acc
– –
F1
– –
Acc
– –
F1
– –
Acc
– –
F1
– –
Acc
– –
F1
– –
57.58 55.46 61.28 66.44
31.47 39.70 42.99 47.25
57.48 58.44 61.96 66.90
37.24 40.67 43.32 46.16
56.28 52.98 60.34 66.08
40.88 33.84 44.38 50.84
53.50 59.82 62.08 67.66
39.33 41.86 45.75 52.41
Shallow Features BiLSTM ESIM w/ BioELMo BioBERT
53.60 55.22† 53.96† 57.28†
35.92 23.86 31.07 28.70†
57.30 55.96† 62.68† 66.66†
30.45 40.26† 43.59† 46.70†
55.82 61.06† 63.72† 67.24†
35.09 41.18† 47.04† 46.21†
56.46† 54.12† 60.16 66.44†
40.76 34.11† 45.81† 51.41†
55.06† 58.86 63.72† 68.08†
40.67† 41.06 47.90† 52.72†
Table 5 : Main results on PQA - L test set under reasoning - required setting .
A.S. : additional supervision .
†with A.S. is better than without A.S. Underlined numbers are model - wise best performance , and bolded numbers are global best performance .
All numbers are percentages .
Model
w/o A.S.
w/ A.S.
Acc
F1
Acc
Model
Majority
92.76
48.12
–
Shallow Features BiLSTM ESIM w/ BioELMo BioBERT
93.01 94.59 94.82 96.50
54.59 73.40 74.01 84.65
93.05 94.45 95.04 96.40
F1
–
55.12 71.81 75.22 83.76
Table 6 : Results of Phase I ( eq . 1 ) .
Experiments are on PQA - A under reasoning - required setting .
A.S. : additional supervision .
Model
Eq . 2
Eq .
3
Acc
F1
Acc
F1
Majority Human ( single )
Shallow Features BiLSTM ESIM w/ BioELMo BioBERT
92.76 –
93.11 95.97 97.01 98.28
48.12 –
56.11 83.70 88.47 93.17
55.20 90.40†
23.71 84.18†
54.44 71.46 74.06 80.80
38.63 50.93 58.53 63.50
Table 7 : Bootstrapping results .
Experiments are on PQA - A ( eq . 2 ) and PQA - L ( eq . 3 ) under reasoningfree setting .
†Reasoning - free human performance .
5.3
Intermediate Results
In this section we show the intermediate results of multi - phase ﬁne - tuning schedule .
w/o A.S.
w/ A.S.
Acc
F1
Acc
F1
55.10 76.66
56.53 85.33
55.10 78.47
54.82 80.93
23.68 66.12
24.07 81.32
23.68 63.32
24.87 68.84
– 77.71
– 85.68
– 79.62
– 81.02
– 67.97
– 81.87
– 64.91
– 70.04
Majority Shallow Features
Majority BiLSTM
Majority ESIM w/ BioELMo
Majority BioBERT
Table 8 : Phase II results ( eq . 5 ) .
Experiments are on pseudo - labeled PQA - U under reasoning - required setting .
A.S. : additional supervision .
Bootstrapping : Results are shown in Table 7 .
Bootstrapping is a three - step process : ﬁne - tuning on PQA - A , then on PQA - L and pseudo - labeling PQA - U. All three steps are using question and long answer as input .
Expectedly , models perform better in this reasoning - free setting than they do in reasoning - required setting ( for PQA - A , Eq . 2 results in Table 7 are better than the performance in Table 6 ; for PQA - L , Eq . 3 results in Table 7 are better than the performance in Table 5 ) .
Phase I : Results are shown in Table 6 .
Phase I is ﬁne - tuning on PQA - A using question and context .
Since PQA - A is imbalanced due to its collection process , a trivial majority baseline gets 92.76 % accuracy .
Other models have better accuracy and especially macro - F1 than majority baseline .
Finetuned BioBERT performs best .
Phase II : Results are shown in Table 8 .
In Phase II , since each model is ﬁne - tuned on its own pseudo - labeled PQA - U instances , results are not comparable between models .
While the ablation study in Table 5 clearly shows that Phase II is helpful , performance in Phase II does n’t necessarily correlate with ﬁnal performance on PQA - L.
2574  6 Conclusion
We present PubMedQA , a novel dataset aimed at biomedical research question answering using yes / no / maybe , where complex quantitative reasoning is required to solve the task .
PubMedQA has substantial automatically collected instances as well as the largest size of expert annotated
yes / no / maybe questions in biomedical domain .
We provide a strong baseline using multi - phase ﬁne - tuning of BioBERT with long answer as additional supervision , but it ’s still much worse than just single human performance .
There are several interesting future directions to explore on PubMedQA , e.g. : ( 1 ) about 21 % of PubMedQA contexts contain no natural language descriptions of numbers , so how to properly handle these numbers is worth studying ; ( 2 ) we use binary BoW statistics prediction as a simple demonstration for additional supervision of long answers .
Learning a harder but more informative auxiliary task of long answer generation might lead to further improvements .
Articles of PubMedQA are biased towards clinical study - related topics ( described in Appendix B ) , so PubMedQA has the potential to assist evidence - based medicine , which seeks to make clinical decisions based on evidence of high quality clinical studies .
Generally , PubMedQA can serve as a benchmark for testing scientiﬁc reasoning abilities of machine reading comprehension models .
7 Acknowledgement
We are grateful for the anonymous reviewers of EMNLP who gave us very valuable comments and suggestions .
