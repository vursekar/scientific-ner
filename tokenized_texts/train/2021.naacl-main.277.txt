Controllable Text Simpliﬁcation with Explicit Paraphrasing
Mounica Maddela1 , Fernando Alva - Manchego2 , Wei Xu1 1School of Interactive Computing , Georgia Institute of Technology 2Department of Computer Science , University of Shefﬁeld
{ mounica.maddela , wei.xu}@cc.gatech.edu
f.alva@sheffield.ac.uk
Abstract
Text Simpliﬁcation improves the readability of sentences through several rewriting transformations , such as lexical paraphrasing , deletion , and splitting .
Current simpliﬁcation systems are predominantly sequence - to - sequence models that are trained end - to - end to perform all these operations simultaneously .
However , such systems limit themselves to mostly deleting words and can not easily adapt to the requirements of different target audiences .
In this paper , we propose a novel hybrid approach that leverages linguistically - motivated rules for splitting and deletion , and couples them with a neural paraphrasing model to produce varied rewriting styles .
We introduce a new data augmentation method to improve the paraphrasing capability of our model .
Through automatic and manual evaluations , we show that our proposed model establishes a new state - ofthe art for the task , paraphrasing more often than the existing systems , and can control the degree of each simpliﬁcation operation applied to the input texts.1
1
Introduction
Text Simpliﬁcation aims to improve the readability of texts with simpler grammar and word choices while preserving meaning ( Saggion , 2017 ) .
It provides reading assistance to children ( Kajiwara et al , 2013 ) , non - native speakers ( Petersen and Ostendorf , 2007 ; Pellow and Eskenazi , 2014 ; Paetzold , 2016 ) , and people with reading disabilities ( Rello et al , 2013 ) .
It also helps with downstream natural language processing tasks , such as parsing ( Chandrasekar et al , 1996 ) , semantic role labelling ( Vickrey and Koller , 2008 ) , information extraction ( Miwa et al , 2010 ) , and machine translation ( MT , Chen et al , 2012 ; Štajner and Popovic , 2016 ) .
Since 2016 , nearly all text simpliﬁcation systems have been sequence - to - sequence ( seq2seq )
1Our code and data are available at https://github . com / mounicam / controllable_simplification .
OLen % new % eq % split 20.7 Complex ( input ) Narayan and Gardent ( 2014)† 10.4 Zhang and Lapata ( 2017)†
13.8
Dong et al ( 2019)† 10.9 Kriz et al ( 2019)† 10.8 17.0 LSTM 17.1 Our Model 17.9 Simple ( reference )
100.0 0.8 16.8 4.6 1.2 28.4 3.0 0.0
0.0 0.4 0.0 0.0 0.0 1.2 31.8 30.0
0.0 0.7 8.1 8.4 11.2 6.1 17.0 29.0
Table 1 : Output statistics of 500 random sentences from the Newsela test set .
Existing systems rely on deletion and do not paraphrase well .
OLen , % new , % eq and % split denote the average output length , percentage of new words added , percentage of system outputs that are identical to the inputs , and percentage of sentence splits , respectively .
†We used the system outputs shared by their authors .
models trained end - to - end , which have greatly increased the ﬂuency of the outputs ( Zhang and Lapata , 2017 ; Nisioi et al , 2017 ; Zhao et al , 2018 ; Kriz et al , 2019 ; Dong et al , 2019 ; Jiang et al , 2020 ) .
However , these systems mostly rely on deletion and tend to generate very short outputs at the cost of meaning preservation ( Alva - Manchego et al , 2017 ) .
Table 1 shows that they neither split sentences nor paraphrase well as reﬂected by the low percentage of splits ( < 1 % ) and new words introduced ( < 11.2 % ) .
While deleting words is a viable ( and the simplest ) way to reduce the complexity of sentences , it is suboptimal and unsatisfying .
Professional editors are known to use a sophisticated combination of deletion , paraphrasing , and sentence splitting to simplify texts ( Xu et al , 2015 ) .
Another drawback of these end - to - end neural systems is the lack of controllability .
Simpliﬁcation is highly audience dependant , and what constitutes simpliﬁed text for one group of users may not be acceptable for other groups ( Xu et al , 2015 ; Lee and Yeung , 2018 ) .
An ideal simpliﬁcation system should be able to generate text with varied characteristics , such as different lengths , readability levels , and number of split sentences , which can be difﬁcult to control in end - to - end systems .
Proceedingsofthe2021ConferenceoftheNorthAmericanChapteroftheAssociationforComputationalLinguistics : HumanLanguageTechnologies , pages3536–3553June6–11,2021. © 2021AssociationforComputationalLinguistics3536  Figure 1 : Overview of our proposed model for text simpliﬁcation , which can perform a controlled combination of sentence splitting , deletion , and paraphrasing .
To address these issues , we propose a novel hybrid approach that combines linguisticallymotivated syntactic rules with data - driven neural models to improve the diversity and controllability of the simpliﬁcations .
We hypothesize that the seq2seq generation model will learn lexical and structural paraphrases more efﬁciently from the parallel corpus , when we ofﬂoad some of the burden of sentence splitting ( e.g. , split at comma ) and deletion ( e.g. , remove trailing preposition phrases ) decisions to a separate component .
Previous hybrid approaches for simpliﬁcation ( Narayan and Gardent , 2014 ; Siddharthan and Mandya , 2014 ; Sulem et al , 2018c ) used splitting and deletion rules in a deterministic step before applying an MT - based paraphrasing model .
In contrast , our approach provides a more ﬂexible and dynamic integration of linguistic rules with the neural models through ranking and data augmentation ( Figure 1 ) .
We compare our method to several state - of - theart systems in both automatic and human evaluations .
Our model achieves overall better performance measured by SARI ( Xu et al , 2016 ) and other metrics , showing that the generated outputs are more similar to those written by human editors .
We also demonstrate that our model can control the extent of each simpliﬁcation operation by : ( 1 ) imposing a soft constraint on the percentage of words to be copied from the input in the seq2seq model , thus limiting lexical paraphrasing ; and ( 2 ) selecting candidates that underwent a desired amount of splitting and/or deletion .
Finally , we create a new test dataset with multiple human references for Newsela ( Xu et
al , 2015 ) , the widely used text simpliﬁcation corpus , to speciﬁcally evaluate lexical paraphrasing .
2 Our Approach
Figure 1 shows an overview of our hybrid approach .
We combine linguistic rules with data - driven neural models to improve the controllability and diversity of the outputs .
Given an input complex sentence x , we ﬁrst generate a set of intermediate simpliﬁcations V = { v1 , v2 , . . .
, vn } that have undergone splitting and deletion ( § 2.1 ) .
These intermediate sentences are then used for two purposes : ( 1 ) Selected by a pairwise neural ranking model ( § 2.2 ) based on the simpliﬁcation quality and then rewritten by the paraphrasing component ; ( 2 ) Used for data augmentation to improve the diversity of the paraphrasing model ( § 2.3 ) .
2.1 Splitting and Deletion
We leverage the state - of - the - art system for structural simpliﬁcation , called DisSim ( Niklaus et al , 2019 ) , to generate candidate simpliﬁcations that focus on splitting and deletion.2 The English version of DisSim applies 35 hand - crafted grammar rules to break down a complex sentence into a set of hierarchically organized sub - sentences ( see Figure 1 for an example ) .
We choose a rule - based approach for sentence splitting because it works really well .
In our pilot experiments , DisSim successfully split 92 % of 100 complex sentences from the training data with more than 20 words , and introduced errors for only 6.8 % of these splits .
We consider these sub - sentences as candidate simpliﬁcations for the later steps , except those that are extremely short or long ( compression ratio /∈
[ 0.5 , 1.5 ] ) .
The compression ratio is calculated as the number of
2https://github.com/Lambda-3/
DiscourseSimplification
3537  words in a candidate simpliﬁcation vi ( which may contain one or more sub - sentences ) divided by that of the original sentence x.
To further increase the variety of generated candidates , we supplement DisSim with a Neural Deletion and Split module trained on the text simpliﬁcation corpus ( § 3.1 ) .
We use a Transformer seq2seq model with the same conﬁguration as the base model for paraphrasing ( § 2.3 ) .
Given the input sentence x , we constrain the beam search to generate 10 outputs with splitting and another 10 outputs without splitting .
Then , we select the outputs that do not deviate substantially from x ( i.e. , Jaccard similarity > 0.5 ) .
We add outputs from the two systems to the candidate pool V .
2.2 Candidate Ranking
We design a neural ranking model to score all the candidates that underwent splitting and deletion , V = { v1 , v2 , . . .
, vn } , then feed the top - ranked one to the lexical paraphrasing model for the ﬁnal output .
We train the model on a standard text simpliﬁcation corpus consisting of pairs of complex sentence x and manually simpliﬁed reference y.
Scoring Function .
To assess the “ goodness ” of each candidate vi during training , we deﬁne the gold scoring function g∗ as a length - penalized BERTscore :
g∗(vi , y ) = e−λ||φvi −φy||×
BERT Score(vi , y )
( 1 )
BERTScore ( Zhang et al , 2020b ) is a text similarity metric that uses BERT ( Devlin et al , 2019 ) embeddings to ﬁnd soft matches between word pieces ( Wu et al , 2016 ) instead of exact string matching .
We introduce a length penalty to favor the candidates that are of similar length to the human reference y and penalize those that deviate from the target compression ratio φy .
λ deﬁnes the extent of penalization and is set to 1 in our experiments .
φvi represents the compression ratios of vi compared to the input x.
In principle , other similarity metrics can also be used for scoring .
Pairwise Ranking Model .
We train the ranking model in a pairwise setup since BERTScore is sensitive to the relative rather than absolute similarity , when comparing multiple candidates with the same reference .
We transform the gold ranking of V ( |V | = n ) into n2 pairwise comparisons for every
candidate pair , and learn to minimize the pairwise ranking violations using hinge loss :
LM R =
ij = g(vk dk lk ij = sign
nk(cid:88 )
nk(cid:88 )
m ( cid:88 )
1 m
i=1
1 n2 k k=1
i )
− g(vk j ) ( cid:16 ) i , yk ) − g∗(vk g∗(vk
j=1,i(cid:54)=j
max(0 , 1 − lk
ijdk ij )
( cid:17 ) j , yk )
( 2 )
where g ( . ) is a feedforward neural network , m is the number of training complex - simple sentence pairs , k is the index of training examples , and nk represents the number of generated candidates ( § 2.1 ) .
On average , nk is about 14.5 for a sentence of 30 words , and can be larger for longer sentences .
We consider 10 randomly sampled candidates for each complex sentence during training .
Features .
For the feedforward network g ( . ) , we use the following features : number of words in vi and x , compression ratio of vi with respect to x , Jaccard similarity between vi and x , the rules applied on x to obtain vi , and the number of rule applications .
We vectorize all the real - valued features using Gaussian binning ( Maddela and Xu , 2018 ) , which has shown to help neural models trained on numerical features ( Liu et al , 2016 ; Sil et al , 2017 ; Zhong et al , 2020 ) .
We concatenate these vectors before feeding them to the ranking model .
We score each candidate vi separately and rank them in the decreasing order of g(vi ) .
We provide implementation details in Appendix A.
2.3 Paraphrase Generation
We then paraphrase the top - ranked candidate ˆv ∈ V to generate the ﬁnal simpliﬁcation output ˆy .
Our paraphrase generation model can explicitly control the extent of lexical paraphrasing by specifying the percentage of words to be copied from the input sentence as a soft constraint .
We also introduce a data augmentation method to encourage our model to generate more diverse outputs .
Base Model .
Our base generation model is a Transformer encoder - decoder initialized by the BERT checkpoint ( ? ) , which achieved the best reported performance on text simpliﬁcation in the recent work ( Jiang et al , 2020 ) .
We enhance this model with an attention - based copy mechanism to encourage lexical paraphrasing , while remaining faithful to the input .
3538  Copy Control .
Given the input candidate ˆv = ( ˆv1 , ˆv2 , . . . , ˆvl ) of l words and the percentage of copying cp ∈ ( 0 , 1 ] , our goal is to paraphrase the rest of ( 1 − cp ) × l words in ˆv to a simpler version .
To achieve this , we convert cp into a vector of the same dimension as BERT embeddings using Gaussian binning ( Maddela and Xu , 2018 ) and add it to the beginning of the input sequence ˆv .
The Transformer encoder then produces a sequence of context - aware hidden states H = ( h1 , h2 . . .
hl ) , where hi corresponds to the hidden state of ˆvi .
Each hi is fed into the copy network which predicts the probability pi that word ˆvi should be copied to output .
We create a new hidden state ¯hi by adding hi to a vector u scaled according to pi .
In other words , the scaled version of u informs the decoder whether the word should be copied .
A single vector u is used across all sentences and hidden states , and is randomly initialized then updated during training .
More formally , the encoding process can be described as follows :
( h1 , h2 , . .
. , hl )
= encoder([cp ; ˆv1 , ˆv2 , . . .
, ˆvl ] ) ¯hi =
hi + pi · u , ¯H = ( ¯h1 , ¯h2 , . .
. , ¯hl )
( 3 )
The Transformer decoder generates the output sequence from ¯H. Our copy mechanism is incorporated into the encoder rather than copying the input words during the decoding steps ( Gu et al , 2016 ; See et al , 2017 ) .
Unless otherwise speciﬁed , we use the average copy ratio of the training dataset , 0.7 , for our experiments .
Multi - task Training .
We train the paraphrasing model and the copy network in a multi - task learning setup , where predicting whether a word should be copied serves as an auxiliary task .
The gold labels for this task are obtained by checking if each word in the input sentence also appears in the human reference .
When a word occurs multiple times in the input , we rely on the monolingual word alignment results from JacanaAlign ( Yao et al , 2013 ) to determine which occurrence is the one that gets copied .
We train the Transformer model and the copy network jointly by minimizing the cross - entropy loss for both decoder generation and binary word classiﬁcation .
We provide implementation and training details in Appendix A.
Data Augmentation .
The sentence pairs in the training corpus often exhibit a variable mix of splitting and deletion operations along with paraphras1 , v(cid:48 )
2 , . .
. , v(cid:48 )
ing ( see Figure 1 for an example ) , which makes it difﬁcult for the encoder - decoder models to learn paraphrases .
Utilizing DisSim , we create additional training data that focuses on lexical paraphrasing For each sentence pair ( cid:104)x , y(cid:105 ) , we ﬁrst generate a set of candidates V = { v1 , v2 , . . .
, vn } by applying DisSim to x , as described in § 2.1 .
Then , we select a a subset of V , called V ( cid:48 ) = { v(cid:48 ) n(cid:48 ) } ( V ( cid:48 ) ∈ V ) that are fairly close to the reference y , but have only undergone splitting and deletion .
We score each candidate vi using the length - penalized BERTScore g∗(vi , y ) in Eq .
( 1 ) , and discard those with scores lower than 0.5 .
While calculating g∗ , we set φy and λ to 1 and 2 respectively to favor candidates of similar length to the reference y. We also discard the candidates that have different number of split sentences with respect to the reference .
Finally , we train our model on the ﬁltered candidate - reference sentence pairs ( cid:104)v(cid:48 ) 2 , y(cid:105 ) , . . .
, ( cid:104)v(cid:48 ) n(cid:48 ) , y(cid:105 ) , which focus on lexical paraphrasing , in addition to ( cid:104)x , y(cid:105 ) .
1 , y(cid:105 ) , ( cid:104)v(cid:48 )
2.4 Controllable Generation
We can control our model to concentrate on speciﬁc operations .
For split- or delete - focused simpliﬁcation , we select candidates with desirable length or number of splits during the candidate generation step .
We perform only the paraphrase generation step for paraphrase - focused simpliﬁcation .
The paraphrasing model is designed speciﬁcally to paraphrase with minimal deletion and without splitting .
It retains the length and the number of split sentences in the output , thus preserving the extent of deletion and splitting controlled in the previous steps .
We control the degree of paraphrasing by changing the copy ratio .
3 Experiments
In this section , we compare our approach to various sentence simpliﬁcation models using both automatic and manual evaluations .
We show that our model achieves a new state - of - the - art and can adapt easily to different simpliﬁcation styles , such as paraphrasing and splitting without deletion .
3.1 Data and Experiment Setup
We train and evaluate our models on Newsela ( Xu et
al , 2015)3 and Wikipedia copora ( Zhu et al , 2010 ; Woodsend and Lapata , 2011 ; Coster and Kauchak , 2011 ) .
Newsela consists of 1,882 news
3https://newsela.com/data/
3539  Models Complex ( input ) Simple ( reference ) LSTM Hybrid - NG Transformerbert EditNTS Our Model
SARI add keep 47.6 0.0 15.9 86.6 86.8 90.5 45.5 1.6 35.0 41.8 1.9 35.8 43.6 3.1 37.0 45.8 1.6 38.1 3.3 38.7 42.9
del 0.0 98.2 57.8 63.7 64.4 66.5 70.0
FK SLen OLen CR % split 23.8 12.0 19.0 7.4 17.9 8.9 23.7 9.9 20.2 8.1 21.4 8.5 20.1 7.9
1.0 0.83 0.8 1.0 0.87 0.92 0.86
23.7 14.4 17.6 21.2 15.6 16.0 15.8
0.0 28.0 1.9 11.6 24.1 32.0 23.9
s - BL % new % eq 100.0 0.0 100.0 0.0 33.0 35.5 20.2 5.0 66.5 5.1 8.8 59.7 10.2 12.8 58.8 0.2
8.3 71.4 16.2 48.7 0.4
Table 2 : Automatic evaluation results on NEWSELA - AUTO test set .
We report SARI , the main automatic metric for simpliﬁcation , and its three edit scores namely precision for delete ( del ) and F1 scores for add and keep operations .
We also report FKGL ( FK ) , average sentence length ( SLen ) , output length ( OLen ) , compression ratio ( CR ) , self - BLEU ( s - BL ) , percentage of sentence splits ( % split ) , average percentage of new words added to the output ( % new ) , and percentage of sentences identical to the input ( % eq ) .
Bold typeface denotes the best performances ( i.e. , closest to the reference ) .
articles with each article rewritten by professional editors for students in different grades .
We used the complex - simple sentence pairs automatically aligned by Jiang et al ( 2020 ) , called the NEWSELAAUTO dataset .
To capture sentence splitting , we joined the adjacent sentences in the simple article that are aligned to the same sentence in the complex article .
Following Štajner et al ( 2015 ) , we removed the sentence pairs with high ( > 0.9 ) and low ( < 0.1 ) BLEU ( Papineni et al , 2002 ) scores , which mostly correspond to the near identical and semantically divergent sentence pairs respectively .
The ﬁnal dataset consists of 259,778 train , 32,689 validation and 33,391 test complex - simple sentence pairs , where ∼30 % of pairs involve sentence splitting .
Besides Newsela , we also provide the details of experiments on Wikipedia corpus in Appendix F , which show similar trends .
To demonstrate that our model can be controlled to generate diverse simpliﬁcations , we evaluate under the following settings : ( i ) Standard evaluation on the NEWSELA - AUTO test set similar to the methodology in the recent literature ( Jiang et al , 2020 ;
Dong et al , 2019 ; Zhang and Lapata , 2017 ) , and ( ii ) Evaluation on different subsets of the NEWSELA - AUTO test set that concentrate on a speciﬁc operation .
We selected 9,356 sentence pairs with sentence splits for split - focused evaluation .
Similarly , we chose 9,511 sentence pairs with compression ratio < 0.7 and without sentences splits to evaluate delete - focused simpliﬁcation .
We created a new dataset , called NEWSELATURK , to evaluate lexical paraphrasing.4 Similar to the WIKIPEDIA - TURK benchmark corpus ( Xu et al , 2016 ) , NEWSELA - TURK consists of human - written references focused on lexical para4We also provide results on 8,371 sentence pairs of NEWSELA - AUTO test set with compression ratio >
0.9 and no splits in Appendix D , which show similar trends .
phrasing .
We ﬁrst selected sentence pairs from the NEWSELA - AUTO test set of roughly similar length ( compression ratio between 0.8 and 1.2 ) and no sentence splits because they more likely involve paraphrasing .
Then , we asked Amazon Mechanical Turk workers to simplify the complex sentence without any loss in meaning.5 To ensure the quality of simpliﬁcations , we manually selected the workers using the qualiﬁcation test proposed in AlvaManchego et al ( 2020 ) , during which the workers were asked to simplify three sentences .
We selected top 35 % of the 300 workers that participated in the test .
We periodically checked the submissions and removed the bad workers .
In the end , we collected 500 sentences with 4 references for each sentence .
3.2 Existing Methods
We use the following simpliﬁcation approaches as baselines : ( i ) BERT - Initialized Transfomer ( ? ) , where the encoder is initialized with BERTbase checkpoint and the decoder is randomly initialized .
It is the current state - of - the - art for text simpliﬁcation ( Jiang et al , 2020 ) .
( ii ) EditNTS ( Dong et al , 2019),6 another state - of - the - art model that uses a neural programmer - interpreter ( Reed and de Freitas , 2016 ) to predict the edit operation on each word , and then generates the simpliﬁed sen(iii )
LSTM baseline , a vanilla encodertence .
decoder model used in Zhang and Lapata ( 2017 ) .
( iv ) Hybrid - NG ( Narayan and Gardent , 2014),7 one of the best existing hybrid systems that performs splitting and deletion using a probabilistic model and lexical substitution with a phrase - based machine translation system .
We retrained all the models on the NEWSLA - AUTO dataset .
5We provide instructions in Appendix B 6https://github.com/yuedongP/EditNTS 7https://github.com/shashiongithub/
Sentence - Simplification - ACL14
3540  Models Complex ( input ) Simple ( reference ) Hybrid - NG Transformerbert EditNTS Our Model Our Model ( no split ; cp = 0.6 )
Our Model ( no split ; cp = 0.7 ) Our Model ( no split ; cp = 0.8 )
0.0
67.0
SARI add keep del FK SLen OLen CR % split 0.0 12.8 23.3 22.3 62.3 44.8 68.3 73.9 11.1 23.8 57.0 54.8 10.7 21.6 38.2 16.1 54.9 49.8 8.9 36.0 61.0 49.6 9.5 37.4 16.9 16.6 55.1 55.5 8.8 38.1 57.7 55.6 11.2 22.1 39.0 63.1 56.6 11.5 22.2 41.0 65.0 54.0 11.8 22.4 40.6
0.0 0.0 7.0 23.0 0.0 19.6 0.2 0.0 0.0
1.0 1.01 0.98 0.87 0.94 0.86 0.98 0.98 0.99
23.5 23.5 23.1 20.2 21.9 20.2 22.9 22.9 23.2
2.8 3.3 1.6 3.9 3.8 3.4 2.9
s - BL % new % eq 100.0
0.0 100.0 0.0 24.1 48.5 1.4 9.1 57.2 7.6 13.3 58.7 0.0 5.8 73.1 0.0 50.4 15.7 18.0 1.0 55.9 4.2 10.4 69.4 10.8 6.6 77.7
Table 3 : Automatic evaluation results on NEWSELA - TURK that focuses on paraphrasing ( 500 complex sentences with 4 human written paraphrases ) .
We control the extent of paraphrasing of our models by specifying the percentage of words to be copied ( cp ) from the input as a soft constraint .
Models Complex ( input ) Simple ( reference ) Hybrid - NG Transformerbert EditNTS Our Model Our Model ( w/ split )
0.0
SARI add keep del FK SLen OLen CR % split 0.0 14.6 30.0 17.0 51.1 93.0 89.9 91.6 97.5 7.0 13.4 44.9 64.1 11.6 25.5 37.1 17.1 47.3 67.0 8.8 39.5 16.9 49.1 66.2 9.1 38.9 17.5 46.6 67.6 8.7 39.4 15.3 50.6 70.1 8.1 42.1
1.0 0.98 100.0 1.0 17.3 39.7 0.85 50.3 0.88 40.6 0.85 93.5 1.02
30.2 28.6 30.1 25.3 26.2 25.5 30.3
2.2 4.2 1.5 4.0 5.6
0.0
s - BL % new % eq 100.0 0.0 100.0 0.0 29.7 36.8 1.6
8.7 57.7 5.2 11.9 57.7 0.2 7.2 71.2 0.1 15.6 48.3 1.1 12.4 60.7
Table 4 : Automatic evaluation results on a splitting - focused subset of the NEWSELA - AUTO test set ( 9,356 sentence pairs with splitting ) .
Our model chooses only candidates that have undergone splitting during the ranking step .
Models Complex ( input ) Simple ( reference ) Hybrid - NG Transformerbert EditNTS Our Model Our Model ( no split ; CR<0.7 )
0.0
SARI add keep del FK SLen OLen CR % split 0.0 12.9 25.8 12.6 27.0 79.1 10.6 22.7 16.2 29.6 78.7 8.4 16.6 29.7 80.7 8.8 29.8 85.3 8.2 16.4 16.8 28.5 84.1 8.6
9.6 28.8 85.7 82.7 76.0 98.6 6.7 35.8 36.8 37.1 39.2 38.2
26.0 12.6 25.9 21.7 23.1 21.9 17.5
0.0 0.0 13.3 27.7 36.6 29.1 0.1
1.0 0.5 1.0 0.85 0.91 0.85 0.68
1.4 2.2 1.0 2.4 2.0
s - BL % new % eq 100.0 0.0 100.0 0.0 32.6 19.6 3.6
8.7 58.9 8.2 12.3 57.9 0.6 7.8 71.8 15.6 0.4 48.8 0.2 42.0 12.5
Table 5 : Automatic evaluation results on a deletion - focused subset of the NEWSELA - AUTO test set ( 9,511 sentence pairs with compression ratio < 0.7 and no sentence splits ) .
Our model selects only candidates with similar compression ratio and no splits during ranking .
3.3 Automatic Evaluation
Metrics .
We report SARI ( Xu et al , 2016 ) , which averages the F1 / precision of n - grams ( n ∈ { 1 , 2 , 3 , 4 } ) inserted , deleted and kept when compared to human references .
More speciﬁcally , it computes the F1 score for the n - grams that are added ( add),8 which is an important indicator if a model is good at paraphrasing .
The model ’s deletion capability is measured by the F1 score for n - grams that are kept ( keep ) and precision for those deleted ( del).9 To evaluate a model ’s para8We slightly improved the SARI implementation by Xu et al ( 2016 ) to exclude the spurious ngrams while calculating the F1 score for add .
For example , if the input contains the phrase “ is very beautiful ” , the phrase “ is beautiful ” is treated as a new phrase in the original implementation even though it is caused by the delete operation .
9SARI score of a reference with itself may not always be 100 as it considers 0 divided by 0 as 0 , instead of 1 , when calculating n - gram precision and recall .
This avoids the inﬂation of del scores when the input is same as the output .
phrasing capability and diversity , we calculate the BLEU score with respect to the input ( s - BL ) , the percentage of new words ( % new ) added , and the percentage of system outputs identical to the input ( % eq ) .
Low s - BL , % eq , or high % new indicate that the system is less conservative .
We also report Flesch - Kincaid ( FK ) grade level readability ( Kincaid and Chissom , 1975 ) , average sentence length ( SLen ) , the percentage of splits ( % split ) , compression ratio ( CR ) , and average output length ( OLen ) .
We do not report BLEU because it often does not correlate with simplicity ( Sulem et al , 2018a , b ; Xu et
al , 2016 ) .
Results .
Table 2 shows the results on NEWSELAAUTO test set .
Our model outperforms the state - ofthe - art Transformerbert and EditNTS models with respect to SARI.10 EditNTS and LSTM focus on
10According to Jiang et al ( 2020 ) , a BERT - initialized Transformer performs better than EditNTS .
We see a different behavior here because we retained sentence splits from 0 - 1 , 1 - 2 ,
3541  Model Hybrid - NG EditNTS Transformerbert Our Model Simple ( reference )
3.23 * 3.88 * 3.91 4.02 4.12
Overall Simpliﬁcation
Structural Simpliﬁcation
Fluency Adequacy Simplicity Average Fluency Adequacy Has Split Correct Split
2.96 * 3.70 3.63 3.65 3.64
3.40 * 3.67 3.65 * 3.77 3.97
3.19 * 3.75 3.73 3.81 3.84
3.25 * 4.08 4.15 4.19 4.41
3.53 * 3.81 * 3.65 * 4.13 4.10
42 % 41 % 53 % 97 % 100 %
15 % 18 % 49 % 90 % 100 %
Table 6 : Human evaluation of 100 random simpliﬁcations from the NEWSELA - AUTO test set and the split - focused subset of the same test set .
Has Split and Correct Split denote the percentage of the output sentences that have undergone splitting and the percentage of coherent splits respectively .
* denotes that our model is signiﬁcantly better than the corresponding baseline ( according to a t - test with p < 0.05 ) .
deletion as they show high self - BLEU ( > 66.5 ) and FK ( > 8.8 ) scores despite having compression ratios similar to other systems .
Transformer model alone is rather conservative and copies 10.2 % of the sentences directly to the output .
Although HybridNG makes more changes than any other baselines , its SARI and add scores are 3.7 and 1.7 points lower than our model indicating that it generates more errors .
Our model achieves the lowest self - BLEU ( 48.7 ) , FK ( 7.9 ) , and percentage of sentences identical to the input ( 0.4 ) , and the highest add ( 3.3 ) score and percentage of new words ( 16.2 % ) .
In other words , our system is the least conservative , generates more good paraphrases , and mimics the human references better .
We provide examples of system outputs in Table 9 and Appendix C.
Tables 3 , 4 , and 5 show the results on NEWSELATURK , split - focused , and delete - focused subsets of NEWSELA - AUTO test set respectively .
For these experiments , we conﬁgure our model to focus on speciﬁc operations ( details in § 2.4 ) .
Our model again outperforms the existing systems according to SARI , add score , and percentage of new words , which means that our model is performing more meaningful paraphrasing .
We show that we can control the extent of paraphrasing by varying the copy ratio ( cp ) .
Our model splits 93.5 % of the sentences , which is substantially better than the other models .
3.4 Human Evaluation
We performed two human evaluations : one to measure the overall simpliﬁcation quality and the other to speciﬁcally capture sentence splitting.11 For the ﬁrst one , we asked ﬁve Amazon Mechanical Turk workers to evaluate ﬂuency , adequacy and simplicity of 100 random simpliﬁcations from the NEWSELA - AUTO test set .
We supplemented the
2 - 3 readability levels in NEWSELA - AUTO , which contained more lexical overlaps and inﬂated the scores for EditNTS .
11We provide instructions in Appendix E.
ﬂuency and adequacy ratings with binary questions described in Zhang et al ( 2020a ) for the second evaluation over another 100 simpliﬁcations from the NEWSELA - AUTO split - focused test set .
We asked if the output sentence exhibits spitting and if the splitting occurs at the correct place .
While ﬂuency measures the grammaticality of the output , adequacy captures the extent of meaning preserved when compared to the input .
Simplicity evaluates if the output is simpler than the input .
Each sentence was rated on a 5 - point Likert scale and we averaged the ratings from the ﬁve workers .
We chose the majority value for the binary ratings .
We used the output of our model that is tailored for sentence splitting for the second evaluation .
Table 6 demonstrates that our model achieves the best ﬂuency , simplicity , and overall ratings .
The adequacy rating is also very close to that of Transformerbert and EditNTS even though our model is performing more paraphrasing ( Table 2 ) , which veriﬁes that the changes made by our system are meaningful .
Our model achieves the most number of correct sentence splits ( 90 % ) , and the highest ﬂuency ( 4.19 ) for syntactic simpliﬁcation , showing that it can generate more number of coherent sentence splits when compared to other models .
4 Model Analysis
In this section , we analyze the contribution of each model component and examine the system errors .
4.1 System Ablations
We evaluate our key design choices , namely candidate ranking that is based on length - penalized BERTScore and paraphrase generation that uses data augmentation and copy attention .
Table 8 summarizes the results .
Our pairwise ranking model ( BERTScorelen ) achieves an increase of 3.2 points in SARI when compared to choosing a random ( Random ) candidate .
Randomly selecting a candidate also performs fairly well , indicating that the
3542  Examples
Good ( 49 % ) Complex
Simple
Our Model Hallucinations ( 13 % ) Complex
Simple Our Model Fluency Errors ( 14 % ) Complex
The Seattle kids petitioned Washington state last year to adopt stricter science - based regulations to protect them against climate change .
The eight kids from Seattle who petitioned Washington state last year are ﬁghting for the state to adopt stricter laws to protect their future against climate change .
The Seattle kids asked the Washington state last year to take tougher rules against climate change .
“ It ’s more of a family than living outside , ” said Jessica Konczal , 33 , whose husband is Sgt .
Matthew Konczal .
Jessica Konczal , age 33 , says the base is its own type of family .
“ It ’s more of a family than living outside , ” said Jessica Konczal , one of the protesters .
Parental feedback on the menu additions so far , from some of the early adopter markets , has been “ phenomenal , ” Leverton said .
Leverton said parents love the new food .
So far , parents parents have feedback on the menu changes has been a great deal , he added .
Simple Our Model Bad Substitution ( 15 % ) Complex Simple Our Model Anaphora Resolution / Entailment ( 12 % ) Complex Simple Our Model Human Reference Errors ( 4 % )
Complex Simple Our Model
One of the device ’s inventors explained to the president that the machine was a prototype .
One of the girls explained it was just a prototype .
One of the inventors told the president that the ﬁrst design was a design .
Sea slugs dubbed sacoglossans are some of the most remarkable biological burglars on the planet .
The sea slugs known as sacoglossans are some of the most interesting burglars on the planet .
Scientists say these are some of the most interesting creatures on the planet .
They ﬂoat in and out of formations that combine the underwater world with the stage .
In the dance on a round stage on the seabed , the dancers swim together and apart .
They ﬂoat in and out of places that combine stage with the underwater .
Table 7 : Error analysis of 200 simpliﬁcations from NEWSELA - AUTO test set generated by our model .
Red marks the errors ; blue marks good paraphrases .
Complex ( input ) Simple ( reference )
Random Candidate BERTScorelen Our Model − augmentation − copy attn − only Transformer − only DisSim
SARI FK CR % split % new 15.9 12.2 1.0 7.5 0.83 90.5 8.1 0.81 33.7 9.0 0.87 36.9 38.6 8.4 0.88 7.9 0.86 37.6 8.1 0.87 36.0 7.7 0.78 37.9 8.3 0.84 37.2
0.0 28.9 34.4 25.9 26.1 29.5 26.2 26.3 27.1
0.0 32.8 5.5 5.9 18.9 12.7 15.9 16.5 18.0
Table 8 : Model ablation study on dev set
sentence splitting and deletion models we chose are of good quality .
Compared to our ﬁnal model ( Our Model ) , its variants without data augmentation ( − augmentation ) and copy mechanism ( − copy attn ) suffer a drop of 1.0 and 2.6 points in SARI respectively and a decrease of at least 3.0 % of new words , which demonstrates that these components encourage the system to paraphrase .
Our model trained on only DisSim ( − only DisSim ) and Transformer ( − only Transformer ) candidates performs close to our best model ( Our Model ) in terms of SARI .
4.2 Error Analysis
To understand the errors generated by our model , we manually classiﬁed 200 simpliﬁcations from the
NEWSELA - AUTO test set into the following categories : ( a ) Good , where the model generated meaningful simpliﬁcations , ( b ) Hallucinations , where the model introduced information not in the input , ( c ) Fluency Errors , where the model generated ungrammatical output , ( d ) Anaphora Resolution , where it was difﬁcult to resolve pronouns in the output .
( e ) Bad substitution , where the model inserted an incorrect simpler phrase , and ( e ) Human Reference Errors , where the reference does not reﬂect the source sentence .
Note that a simpliﬁcation can belong to multiple error categories .
Table 7 shows the examples of each category .
5 Related Work
Before the advent of neural networks , text simpliﬁcation approaches performed each operation separately in a pipeline manner using either handcrafted rules ( Carroll et al , 1999 ; Siddharthan , 2002 ; Siddharthan et al , 2004 ) or data - driven methods based on parallel corpora ( Zhu et al , 2010 ; Woodsend and Lapata , 2011 ; Narayan and Gardent , 2014 ) .
Following neural machine translation , the trend changed to performing all the operations together end - toend ( Zhang and Lapata , 2017 ; Nisioi et al , 2017 ; Zhao et al , 2018 ; Alva - Manchego et al , 2017 ; Vu
3543  Complex
Simple Hybrid - NG
LSTM Transformerbert EditNTS
System Outputs Since 2010 , project researchers have uncovered documents in Portugal that have revealed who owned the ship .
Since 2010 , experts have been ﬁguring out who owned the ship .
since 2010 , the project scientists have uncovered documents in portugal that have about who owns the ship .
since 2010 , scientists have uncovered documents in portugal that have revealed who owned the ship .
they discovered that the ship had been important .
since 2010 , project researchers have uncovered documents in portugal .
have revealed who owned the ship .
Our Model ( cp = 0.6 ) scientists have found a secret deal .
they have discovered who owned the ship .
Our Model ( cp = 0.7 ) scientists have found documents in portugal .
they have also found out who owned the ship .
Our Model ( cp = 0.8 ) scientists have found documents in portugal .
they have discovered who owned the ship .
Complex Simple Hybrid - NG LSTM Transformerbert EditNTS Our Model ( cp = 0.6 ) experts say china ’s air pollution is a big problem for human health .
Our Model ( cp = 0.7 ) experts say china ’s air pollution can cause a lot of damage on human health .
Our Model ( cp = 0.8 ) experts say china ’s air pollution is a huge toll on human health .
Experts say China ’s air pollution exacts a tremendous toll on human health .
China ’s air pollution is very unhealthy .
experts say the government ’s air pollution exacts a toll on human health .
experts say china ’s air pollution exacts a tremendous toll on human health .
experts say china ’s pollution has a tremendous effect on human health .
experts say china ’s air pollution can cause human health .
Table 9 : Examples of system outputs .
Red marks the errors ; blue marks good paraphrases .
cp is a soft constraint that denotes the percentage of words that can be copied from the input .
et al , 2018 ; Kriz et al , 2019 ; Dong et al , 2019 ; Jiang et al , 2020 ) at the cost of controllability and performance as shown in this paper .
6 Conclusion
Controllable text simpliﬁcation has been attempted before , but only with limited capability .
Scarton and Specia ( 2018 ) and Martin et al ( 2020 ) added additional tokens to the input representing grade level , length , lexical , and structural complexity constraints .
Nishihara et al ( 2019 ) proposed a loss which controls word complexity , while Mallinson and Lapata ( 2019 ) concatenated constraints to each word embedding .
Kumar et al ( 2020 ) proposed a linguistic scoring function to control the edits to the input .
Another long body of research focuses on a single simpliﬁcation operation and can be broadly divided into three categories : ( 1 ) Lexical Simpliﬁcation ( Specia et al , 2012 ;
Horn et al , 2014 ; Glavaš and Štajner , 2015 ; Paetzold and Specia , 2017 , 2015 ; Maddela and Xu , 2018 ; Qiang et al , 2020 ) , where complex words are substituted with simpler words .
( 2 ) Syntactic Simpliﬁcation ( Siddharthan , 2006 ; Aharoni and Goldberg , 2018 ; Botha et al , 2018 ; Niklaus et al , 2019 ) , which deals exclusively with sentence splitting , and ( 3 ) Sentence Compression ( Filippova et al , 2015 ; Rush et al , 2015 ; Nallapati et al , 2016 ; See et al , 2017 ; Baziotis et al , 2019 ) , where the goal is to shorten the input sentence by removing its irrelevant content .
We proposed a novel hybrid approach for sentence simpliﬁcation that performs better and produces more diverse outputs than the existing systems .
We designed a new data augmentation method to encourage the model to paraphrase .
We created a new dataset , NEWSELA - TURK , to evaluate paraphrasing - focused simpliﬁcations .
We showed that our model can control various attributes of the simpliﬁed text , such as number of sentence splits , length , and number of words copied from the input .
Acknowledgments
We thank the anonymous reviewers for their valuable feedback .
We thank Newsela for sharing the data and NVIDIA for providing GPU computing resources .
This research is supported in part by the NSF award IIS-1822754 , ODNI and IARPA via the BETTER program contract 19051600004 .
The views and conclusions contained herein are those of the authors and should not be interpreted as necessarily representing the ofﬁcial policies , either expressed or implied , of NSF , ODNI , IARPA , or the U.S. Government .
The U.S. Government is authorized to reproduce and distribute reprints for governmental purposes notwithstanding any copyright annotation therein .
3544  References
Roee Aharoni and Yoav Goldberg .
2018 .
Split and rephrase : Better evaluation and stronger baselines .
In Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics .
Fernando Alva - Manchego , Joachim Bingel , Gustavo Paetzold , Carolina Scarton , and Lucia Specia . 2017 .
Learning how to simplify from explicit labeling of In Proceedings of complex - simpliﬁed text pairs .
the Eighth International Joint Conference on Natural Language Processing .
Fernando Alva - Manchego , Louis Martin , Antoine Bordes , Carolina Scarton , Benoît Sagot , and Lucia Specia .
2020 .
ASSET :
A dataset for tuning and evaluation of sentence simpliﬁcation models with multiple rewriting transformations .
In Proceedings of the Association for Computational Linguistics .
Christos Baziotis ,
Ion Androutsopoulos ,
Ioannis Konstas , and Alexandros Potamianos .
2019 .
SEQˆ3 :
Differentiable sequence - to - sequence - to - sequence autoencoder for unsupervised abstractive sentence In Proceedings of the 2019 Concompression .
ference of the Association for Computational Linguistics : Human Language Technologies .
the North American Chapter of
Jan A. Botha , Manaal Faruqui , John Alex , Jason Baldridge , and Dipanjan Das . 2018 .
Learning to split and rephrase from Wikipedia edit history .
In Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing .
John Carroll , Guido Minnen , Darren Pearce , Yvonne Canning , Siobhan Devlin , and John Tait . 1999 .
Simplifying text for language - impaired readers .
In Proceedings of the 9th Conference of the European Chapter of the ACL .
R. Chandrasekar , Christine Doran , and B. Srinivas .
1996 .
Motivations and methods for text simpliﬁcation .
In The 16th International Conference on Computational Linguistics .
Han - Bin Chen , Hen - Hsen Huang , Hsin - Hsi Chen , and Ching - Ting Tan . 2012 .
A simpliﬁcation - translationrestoration framework for cross - domain SMT appliIn Proceedings of the 24th International cations .
Conference on Computational Linguistics .
William Coster and David Kauchak . 2011 .
Simple English Wikipedia : A new text simpliﬁcation task .
In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics .
Jacob Devlin , Ming - Wei Chang , Kenton Lee , and Kristina Toutanova . 2019 .
BERT : Pre - training of deep bidirectional transformers for language understanding .
In Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics : Human Language Technologies .
Yue Dong , Zichao Li , Mehdi Rezagholizadeh , and Jackie Chi Kit Cheung .
2019 .
EditNTS : An neural programmer - interpreter model for sentence simpliﬁIn Proceedings of cation through explicit editing .
the 57th Annual Meeting of the Association for Computational Linguistics .
Katja Filippova , Enrique Alfonseca , Carlos Colmenares , Lukasz Kaiser , and Oriol Vinyals . 2015 .
In Sentence compression by deletion with lstms .
Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing .
Goran Glavaš and Sanja Štajner . 2015 .
Simplifying lexical simpliﬁcation : Do we need simpliﬁed corpora ?
In Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Conference on Natural Language Processing .
Jiatao Gu , Zhengdong Lu , Hang Li , and Victor O.K. Incorporating copying mechanism in Li . 2016 .
In Proceedings of sequence - to - sequence learning .
the 54th Annual Meeting of the Association for Computational Linguistics .
Colby Horn , Cathryn Manduca , and David Kauchak .
2014 .
Learning a lexical simpliﬁer using wikipedia .
In Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics .
Chao Jiang , Mounica Maddela , Wuwei Lan , Yang Zhong , and Wei Xu . 2020 .
Neural CRF sentence alignment model for text simpliﬁcation .
In Proceedings of the Association for Computational Linguistics .
Tomoyuki Kajiwara , Hiroshi Matsumoto ,
and Selecting proper Kazuhide Yamamoto . 2013 .
In Proceedings of lexical paraphrase for children .
the 25th Conference on Computational Linguistics and Speech Processing .
Robert P. Jr. ; Rogers Richard L. ; Kincaid , J. Peter ; Fishburne and Brad S. Chissom .
1975 .
Derivation of new readability formulas ( automated readability index , fog count and ﬂesch reading ease formula ) for navy enlisted personnel .
research branch report .
Diederik P. Kingma and Jimmy Ba . 2014 .
Adam : CoRR ,
A method for stochastic optimization .
abs/1412.6980 .
Reno Kriz , João Sedoc , Marianna Apidianaki , Carolina Zheng , Gaurav Kumar , Eleni Miltsakaki , and Chris Callison - Burch .
2019 .
Complexity - weighted loss and diverse reranking for sentence simpliﬁcation .
In Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics .
Dhruv Kumar , Lili Mou , Lukasz Golab , and Vechtomova Olga . 2020 .
Iterative edit - based unsupervised sentence simpliﬁcation .
In Proceedings of the Association for Computational Linguistics .
3545  John Lee and Chak Yan Yeung .
2018 .
Personalizing In Proceedings of the 27th lexical simpliﬁcation .
International Conference on Computational Linguistics .
Gustavo Paetzold and Lucia Specia .
2017 .
Lexical simIn Proceedings of pliﬁcation with neural ranking .
the 15th Conference of the European Chapter of the Association for Computational Linguistics .
Dan Liu , Wei Lin , Shiliang Zhang , Si Wei , and Hui Jiang . 2016 .
Neural networks models for entity discovery and linking .
CoRR , abs/1611.03558 .
Gustavo Henrique Paetzold .
2016 .
Lexical Simpliﬁcation for Non - Native English Speakers .
Ph.D. thesis , University of Shefﬁeld .
Mounica Maddela and Wei Xu .
2018 .
A wordcomplexity lexicon and a neural readability ranking model for lexical simpliﬁcation .
In Proceedings of the Conference on Empirical Methods in Natural Language Processing .
Jonathan Mallinson and Mirella Lapata .
2019 .
Controllable sentence simpliﬁcation : Employing syntactic and lexical constraints .
Louis Martin , Éric de la Clergerie , Benoît Sagot , and Antoine Bordes . 2020 .
Controllable sentence simIn Proceedings of The 12th Language pliﬁcation .
Resources and Evaluation Conference .
Makoto Miwa , Rune Sætre , Yusuke Miyao , and Jun’ichi Tsujii .
2010 .
Entity - focused sentence simIn Proceedings pliﬁcation for relation extraction .
of the 23rd International Conference on Computational Linguistics .
Ramesh Nallapati , Bowen Zhou , Cicero dos Santos , Ça˘glar GuÌ‡lçehre , and Bing Xiang .
2016 .
Abstractive text summarization using sequence - to - sequence In Proceedings of The 20th RNNs and beyond .
SIGNLL Conference on Computational Natural Language Learning .
Shashi Narayan and Claire Gardent .
2014 .
Hybrid simpliﬁcation using deep semantics and machine translation .
In Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics .
Christina Niklaus , Matthias Cetto , André Freitas , and Siegfried Handschuh . 2019 .
Transforming complex sentences into a semantic hierarchy .
In Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics .
Daiki Nishihara , Tomoyuki Kajiwara , and Yuki Arase .
2019 .
Controllable text simpliﬁcation with lexical constraint loss .
In Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics : Student Research Workshop .
Kishore Papineni , Salim Roukos , Todd Ward , and WeiJing Zhu . 2002 .
Bleu : A method for automatic evaluation of machine translation .
In Proceedings of the 40th Annual Meeting on Association for Computational Linguistics .
David Pellow and Maxine Eskenazi .
2014 .
An open corpus of everyday documents for simpliﬁcation tasks .
In Proceedings of the 3rd Workshop on Predicting and Improving Text Readability for Target Reader Populations .
Sarah E Petersen and Mari Ostendorf .
2007 .
Text simpliﬁcation for language learners : A corpus analysis .
In Proceedings of Workshop on Speech and Language Technology for Education .
Jipeng Qiang , Yun Li , Zhu Yi , Yunhao Yuan , and Xindong Wu . 2020 .
Lexical simpliﬁcation with pretrained encoders .
Association for the Advancement of Artiﬁcial Intelligence .
Scott E. Reed and Nando de Freitas .
2016 .
Neural programmer - interpreters .
In 4th International Conference on Learning Representations .
Luz Rello , Ricardo Baeza - Yates , and Horacio Saggion .
2013 .
The impact of lexical simpliﬁcation by verbal paraphrases for people with and without dyslexia .
In Proceedings of the 14th International Conference on Computational Linguistics and Intelligent Text Processing .
Alexander M. Rush , Sumit Chopra , and Jason Weston .
2015 .
A neural attention model for abstractive senIn Proceedings of the 2015 tence summarization .
Conference on Empirical Methods in Natural Language Processing .
Horacio Saggion .
2017 .
Automatic text simpliﬁcation .
Synthesis Lectures on Human Language Technologies .
Carolina Scarton and Lucia Specia .
2018 .
Learning simpliﬁcations for speciﬁc target audiences .
In Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics .
Sergiu Nisioi , Sanja Štajner , Simone Paolo Ponzetto , and Liviu P. Dinu . 2017 .
Exploring neural text simIn Proceedings of the 55th Anpliﬁcation models .
nual Meeting of the Association for Computational Linguistics .
Abigail See , Peter J. Liu , and Christopher D. Manning .
2017 .
Get to the point : Summarization with pointergenerator networks .
In Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics .
Gustavo Paetzold and Lucia Specia .
2015 .
LEXenstein : A framework for lexical simpliﬁcation .
In Proceedings of ACL - IJCNLP 2015 System Demonstrations .
Advaith Siddharthan .
2002 .
An architecture for a text In Proceedings of the Lansimpliﬁcation system .
guage Engineering Conference .
3546  Advaith Siddharthan .
2006 .
Syntactic simpliﬁcation and text cohesion .
Research on Language and Computation .
Advaith Siddharthan and Angrosh Mandya .
2014 .
Hybrid text simpliﬁcation using synchronous dependency grammars with hand - written and automatiIn Proceedings of the 14th cally harvested rules .
Conference of the European Chapter of the Association for Computational Linguistics .
Advaith Siddharthan , Ani Nenkova , and Kathleen McKeown .
2004 .
Syntactic simpliﬁcation for improving content selection in multi - document summaIn Proceedings of the 20th International rization .
Conference on Computational Linguistics .
Avirup Sil , Gourab Kundu , Radu Florian , and Wael Hamza . 2017 .
Neural cross - lingual entity linking .
In Proceedings of the 30th Conference on Association for the Advancement of Artiﬁcial Intelligence .
Lucia Specia , Sujay Kumar Jauhar , and Rada Mihalcea .
2012 .
Semeval-2012 task 1 : English lexical simpliﬁcation .
In Proceedings of the First Joint Conference on Lexical and Computational Semantics : Proceedings of the Main Conference and the Shared Task and Proceedings of the Sixth International Workshop on Semantic Evaluation .
Sanja Štajner , Hannah Béchara , and Horacio Saggion . 2015 .
A deeper exploration of the standard PB - SMT approach to text simpliﬁcation and its evaluation .
In Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint Conference on Natural Language Processing .
Sanja Štajner and Maja Popovic . 2016 .
Can text simpliﬁcation help machine translation ?
In Proceedings of the 19th Annual Conference of the European Association for Machine Translation .
Elior Sulem , Omri Abend , and Ari Rappoport . 2018a .
BLEU is not suitable for the evaluation of text simpliﬁcation .
In Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing .
Elior Sulem , Omri Abend , and Ari Rappoport . 2018b .
Semantic structural evaluation for text simpliﬁcation .
In Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguistics : Human Language Technologies .
Elior Sulem , Omri Abend , and Ari Rappoport .
2018c .
Simple and effective text simpliﬁcation using semantic and neural methods .
In Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics .
David Vickrey and Daphne Koller . 2008 .
Sentence simIn Proceedpliﬁcation for semantic role labeling .
ings of the 46th Annual Meeting of the Association for Computational Linguistics .
Tu Vu , Baotian Hu , Tsendsuren Munkhdalai , and Hong Yu .
2018 .
Sentence simpliﬁcation with memoryaugmented neural networks .
In Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguistics : Human Language Technologies .
Kristian Woodsend and Mirella Lapata .
2011 .
Learning to simplify sentences with quasi - synchronous grammar and integer programming .
In Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing .
Yonghui Wu , Mike Schuster , Zhifeng Chen , Quoc V Le , Mohammad Norouzi , Wolfgang Macherey , Maxim Krikun , Yuan Cao , Qin Gao , Klaus Macherey , et al 2016 .
Google ’s neural machine translation system : Bridging the gap between huarXiv preprint man and machine translation .
arXiv:1609.08144 .
Wei Xu , Chris Callison - Burch , and Courtney Napoles . 2015 .
Problems in current text simpliﬁcation research : New data can help .
Transactions of the Association for Computational Linguistics .
Wei Xu , Courtney Napoles , Ellie Pavlick , Quanze Chen , and Chris Callison - Burch . 2016 .
Optimizing statistical machine translation for text simpliﬁcation .
Transactions of the Association for Computational Linguistics .
Xuchen Yao , Benjamin Van Durme , Chris CallisonBurch , and Peter Clark .
2013 .
A lightweight and high performance monolingual word aligner .
In Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics .
Li Zhang , Huaiyu Zhu , Siddhartha Brahma , and Yunyao Li . 2020a .
Small but mighty : New benchmarks for split and rephrase .
Tianyi Zhang , Varsha Kishore , Felix Wu , Kilian Q. Weinberger , and Yoav Artzi .
2020b .
Bertscore :
In InternaEvaluating text generation with bert . tional Conference on Learning Representations .
Xingxing Zhang and Mirella Lapata .
2017 .
Sentence simpliﬁcation with deep reinforcement learning .
In Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing .
Sanqiang Zhao , Rui Meng , Daqing He , Andi Saptono , and Bambang Parmanto .
2018 .
Integrating transformer and paraphrase rules for sentence simpliﬁcation .
In Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing .
Yang Zhong , Chao Jiang , Wei Xu , and Junyi Jessy Li .
2020 .
Discourse level factors for sentence deletion In Proceedings of the 2020 in text simpliﬁcation .
Conference on Association for the Advancement of Artiﬁcial Intelligence .
3547  Zhemin Zhu , Delphine Bernhard , and Iryna Gurevych .
2010 .
A monolingual tree - based translation model In Proceedings of the for sentence simpliﬁcation .
23rd
International Conference on Computational Linguistics .
3548  A Implementation and Training Details
We implemented two separate Transformer models for neural deletion and split component ( § 2.1 ) and paraphrase generation ( § 2.3 ) using the Fairseq12 toolkit .
Both the encoder and decoder follow 13 architecture , while the encoder is also BERTbase initialized with BERTbase checkpoint .
For neural deletion and split component , we used a beam search of width 10 to generate candidates .
The copy attention mechanism is a feedforward network containing 3 hidden layers , 1000 nodes in each layer with tanh activation , and a single linear output node with sigmoid activation .
We used Adam optimizer ( Kingma and Ba , 2014 ) with a learning rate of 0.0001 , linear learning rate warmup of 40k steps , and 100k training steps .
We used a batch size of 64 .
We used BERT WordPiece tokenizer .
During inference , we constrained the beam - search to not repeat trigrams and emitted sentences that avoided aggressive deletion (
compression ratio ∈
[ 0.9 , 1.2 ] .
We chose the best checkpoint based on the SARI score ( Xu et al , 2016 ) on the dev set .
We saved a checkpoint after every epoch .
We did not perform any hyperparameter search and directly used the hyperparameters of the BERT - initialized Transformer described in ? .
The model takes 10 hours to train on 1 NVIDIA GeForce GPU .
Our pairwise ranking model , implemented using the PyTorch framework , consists of 3 hidden layers , 100 nodes in each layer , tanh activation , and a single linear output node .
We used Adam optimizer with a learning rate of 0.01 and 10 epochs .
We applied a dropout of 0.2 .
For Gaussian binning , we vectorized the numerical features into 10 dimensional vectors .
The model takes half hour to train on 1 NVIDIA GeForce GPU .
We do not perform any extensive hyperparameter tuning .
We just examined few values for learning rate ( 0.001 , 0.01 and 0.1 ) and chose the best based on the SARI score on the dev set .
We used the original code for DisSim.14
12https://github.com/pytorch/fairseq 13https://github.com/google-research/
bert
14https://github.com/Lambda-3/
DiscourseSimplification
3549  B Annotation Interface
Figure 2 : Annotation guidelines for our NEWSELA - TURK corpus along with example questions .
3550  C System Outputs
Complex Simple Hybrid - NG LSTM Transformerbert EditNTS Our Model ( cp = 0.6 )
Our Model ( cp = 0.7 , 0.8 ) Complex Simple Hybrid - NG LSTM Transformerbert EditNTS
Our Model ( cp = 0.6 ) Our Model ( cp = 0.7 ) Our Model ( cp = 0.8 )
System Outputs This year , the FAA has approved dozens of permits for agricultural drone businesses .
This year , it approved dozens of permits for agricultural drone businesses .
this year , the government has approved dozens of drone permits for agricultural businesses .
this year , the faa has approved dozens of permits for agricultural drone businesses .
this year , the faa has approved dozens of permits for agricultural businesses .
this year , the government has approved dozens of permits for drone businesses for no permission .
this year , the faa has allowed many businesses to use drones .
this year , the faa has approved dozens of permits for drones .
The room echoed with the sounds of song , the beat of drums , the voices of young men .
As she spoke , the building echoed with music and the beat of drums .
echoed the room .
the room echoed with the sounds of song , the voices of young men .
the room echoed with the sound of song , the beat of drums , the voices of young men .
the room echoed with the sounds of song , the beat of drums , the voices of young men who are hungry and legs .
the sound of the room was full of sounds of young men and the voices of cellos .
the sound of the room sounded like a lot of music , and the voices of young men .
the sound of the room sounded like a song , the beat of drums , and the voices of young men .
Table 10 : Examples of system outputs by our paraphrase generation model and other baselines .
Our model generates paraphrase - focused simpliﬁcations by skipping the splitting and deletion steps and running only the neural paraphrase generation component .
( red marks the errors ; blue marks good paraphrases ) .
cp is a soft constraint that denotes the extent of paraphrasing in terms of number of words that can be copied from the input .
D Additional Evaluation on Newsela
Models Complex ( input ) Simple ( reference ) Hybrid - NG Transformerbert EditNTS Our Model Our Model ( no split ; cp = 0.6 ) Our Model ( no split ; cp = 0.7 )
Our Model ( no split ; cp = 0.8 )
0.0
0.0
61.7
SARI add keep del FK SLen OLen CR % split 20.6 9.2 16.9 94.6 93.6 91.4 98.8
8.7 17.9 52.7 50.1 7.8 16.1 35.0 52.9 49.6 7.0 13.5 35.3 56.4 54.5 7.6 14.2 37.7 51.3 58.0 6.7 13.6 37.9 53.8 57.3 7.9 16.1 38.3 39.1 58.5 55.2 8.3 16.2 60.3 50.4 8.5 16.4 38.0
17.0 17.9 17.0 15.2 15.5 15.3 16.7 16.8 16.9
1.0 1.06 1.0 0.91 0.93 0.92 1.0 1.0 1.0
0.0 0.0 5.6 10.4 8.7 9.7 0.0 0.0 0.0
2.3 3.4 2.0 4.4 3.9 3.7 3.3
s - BL % new % eq 100.0 0.0 100.0 0.0 29.7 48.0 9.1 9.3 61.7 15.7 14.4 60.2 3.5 7.1 69.0 0.9 49.2 19.2 20.8 3.6 53.4 11.0 12.4 67.6 20.3 8.2 76.5
Table 11 : Automatic evaluation results on a subset of Newsela test set that focuses on paraphrasing ( 8371 complexsimple sentence with compression ratio > 0.9 and no splits ) .
We control the extent of paraphrasing of our models by specifying the percentage of words to be copied ( cp ) from the input as a soft constraint .
3551  E Human Evaluation Interface
Figure 3 : Guidelines provided to the Amazon Mechanical Turk workers for evaluating simpliﬁed sentences .
Our interface is based on the one proposed by Kriz et al ( 2019 ) .
Figure 4 : Guidelines provided to the Amazon Mechanical Turk workers for evaluating simpliﬁed sentences specifically for sentence splitting .
3552  F Evaluation on Wikipedia
Models Complex ( input ) Simple ( reference ) Hybrid - NG LSTM Transformerbert EditNTS Our Model Our Model ( no split ; cp = 0.6 )
Our Model ( no split ; cp = 0.7 ) Our Model ( no split ; cp = 0.8 )
0.0
77.8
SARI add keep del FK SLen OLen CR % split 25.9 0.0 13.4 22.4 42.0 20.6 59.9 45.5 10.9 19.1 42.7 33.5 9.0 25.4 13.3 59.8 36.0 10.0 17.8 32.6 61.8 39.2 10.4 16.7 35.1 67.4 38.5 11.7 20.9 36.1 14.7 63.6 39.6 9.2 35.9 63.2 41.4 10.8 18.6 36.5 37.5 68.8 39.4 11.2 19.1 72.0 35.3 11.7 19.8 37.0
0.0 1.1 0.8 0.8 10.9 6.4 33.7 6.7 8.9 8.4
1.0 0.88 0.6 0.84 0.85 1.02 0.9 0.89 0.94 0.97
22.6 19.3 13.4 17.8 18.8 22.4 19.8 19.9 20.9 21.7
0.1 2.1 4.3 2.5 4.7 4.9 4.3 3.8
s - BL % new % eq 100.0 0.0
100.0 7.8 15.3 55.2 3.1 1.4 38.2 15.0 10.7 60.0 11.1 11.1 62.1 13.5 0.0 63.5 9.2 12.9 63.2 3.9 12.4 61.9 12.3 8.6 72.6 24.5 6.6 80.4
Table 12 : Automatic evaluation results on TURK dataset ( Xu et al , 2015 ) that focuses on lexical paraphrasing .
Models Complex ( input ) Simple ( reference ) Hybrid - NG LSTM Transformerbert EditNTS Our Model
0.0
SARI add keep del FK SLen OLen CR % split 0.0 13.4 22.4 20.5 61.5 14.8 46.3 20.0 51.0 67.9 9.1 37.0 52.2 9.0 29.8 13.3 51.8 54.2 10.0 17.8 36.1 53.5 57.7 10.4 16.7 38.7 56.0 54.9 11.7 20.9 37.8 14.7 55.1 58.8 9.2 39.7
1.0 0.87 0.6 0.84 0.85 1.02 0.9
22.6 18.9 13.4 17.8 18.8 22.4 19.8
0.8 24.2 0.8 0.8 10.9 6.4 33.7
0.1 2.4 5.0 2.7 5.3
s - BL % new % eq 100.0 0.0 100.0 0.6 20.5 46.2 38.2 3.1 1.4 14.8 10.8 59.9 11.1 11.2 62.1 0.0 13.4 63.6 14.0 8.9 63.1
Table 13 : Automatic evaluation results on ASSET ( Alva - Manchego et al , 2020 ) dataset that contains all the three simpliﬁcation operations .
We use the complex - simple sentence pairs from WIKI - AUTO ( Jiang et al , 2020 ) , which contains 138,095 article pairs and 604k non - identical aligned and partially - aligned sentence pairs .
To capture sentence splitting , we join the sentences in the simple article mapped to the same sentence in the complex article .
Similar to Newsela , we remove the sentence pairs with high ( > 0.9 ) and low ( < 0.1 ) BLEU ( Papineni et al , 2002 ) scores .
For validation and testing purposes , we use the following
two corpora : ( i ) TURK corpus ( Xu et al , 2015 ) for lexical paraphrasing and ( ii ) ASSET corpus ( AlvaManchego et al , 2020 ) for multiple rewrite operations .
While the former corpus has 8 humanwritten references for 2000 validation and 359 test sentences , the latter corpus provides 10 references for the same sentences .
We remove the validation and test sentences from the training corpus .
Tables 12 and 13 show the results on TURK and ASSET respectively .
3553
