{"authors": "Yixin Liu; Pengfei Liu; Dragomir Radev; Graham Neubig", "pub_date": "", "title": "BRIO: Bringing Order to Abstractive Summarization", "abstract": "Abstractive summarization models are commonly trained using maximum likelihood estimation, which assumes a deterministic (onepoint) target distribution in which an ideal model will assign all the probability mass to the reference summary. This assumption may lead to performance degradation during inference, where the model needs to compare several system-generated (candidate) summaries that have deviated from the reference summary. To address this problem, we propose a novel training paradigm which assumes a non-deterministic distribution so that different candidate summaries are assigned probability mass according to their quality. Our method achieves a new state-of-the-art result on the CNN/DailyMail (47.78 ROUGE-1) and XSum (49.07 ROUGE-1) datasets. Further analysis also shows that our model can estimate probabilities of candidate summaries that are more correlated with their level of quality. 1", "sections": [{"heading": "Introduction", "text": "Neural methods for abstractive summarization (Rush et al., 2015;Nallapati et al., 2016;Lewis et al., 2020; formulate summarization as a sequenceto-sequence (Seq2Seq) problem (Sutskever et al., 2014), learning to generate the summary in an autoregressive manner. Such models are commonly trained with maximum likelihood estimation (MLE), maximizing predictive probability of the reference output given the gold sub-sequence before it. However, during inference the model must also generate the output based on possibly erroneous previous steps. This can hurt model performance, a phenomenon often called exposure bias (Bengio et al., 2015;Ranzato et al., 2016). To maintain reasonable performance even in the case of a sub-sequence with errors, we argue that the  The candidate summaries are generated by a pre-trained model (BART), and we select the best and the worst candidates (w.r.t. ROUGE scores) for each of the samples. High and Low represent the average performance of the best and worst candidates respectively. R-1/2/L are the ROUGE-1/2/L scores. The original BART only achieves 54.80% accuracy.\nmodel must accurately estimate relative quality of different generated outputs, since effective inference requires comparison among these candidates.\nTo understand whether existing models can accurately perform such relative comparisons, we conducted a preliminary study on pre-trained BART (Lewis et al., 2020), first generating two candidate summaries from the model and observing whether a higher probability is assigned to the candidate with a higher ROUGE (Lin, 2004) score. As Tab. 1 shows, the accuracy is far from ideal. This is likely due to the fact that MLE training only encourages the model to assign high probability to the reference summary, and is agnostic about any relative comparison between non-reference summaries. However, we argue that it is also important for the order of model scores to be coordinated with the actual quality metrics by which the summaries will be evaluated -higher model scores should indicate better quality summaries. In the following we will refer to models that have such scores as \"coordinated\" for conciseness.\nWe introduce a training paradigm which requires the abstractive model to be able to be accurate with respect to predicting the tokens in the reference summaries and coordinated with respect to Figure 1: Comparison of MLE loss (LMLE) and the contrastive loss (LCtr) in our method. MLE assumes a deterministic (one-point) distribution, in which the reference summary receives all the probability mass. Our method assumes a nondeterministic distribution in which system-generated summaries also receive probability mass according to their quality. The contrastive loss encourages the order of model-predicted probabilities of candidate summaries to be coordinated with the actual quality metric M by which the summaries will be evaluated. We assign the abstractive model a dual role -a single model could be used both as a generation model and a reference-free evaluation model.\nthe candidate summaries. In other words, we give the abstractive model a dual role: as a generation model, it generates the output summaries in an autoregressive way; as an evaluation model, it can be used to score the quality of candidate summaries by estimating a probability distribution over candidate outputs. The generation model is trained using the standard MLE loss, but to train the evaluation model we introduce a contrastive loss (Hadsell et al., 2006) defined over different candidate summaries generated by pre-trained abstractive models (Fig. 1), following previous work on ranking-based or contrastive learning (Hopkins and May, 2011;Zhong et al., 2020;Liu et al., 2021b). Our main contribution is to change the target distribution of abstractive models from a one-point deterministic distribution assumed by MLE training to a non-deterministic distribution in which candidate summaries are also assigned probability mass according to their quality. The new SOTA performance on CNN/DailyMail (Hermann et al., 2015) and XSum (Narayan et al., 2018) datasets demonstrated the effectiveness of our method. Our in-depth analysis also found that the abstractive models trained using our method can estimate the candidate summary quality more accurately, in concert with the the objective of our training paradigm.", "n_publication_ref": 14, "n_figure_ref": 2}, {"heading": "Neural Abstractive Summarization", "text": "The goal of abstractive summarization is to create a function g that takes a source document D and generates an appropriate summary S S \u2190 g(D)\n(1)\nTraining Objective Neural abstractive summarization models aim to learn a neural model g that results in good summaries. Maximum likelihood estimation (MLE) is the standard training algorithm. It aims to maximize the likelihood of the reference summary S * , i.e.,\n\u03b8 * = argmax \u03b8 i log p g \u03b8 (S * (i) |D (i) ; \u03b8) (2)\nwhere \u03b8 denotes the parameters of g and p g \u03b8 denotes the probability distribution entailed by these parameters. The summation is over the training set and {D (i) , S * (i) } is the i-th training sample.\nFor a specific sample {D (i) , S * (i) }, Eq. 2 is equivalent to minimizing the sum of negative loglikelihoods of the tokens\n{s * 1 , \u2022 \u2022 \u2022 , s * j , \u2022 \u2022 \u2022 , s * l }\nin the reference summary S * whose length is l, which is the cross-entropy loss:\nLxent = \u2212 l j=1 s ptrue(s|D, S * <j ) log pg \u03b8 (s|D, S * <j ; \u03b8)(3)\nwhere S * <j denotes the partial reference sequence {s * 0 , \u2022 \u2022 \u2022 , s * j\u22121 } and s * 0 is a pre-defined start token. p true is a one-hot distribution under the standard MLE framework:\nptrue(s|D, S * <j ) = 1 s = s * j 0 s = s * j (4)\nIn practice, label smoothing (Szegedy et al., 2016) is a widely used and effective technique that modifies the target distribution in Eq. 4 to a \"soft\" label by assigning probability mass \u03b2 to other tokens:\nptrue(s|D, S * <j ) = 1 \u2212 \u03b2 s = s * j \u03b2 N \u22121 s = s * j (5)\nwhere N is the size of the dictionary. Inference and Exposure Bias During inference, the abstractive model g is used to generate the candidate summary in an autoregressive manner. It is intractable to enumerate all the possible candidate outputs, so in practice methods such as beam search are used to reduce the search space.\nOne important step in search is estimating the probability of the next word s t given the previous predicted sequence S <t :\np g \u03b8 (s t |D, S <t ; \u03b8)(6)\nComparing Eq. 6 with Eq. 3, the major difference is that during inference the model makes new predictions based on its own previous predictions S <t instead of the reference S * <t . As a result, even if the generation model g achieves very high accuracy w.r.t. Eq. 3, once S <t starts to deviate from S * , there is the risk that the performance of g will significantly degrade. This problem has been identified as the exposure bias (Bengio et al., 2015).", "n_publication_ref": 2, "n_figure_ref": 0}, {"heading": "Coordinating Abstractive Models", "text": "Eq. 6 implies that the abstractive model g should be able to assign higher estimated probability to the better candidate summary during inference. However, this intuition is not directly captured in the standard MLE objective used in training -a model obtaining zero MLE loss would assign zero probability to any candidate summary different from the reference. This is obviously improper for any task where multiple reasonable generations may exist (Khayrallah et al., 2020), and also does not say anything about the ordering of two imperfect references. We therefore advocate for making the alternative assumption that the probability of one candidate should be well-correlated with its quality as evaluated by an automatic metric M . Since it is intractable to enumerate all the possible candidate outputs, we only require our model to be able to accurately predict the ranking order of a set of the most probable candidate summaries\u015c, which are its own beam search results. In order to achieve this objective, we slightly modify the conditions of Eq. 5, maintaining the general functional form, but instead specifying the marginal probability of the non-reference candidates S to be \u03b2, and encouraging coordination of probabilities and qualities among non-reference candidates as follows:\n\uf8f1 \uf8f4 \uf8f4 \uf8f4 \uf8f2 \uf8f4 \uf8f4 \uf8f4 \uf8f3 p true \u2020 (S|D) = 1 \u2212 \u03b2 S = S * S\u2208S p true \u2020 (S|D) = \u03b2 S = S * p true \u2020 (Si|D) > p true \u2020 (Sj|D) \u2200Si, Sj \u2208\u015c, M (Si) > M (Sj)(7)\nWe next describe precisely how we encourage coordination through contrastive learning.", "n_publication_ref": 1, "n_figure_ref": 0}, {"heading": "Contrastive Learning for Coordination", "text": "The candidate quality measure M can be defined in many ways. In this work we define it as the ROUGE (Lin, 2004) score of a candidate summary S i given the reference summary S * . To coordinate a pre-trained abstractive model, we 1) use it to generate different candidate summaries with various levels of quality, 2 then 2) encourage the model to assign higher estimated probabilities to better candidates by fine-tuning the model with a contrastive loss, following the previous work (Hopkins and May, 2011;Zhong et al., 2020):\nLctr = i j>i max(0, f (Sj) \u2212 f (Si) + \u03bbij)(8)\nwhere S i and S j are two different candidate summaries and ROUGE(S i , S * ) > ROUGE(S j , S * ), \u2200i, j, i < j. \u03bb ij is the margin multiplied by the difference in rank between the candidates, i.e., \u03bb ij = (j \u2212 i) * \u03bb. f (S i ) is the length-normalized estimated log-probability 3\nf (S) = l t=1 log p g \u03b8 (s t |D, S <t ; \u03b8) |S| \u03b1 (9\n)\nwhere \u03b1 is the length penalty hyperparameter. This loss gives the abstractive model a dual purpose, first as a reference-free evaluation model, which can be used in a two-stage summarization pipeline, where it is used to score the candidates generated by a pre-trained generation model and select the final output from them. However, since the autoregressive generation depends on both the token-level prediction accuracy and sequencelevel coordination, the model fine-tuned with the contrastive loss alone can no longer be used as a generation model. Multi-task Fine-tuning Following Edunov et al. (2018), we combine the contrastive (Eq. 8) and cross-entropy (Eq. 3) losses to preserve the generation ability of the pre-trained abstractive model:\nL mul = L xent + \u03b3L ctr (10\n)\nwhere \u03b3 is the weight of the contrastive loss. We note that the contrastive and the cross-entropy loss can effectively complement each other -since the contrastive loss is defined on the sequence level, the token-level cross-entropy loss serves as a normalization to ensure that the model could assign balanced probability mass across the whole sequence.", "n_publication_ref": 4, "n_figure_ref": 0}, {"heading": "Related Work", "text": "Training Methods of Seq2Seq Models In order to align the training objective and evaluation metric, structured losses have been used for the Seq2Seq model training. Among them, marginbased losses (Herbrich et al., 1999;Taskar et al., 2004;Gimpel and Smith, 2010), which require the model to assign higher probability to the better output, are a major category. Many margin-based losses used in modern seq2seq models (Wiseman and Rush, 2016;Edunov et al., 2018) assume a deterministic (one-point) distribution: a model can achieve zero loss if it can assign a much higher probability to the (pseudo)-reference, regardless of relative comparisons of other candidate summaries. By contrast, our method has a non-deterministic assumption (Eq. 7), which focuses on the pair-wise ranking of a set of candidate summaries.\nOne main challenge of directly optimizing a Seq2Seq model with quality scores of the output is that the discrete sampling process makes the loss non-differentiable. To circumvent this problem, reinforcement learning has been used to reformulate the conditional text generation tasks (Ranzato et al., 2016;Bahdanau et al., 2016;Li et al., 2016;Paulus et al., 2018;Li et al., 2019). Compared to this school of methods, our method is based on supervised learning, and it is more stable and less sensitive to the design choices (e.g. reward shaping), which are well-known challenges of reinforcement learning methods. Minimum risk training (Shen et al., 2016;Wieting et al., 2019) and other online sampling based methods (Bengio et al., 2015;Norouzi et al., 2016;Zhang et al., 2019) belong to another school of methods used to circumvent the problem of non-differentiability. However, they also exhibit similar problems of stability as reinforcement learning. Contrastive Learning Recently, contrastive learning (Hadsell et al., 2006) has been introduced into several conditional text generation tasks, such as machine translation Pan et al., 2021), text summarization (Cao and Wang, 2021;Xu et al., 2021;Sun and Li, 2021), and other tasks (Uehara et al., 2020;Cho et al., 2021;Lee et al., 2021b). Among these application scenarios, most work deployed contrastive learning in the latent representation space, following the framework proposed in . However, in this work we adopt contrastive learning over the discrete space of the generated texts. Besides, instead of constructing the contrastive learning examples by rule-based methods (e.g. perturbing the reference output), we use the generation models to construct the examples, which makes the contrastive learning task closer to the generation task. Sun and Li ( 2021) also adopted contrastive learning on the generated texts. However, their formulation belongs to the margin-based losses. We have discussed the difference between our method and the margin-based losses in the previous paragraphs. Discriminative Reranking Discriminative reranking has been widely studied for conditional generation tasks Wan et al., 2015;Mizumoto and Matsumoto, 2016). Some recent works Lee et al., 2021a) have also explored discriminative reranking of candidates from neural natural language generation models, which adopt large pre-trained language models (e.g. BERT (Devlin et al., 2019)) as the reranker. In this work, we factorize the Seq2Seq model (e.g., BART) trained on the same dataset as the reranking model, which maximizes the parameter sharing across two stages. Besides, our approach contributes an instance of leveraging large pre-trained Seq2Seq models as a quality estimation model (Yuan et al., 2021).", "n_publication_ref": 28, "n_figure_ref": 0}, {"heading": "Experiments", "text": "", "n_publication_ref": 0, "n_figure_ref": 0}, {"heading": "Experimental Settings", "text": "Datasets We mainly use three datasets in our experiments (statistics in Appendix A). CNNDM 4 (Hermann et al., 2015) is a large scale news dataset. Following Nallapati et al. (2016), we treat the news articles as the source documents and the associated highlights as the summaries. XSum 5 (Narayan et al., 2018) is a highly abstractive dataset of articles from the British Broadcasting Corporation (BBC). NYT 6 (Sandhaus, 2008) contains articles from the New York Times and the associated summaries. We follow Kedzie et al. (2018) for data preprocessing and splitting, and use the associated archival abstracts as the summaries. Baselines We choose a variety of related models with strong performance as baselines. BART (Lewis et al., 2020) and PEGASUS  are both large pre-trained Seq2Seq LMs standard in the literature. GSum (Dou et al., 2021) is built on BART, and improves performance by using additional guidance from an extractive summarizer. SimCLS  introduces a two-stage framework where the pre-trained BART model is used to generate candidates and a pre-trained RoBERTa  model is fine-tuned as an evaluation model to score the candidate summaries and select from them. It achieves state-of-the-art performance on both CNNDM and XSum. GOLD (Pang and He, 2021) uses offline reinforcement learning to train the BART model by treating the reference summaries as the demonstrations, a different formulation that can also improve the performance of the original BART. SeqCo (Xu et al., 2021) and ConSum (Sun and Li, 2021) are two recent methods that aim to leverage contrastive learning to improve the performance of the abstractive summarization model (BART). Implementation Details In the following experiments, we use either BART or PEGASUS as a backbone. We label our proposed methods BRIO, with two variants: (1) BRIO-Ctr is fine-tuned with the contrastive loss (Eq. 8) only; (2) BRIO-Mul is fine-tuned with the multi-task loss (Eq. 10). We use BRIO-Ctr as an evaluation model that scores different candidate summaries generated by a Seq2Seq abstractive model and selects the final output from them, and BRIO-Mul as a standard Seq2Seq model that takes the source documents as input and generates the output in an autoregressive manner. Further details are in Appendix B.", "n_publication_ref": 8, "n_figure_ref": 0}, {"heading": "Results", "text": "The results are shown in Tab 2. For CNNDM and NYT we use BART as the backbone model while for XSum we use the pre-trained PEGASUS model as our base model since it achieves better performance than BART. We have the following observations:\n(1) BRIO-Ctr outperforms SimCLS, its counterpart as an evaluation model in a two-stage summarization framework. Specifically, both BRIO-Ctr and SimCLS are used to score the candidate summaries generated by a Seq2Seq abstractive model (BART). The final outputs are selected based on those scores. We attribute BRIO-Ctr's superior performance to its use of the same model architecture (BART) for both candidate generation and scoring, while SimCLS uses RoBERTa as the evaluation model. As a result, BRIO-Ctr maximizes the parameter sharing between the two stages, and preserves the power of the Seq2Seq model pre-trained on the same dataset.  (2) BRIO-Mul is able to establish the new stare-of-the-art performance on CNNDM. Notably, the previous state-of-the-art model, GSum, takes additional guidance as input and needs a separate encoder to encode the guidance information, while BRIO-Mul uses the same parameterization of BART. Compared to other methods (ConSum, SeqCo, GOLD) that aim to improve upon BART, BRIO-Mul performs much better, showing the effectiveness of our training method.\n(3) Since on XSum we use PEGASUS instead of BART as the base model, the result shows that our method is not restricted to the specific choice of the base model.", "n_publication_ref": 0, "n_figure_ref": 0}, {"heading": "Analysis", "text": "We further perform some in-depth analyses from diverse perspectives on the CNNDM dataset to gain more insights into our proposed method. Table 3: Model performance with different \u03b3 coefficients weighting the contrastive loss (Eq. 10) on CNNDM. BRIO-Ctr is trained with the contrastive loss only, which no longer preserves its generation ability. We report its performance when it is used as an evaluation model to select from candidate summaries. R-1/2/L are the ROUGE-1/2/L F1 scores.   Coefficients of the Multi-Task Loss The multitask loss (Eq. 10) used to train our model contains two parts: the cross-entropy loss and the contastive loss. As shown in Tab. 3, as the weight of the contrastive loss (\u03b3) increases, the model's performance improves. However, the cross-entropy loss is still necessary to preserve the model's ability as a generation model. We argue that this is because the token level accuracy is still important during the autoregressive generation process, where the individual tokens are predicted sequentially. In addition, we also found that the model tends to achieve the best performance (w.r.t the ROUGE scores on the development set) faster with a higher \u03b3. Specifically, it requires less than one entire epoch to achieve the best performance on CNNDM, making our approach an efficient fine-tuning method.\nCoefficient (\u03b3) R-1 R-2 R-L 0(\nGeneration-Finetuning as a Loop Since the fine-tuned model (BRIO-Mul) is still able to gen-   (Stahlberg and Byrne, 2019), and the generator may not be able to differentiate them from high-quality candidates. In Tab. 5, we compare the performance of the pre-trained BART and our model (BRIO-Mul) with different beam widths used during inference. We observe that the performance of BART goes down as the beam width increases. On the other hand, our model is able to achieve better performance with a larger number of beams, demonstrating that our training method can improve the coordination of the model by encouraging the model to assign estimated probabilities to candidate summaries wellcorrelated with their quality. Training with Different Evaluation Metrics In the previous experiments, we used ROUGE as the evaluation metric to define the target ordering of the candidate summaries (Eq.7). To evaluate our method's performance beyond ROUGE,  we use a model-based semantic similarity metric, BERTScore (Zhang* et al., 2020), 7 as the evaluation metric M in Eq.7 to compare the performance of different candidate summaries. Then, we trained another version of BRIO-Mul based on the order of candidate summaries calculated by BERTScore.\nBeams BART BRIO-Mul R-1 R-2 R-1 R-\nThe results in Tab. 6 show that (1) Our model can significantly improve the model performance when either ROUGE or BERTScore is used as the target evaluation metric for ordering candidate summaries. This suggests that it is possible to use our method to optimize any specific target metric, making our method an alternative to reinforcement learning or minimum risk training. (2) Our model that is trained on one evaluation metric (e.g. BERTScore) also achieves improvement on another metric (e.g. ROUGE) compared with the baseline model, which indicates that the improvement made by our model is not from exploiting the potential weaknesses of individual metrics. Besides, this result also demonstrates a non-trivial degree of agreement between ROUGE and BERTScore. Novel n-grams We compare the ratio of novel n-grams in reference, BRIO-Mul's, and BART's summaries. As Tab. 7 shows, our model is more \"abstractive\" compared to BART, although reference summaries still contain more novel n-grams. This is likely due to the fact that our model is optimized at the sequence-level, allowing more freedom for paraphrasing and compression.\nWe further investigate the relation of the \"abstractiveness\" and model performance by com-7 https://github.com/Tiiiger/bert_score. We use its default version for English texts.  paring our model (BRIO-Mul) with the baseline model (BART) on different buckets of test examples grouped by the \"novelty\" of the reference summaries, 8 i.e.,\nNovelty(D, S * ) = g\u2208G S * 1(g / \u2208 GD) |GS * |(11)\nwhere D and S * are the source document and reference summary respectively, G D and G S * are the sets of bigrams in D and S * , 1 is the indicator function. The results in Fig. 3 show that when novelty is higher, (1) all models' performance decreases;\n(2) our model achieves larger improvement over the baseline model. Rank Correlation We computed the rank correlation between the estimated probabilities of the candidate summaries calculated by the generators and the quality scores of the candidate summaries. We use Eq. 9 to calculate the estimated probabilities 9 and we use ROUGE-1 as the quality score metric of the candidate summaries. We calculate  Spearman's rank correlation for each sample, and use the average score as the overall correlation, We investigated two specific settings: 1) ranking candidate summaries generated by a different model (PEGASUS); 2) ranking candidate summaries generated by themselves (BART & BRIO-Mul). We use 16 candidates in total for calculation. As Tab. 8 shows, our model achieves better rank correlation on the candidate summaries generated by both itself and the independent model. This suggests that our model can better estimate the quality of candidate summaries.", "n_publication_ref": 2, "n_figure_ref": 1}, {"heading": "Token-level Calibration", "text": "Calibration requires that a model's confidence on its predictions is equal to the accuracy of these predictions (Guo et al., 2017). Previous work (M\u00fcller et al., 2019;Kumar and Sarawagi, 2019; has found that a more calibrated text generation model tends to have better performance, and techniques like label smoothing can improve both the token-level calibration and sequence-level accuracy (i.e. the ability of generating better results). One intuitive explanation of this phenomenon is to interpret the model's estimated probability of a generated summary as the product of the model's confidences on a series of tokenlevel predictions. Then, since a more calibrated model's confidence estimates better the accuracy of its predictions, the model's estimated probability of one sequence should be more indicative of the quality of this sequence, which is essential for the beam search during inference. However, the relation of token-level calibration and sequencelevel performance remains inconclusive (M\u00fcller et al., 2019). 10 For example, a generator that always predicts a uniform distribution over all tokens would be perfectly calibrated, however, such a model would not generate high-quality outputs.\nWe investigate this relation from the opposite direction by evaluating whether our model (BRIO-Mul), which is trained to have better sequencelevel performance, would also be more calibrated at the token-level compared with the baseline models that are trained using MLE and label smoothing. We follow previous work by using the Expected Calibration Error (Naeini et al., 2015) (ECE) as the evaluation metric of calibration:\nECE = M m=1 |B m | n |acc(B m ) \u2212 conf(B m )| (12)\nwhere the samples are grouped into M equal-width buckets by confidence (conf), B m denotes the m-th bucket, and n is the total number of samples. Following , we evaluate model calibration on the system-generated summaries during inference and use the tercom toolkit 11 to assign labels (correct/incorrect) to the system-generated summaries based on the reference summaries.\nThe results in Tab. 9 show that BRIO-Mul is better calibrated compared to BART, suggesting that our method helps to improve the token-level calibration by explicitly encouraging the model to have more accurate sequence-level probability estimations. The reliability graph is shown in Fig. 4. We found that (1) abstractive models are generally over-confident on their own predictions, (2) models are generally more calibrated on XSum than CNNDM. This is likely due to the fact that XSum has shorter summaries therefore it is less likely to be affected by the exposure bias.", "n_publication_ref": 6, "n_figure_ref": 1}, {"heading": "Few-shot Fine-tuning", "text": "The training paradigm proposed in this paper may be extended to any Seq2Seq model. However, it can be a non-trivial overhead to generate the candidate summaries using large neural models on the entire training set. On the other hand, recent work (Raffel et al., 2020;Schick and Sch\u00fctze, System Summary Reference chelsea forward tammy abraham nets first-half double for chelsea. dominic solanke adds a third late on as chelsea look set to win trophy. manchester city struggle without injured star thierry ambrose. read: mourinho warns his young chelsea players he can not play them all. click here to read our match report from man city 's academy stadium.\nBART tammy abraham scored twice in the first half to give chelsea the lead. isaac buckley-ricketts levelled the game for manchester city. dominic solanke scored late on to put a gloss on the scoreline. click here to read sportsmail's player ratings from the youth cup final.\nBRIO-Mul chelsea beat manchester city 3-1 in the youth cup final at the etihad stadium. tammy abraham scored twice in the first half to give chelsea the lead. dominic solanke scored late on to seal the win for the home side.\nReference alejandro valverde won ahead of julian alaphilippe and michael albasini. chris froome finished 123rd after a crash during the final 12 kilometres. team sky's sports director gabriel rasch praised froome for finishing. rasch said froome was 'banged up' but expects to ride tour de romandie.\nBART movistar rider alejandro valverde won fleche wallonne on wednesday. team sky's chris froome fell in the final 12km but finished the race. philippe gilbert pulled out of the race after a bad crash 50km from the end. click here for more cycling news.\nBRIO-Mul alejandro valverde defended his fleche wallonne title in belgium on wednesday. movistar rider finished ahead of julian alaphilippe and michael albasini. team sky's chris froome fell in the final 12km of the race but finished in 123rd. froome was involved in a crash but finished the race despite being 'banged up'\nReference manuel pellegrini won the premier league and capital one cup last season. city currently sit fourth in the league table -12 points behind chelsea. pellegrini's contract expires at the end of the 2015-16 season. city players have been impressed with vieira's work with the youth team. pep guardiola is city's first-choice to succeed pellegrini at the etihad.\nBART manuel pellegrini's future at manchester city is under scrutiny. patrick vieira is highly-respected among the city players. city's first-choice managerial option is bayern munich boss pep guardiola. click here for all the latest manchester city news. click here for more premier league news.\nBRIO-Mul manchester city players have backed patrick vieira to replace manuel pellegrini as manager of the club. the frenchman is highly-respected among the players at the etihad stadium. pellegrini's future at the club is under scrutiny after a disappointing season. city's first-choice manager is current bayern munich boss pep guardiola.  ", "n_publication_ref": 2, "n_figure_ref": 0}, {"heading": "Case Study on CNNDM", "text": "Tab. 10 presents an interesting pattern we observed when comparing the results of BRIO-Mul and BART, which demonstrates that our method helps the abstractive model to filter out noise patterns in the original data. Specifically, some of the reference summaries (331/11490) in CNNDM contains the phrase \"click here\", pointing to a hyperlink, and 103 source documents also contain this phrase. BART picked up this pattern, and generates this phrase in 96 output summaries. On the contrary, our model learns to ignore this noise pattern and never generated it across the whole test set, likely because it identified that generated candidates with this pattern rarely achieve a high ROUGE score, and downweighted the probability accordingly.", "n_publication_ref": 0, "n_figure_ref": 0}, {"heading": "Conclusion and Future Work", "text": "In this work, we presented a new training paradigm that assigns candidate outputs probability mass according to their quality using contrastive learning. While our method has achieved significant improvement on abstractive summarization, we note several directions for the future work to explore. First, since our method makes no assumptions specifically about the summarization task, it can be extended to other conditional text generation tasks such as machine translation. Second, it is possible to apply our method in a reinforcement learning setting, where the candidate summaries are dynamically generated. Finally, in experiments we only used diverse beam search to generate the candidate summaries, but it is likely that other candidate generation methods could yield further improvements. ", "n_publication_ref": 0, "n_figure_ref": 0}, {"heading": "B Implementation Details", "text": "We use diverse beam search (Vijayakumar et al., 2018)  where warmup denotes the warmup steps, which is set to 10000, step is the number of updating steps, lr is the learning rate. We set the length penalty factor \u03b1 in the scoring function (Eq. 9) to the same value as used in the original beam search. We search the value of the margin \u03bb in the contrastive loss (Eq. 8) within the range [1 \u00d7 10 \u22125 , 1], and decide the value based on the model performance on the validation set. We also performed extensive search for the coefficient \u03b3 in Eq. 10. The specific hyper-parameter setting is reported in Tab. 13.\nWe use the standard ROUGE (Lin, 2004) Perl package 15 for evaluation. The command line parameters are '-c 95 -r 1000 -n 2 -m'. Before the 12 The checkpoint is \"facebook/bart-large-cnn\", containing around 400M parameters. 13 The checkpoint is \"google/pegasus-xsum\"\" containing around 568M parameters. 14 The checkpoint is \"facebook/bart-large\". 15 https://github.com/summanlp/evaluation/tree/master/ ROUGE-RELEASE-1.5.5\nDatasets \u03bb (Eq. 8) \u03b1 (Eq. 9) \u03b3 (Eq. 10) CNNDM 0.001 2.0 100 XSum 0.1 0.6 100 NYT 0.001 2.0 100 ", "n_publication_ref": 5, "n_figure_ref": 0}, {"heading": "Acknowledgements", "text": "We thank the anonymous reviewers for valuable feedback and helpful suggestions.", "n_publication_ref": 0, "n_figure_ref": 0}], "references": [{"title": "", "journal": "", "year": "", "authors": "Dzmitry Bahdanau; Philemon Brakel; Kelvin Xu; Anirudh Goyal; Ryan Lowe; Joelle Pineau"}, {"title": "An actorcritic algorithm for sequence prediction", "journal": "CoRR", "year": "2016", "authors": "Yoshua Courville;  Bengio"}, {"title": "Scheduled sampling for sequence prediction with recurrent neural networks", "journal": "MIT Press", "year": "2015", "authors": "Samy Bengio; Oriol Vinyals; Navdeep Jaitly; Noam Shazeer"}, {"title": "CLIFF: Contrastive learning for improving faithfulness and factuality in abstractive summarization", "journal": "Association for Computational Linguistics", "year": "2021", "authors": "Shuyang Cao; Lu Wang"}, {"title": "A simple framework for contrastive learning of visual representations", "journal": "PMLR", "year": "2020", "authors": "Ting Chen; Simon Kornblith; Mohammad Norouzi; Geoffrey Hinton"}, {"title": "On the properties of neural machine translation: Encoder-decoder approaches", "journal": "Association for Computational Linguistics", "year": "2014", "authors": "Kyunghyun Cho; Bart Van Merri\u00ebnboer; Dzmitry Bahdanau; Yoshua Bengio"}, {"title": "Contrastive multi-document question generation", "journal": "", "year": "2021", "authors": "Sang Woon; Yizhe Cho; Sudha Zhang; Asli Rao; Chenyan Celikyilmaz; Jianfeng Xiong; Mengdi Gao; Bill Wang;  Dolan"}, {"title": "Abstractive sentence summarization with attentive recurrent neural networks", "journal": "Association for Computational Linguistics", "year": "2016", "authors": "Sumit Chopra; Michael Auli; Alexander M Rush"}, {"title": "BERT: Pre-training of deep bidirectional transformers for language understanding", "journal": "Long and Short Papers", "year": "2019", "authors": "Jacob Devlin; Ming-Wei Chang; Kenton Lee; Kristina Toutanova"}, {"title": "GSum: A general framework for guided neural abstractive summarization", "journal": "Online. Association for Computational Linguistics", "year": "2021", "authors": "Zi-Yi Dou; Pengfei Liu; Hiroaki Hayashi; Zhengbao Jiang; Graham Neubig"}, {"title": "Classical structured prediction losses for sequence to sequence learning", "journal": "Association for Computational Linguistics", "year": "2018", "authors": "Sergey Edunov; Myle Ott; Michael Auli; David Grangier; Marc'aurelio Ranzato"}, {"title": "Improving zero and few-shot abstractive summarization with intermediate fine-tuning and data augmentation", "journal": "", "year": "2021", "authors": "Alexander Fabbri; Simeng Han; Haoyuan Li; Haoran Li; Marjan Ghazvininejad; Shafiq Joty; Dragomir Radev; Yashar Mehdad"}, {"title": "Softmaxmargin CRFs: Training log-linear models with cost functions", "journal": "Association for Computational Linguistics", "year": "2010", "authors": "Kevin Gimpel; Noah A Smith"}, {"title": "On calibration of modern neural networks", "journal": "PMLR", "year": "2017", "authors": "Chuan Guo; Geoff Pleiss; Yu Sun; Kilian Q Weinberger"}, {"title": "Dimensionality reduction by learning an invariant mapping", "journal": "IEEE Computer Society", "year": "2006", "authors": "Raia Hadsell; Sumit Chopra; Yann Lecun"}, {"title": "Support vector learning for ordinal regression", "journal": "", "year": "1999", "authors": "Ralf Herbrich; Thore Graepel; Klaus Obermayer"}, {"title": "Teaching machines to read and comprehend", "journal": "MIT Press", "year": "2015", "authors": "Karl Moritz Hermann; Tom\u00e1\u0161 Ko\u010disk\u00fd; Edward Grefenstette; Lasse Espeholt; Will Kay; Mustafa Suleyman; Phil Blunsom"}, {"title": "Tuning as ranking", "journal": "", "year": "2011-05", "authors": "Mark Hopkins; Jonathan "}, {"title": "Content selection in deep learning models of summarization", "journal": "Association for Computational Linguistics", "year": "2018", "authors": "Chris Kedzie; Kathleen Mckeown; Hal Daum\u00e9; Iii "}, {"title": "Simulated multiple reference training improves low-resource machine translation", "journal": "Online. Association for Computational Linguistics", "year": "2020", "authors": "Huda Khayrallah; Brian Thompson; Matt Post; Philipp Koehn"}, {"title": "Adam: A method for stochastic optimization", "journal": "", "year": "2015-05-07", "authors": "P Diederik; Jimmy Kingma;  Ba"}, {"title": "Calibration of encoder decoder models for neural machine translation", "journal": "CoRR", "year": "2019", "authors": "Aviral Kumar; Sunita Sarawagi"}, {"title": "Discriminative reranking for neural machine translation", "journal": "Long Papers", "year": "2021", "authors": "Ann Lee; Michael Auli; Marc'aurelio Ranzato"}, {"title": "Contrastive learning with adversarial perturbations for conditional text generation", "journal": "", "year": "2021", "authors": "Seanie Lee; Dong Bok Lee; Sung Ju Hwang"}, {"title": "BART: Denoising sequence-to-sequence pretraining for natural language generation, translation, and comprehension", "journal": "", "year": "2020", "authors": "Mike Lewis; Yinhan Liu; Naman Goyal ; Abdelrahman Mohamed; Omer Levy; Veselin Stoyanov; Luke Zettlemoyer"}, {"title": "Deep reinforcement learning for dialogue generation", "journal": "Association for Computational Linguistics", "year": "2016", "authors": "Jiwei Li; Will Monroe; Alan Ritter; Dan Jurafsky; Michel Galley; Jianfeng Gao"}, {"title": "Deep reinforcement learning with distributional semantic rewards for abstractive summarization", "journal": "Association for Computational Linguistics", "year": "2019", "authors": "Siyao Li; Deren Lei; Pengda Qin; William Yang Wang"}, {"title": "ROUGE: A package for automatic evaluation of summaries", "journal": "Association for Computational Linguistics", "year": "2004", "authors": "Chin-Yew Lin"}, {"title": "ExplainaBoard: An explainable leaderboard for NLP", "journal": "", "year": "2021", "authors": "Pengfei Liu; Jinlan Fu; Yang Xiao; Weizhe Yuan; Shuaichen Chang; Junqi Dai; Yixin Liu; Zihuiwen Ye; Graham Neubig"}, {"title": "Roberta: A robustly optimized BERT pretraining approach", "journal": "", "year": "1907", "authors": "Yinhan Liu; Myle Ott; Naman Goyal; Jingfei Du; Mandar Joshi; Danqi Chen; Omer Levy; Mike Lewis; Luke Zettlemoyer; Veselin Stoyanov"}, {"title": "Ref-Sum: Refactoring neural summarization", "journal": "Online. Association for Computational Linguistics", "year": "2021", "authors": "Yixin Liu; Zi-Yi Dou; Pengfei Liu"}, {"title": "SimCLS: A simple framework for contrastive learning of abstractive summarization", "journal": "Online. Association for Computational Linguistics", "year": "2021", "authors": "Yixin Liu; Pengfei Liu"}, {"title": "Discriminative reranking for grammatical error correction with statistical machine translation", "journal": "Association for Computational Linguistics", "year": "2016", "authors": "Tomoya Mizumoto; Yuji Matsumoto"}, {"title": "When does label smoothing help?", "journal": "Curran Associates, Inc", "year": "2019", "authors": "Rafael M\u00fcller; Simon Kornblith; Geoffrey E Hinton"}, {"title": "Obtaining well calibrated probabilities using bayesian binning", "journal": "AAAI Press", "year": "2015", "authors": "Gregory F Mahdi Pakdaman Naeini; Milos Cooper;  Hauskrecht"}, {"title": "Abstractive text summarization using sequence-to-sequence RNNs and beyond", "journal": "Association for Computational Linguistics", "year": "2016", "authors": "Ramesh Nallapati; Bowen Zhou; \u00c7aglar Cicero Dos Santos; Bing Gul\u00e7ehre;  Xiang"}, {"title": "Don't give me the details, just the summary! topic-aware convolutional neural networks for extreme summarization", "journal": "Association for Computational Linguistics", "year": "2018", "authors": "Shashi Narayan; Shay B Cohen; Mirella Lapata"}, {"title": "Reward augmented maximum likelihood for neural structured prediction", "journal": "Curran Associates, Inc", "year": "2016", "authors": "Mohammad Norouzi; Samy Bengio; Navdeep Zhifeng Chen; Mike Jaitly; Yonghui Schuster; Dale Wu;  Schuurmans"}, {"title": "Minimum error rate training in statistical machine translation", "journal": "Association for Computational Linguistics", "year": "2003", "authors": "Franz Josef Och"}, {"title": "A smorgasbord of features for statistical machine translation", "journal": "Association for Computational Linguistics", "year": "2004", "authors": "Franz Josef Och; Daniel Gildea; Sanjeev Khudanpur; Anoop Sarkar; Kenji Yamada; Alex Fraser; Shankar Kumar; Libin Shen; David Smith; Katherine Eng; Viren Jain; Zhen Jin; Dragomir Radev"}, {"title": "Contrastive learning for many-to-many multilingual neural machine translation", "journal": "Long Papers", "year": "2021", "authors": "Xiao Pan; Mingxuan Wang; Liwei Wu; Lei Li"}, {"title": "Text generation by learning from demonstrations", "journal": "", "year": "2021", "authors": ""}, {"title": "A deep reinforced model for abstractive summarization", "journal": "", "year": "2018", "authors": "Romain Paulus; Caiming Xiong; Richard Socher"}, {"title": "Exploring the limits of transfer learning with a unified text-totext transformer", "journal": "Journal of Machine Learning Research", "year": "2020", "authors": "Colin Raffel; Noam Shazeer; Adam Roberts; Katherine Lee; Sharan Narang; Michael Matena; Yanqi Zhou; Wei Li; Peter J Liu"}, {"title": "Sequence level training with recurrent neural networks", "journal": "", "year": "2016-05-02", "authors": "Aurelio Marc; Sumit Ranzato; Michael Chopra; Wojciech Auli;  Zaremba"}, {"title": "A neural attention model for abstractive sentence summarization", "journal": "Association for Computational Linguistics", "year": "2015", "authors": "Alexander M Rush; Sumit Chopra; Jason Weston"}, {"title": "The New York Times Annotated Corpus. LDC corpora. Linguistic Data Consortium", "journal": "", "year": "2008", "authors": "Evan Sandhaus"}, {"title": "Few-shot text generation with natural language instructions", "journal": "Association for Computational Linguistics", "year": "2021", "authors": "Timo Schick; Hinrich Sch\u00fctze"}, {"title": "Discriminative reranking for machine translation", "journal": "Association for Computational Linguistics", "year": "2004", "authors": "Libin Shen; Anoop Sarkar; Franz Josef Och"}, {"title": "Minimum risk training for neural machine translation", "journal": "Long Papers", "year": "2016", "authors": "Shiqi Shen; Yong Cheng; Zhongjun He; Wei He; Hua Wu; Maosong Sun; Yang Liu"}, {"title": "On NMT search errors and model errors: Cat got your tongue?", "journal": "", "year": "2019", "authors": "Felix Stahlberg; Bill Byrne"}, {"title": "Alleviating exposure bias via contrastive learning for abstractive text summarization", "journal": "", "year": "2021", "authors": "Shichao Sun; Wenjie Li"}, {"title": "Sequence to sequence learning with neural networks", "journal": "MIT Press", "year": "2014", "authors": "Ilya Sutskever; Oriol Vinyals; V Quoc;  Le"}, {"title": "Rethinking the inception architecture for computer vision", "journal": "IEEE Computer Society", "year": "2016", "authors": "C Szegedy; V Vanhoucke; S Ioffe; J Shlens; Z Wojna"}, {"title": "Max-margin markov networks", "journal": "MIT Press", "year": "2004", "authors": "Ben Taskar; Carlos Guestrin; Daphne Koller"}, {"title": "Learning with contrastive examples for data-to-text generation", "journal": "", "year": "2020", "authors": "Yui Uehara; Tatsuya Ishigaki; Kasumi Aoki; Hiroshi Noji; Keiichi Goshima; Ichiro Kobayashi; Hiroya Takamura; Yusuke Miyao"}, {"title": "Diverse beam search for improved description of complex scenes", "journal": "", "year": "2018", "authors": "Ashwin Vijayakumar; Michael Cogswell; Ramprasaath Selvaraju; Qing Sun; Stefan Lee; David Crandall; Dhruv Batra"}, {"title": "Multi-document summarization via discriminative summary reranking", "journal": "ArXiv", "year": "2015", "authors": "Xiaojun Wan; Ziqiang Cao; Furu Wei; Sujian Li; M Zhou"}, {"title": "On the inference calibration of neural machine translation", "journal": "Online. Association for Computational Linguistics", "year": "2020", "authors": "Shuo Wang; Zhaopeng Tu; Shuming Shi; Yang Liu"}, {"title": "Beyond BLEU:training neural machine translation with semantic similarity", "journal": "", "year": "2019", "authors": "John Wieting; Taylor Berg-Kirkpatrick; Kevin Gimpel; Graham Neubig"}, {"title": "Sequence-to-sequence learning as beam-search optimization", "journal": "Association for Computational Linguistics", "year": "2016", "authors": "Sam Wiseman; Alexander M Rush"}, {"title": "Transformers: State-of-the-art natural language processing", "journal": "", "year": "2020", "authors": "Thomas Wolf; Lysandre Debut; Victor Sanh; Julien Chaumond; Clement Delangue; Anthony Moi; Pierric Cistac; Tim Rault; Remi Louf; Morgan Funtowicz; Joe Davison; Sam Shleifer; Clara Patrick Von Platen; Yacine Ma; Julien Jernite; Canwen Plu; Teven Le Xu; Sylvain Scao; Mariama Gugger;  Drame"}, {"title": "Sequence level contrastive learning for text summarization", "journal": "", "year": "2021", "authors": "Shusheng Xu; Xingxing Zhang; Yi Wu; Furu Wei"}, {"title": "Reducing word omission errors in neural machine translation: A contrastive learning approach", "journal": "Association for Computational Linguistics", "year": "2019", "authors": "Zonghan Yang; Yong Cheng; Yang Liu; Maosong Sun"}, {"title": "BARTScore: Evaluating generated text as text generation", "journal": "", "year": "2021", "authors": "Weizhe Yuan; Graham Neubig; Pengfei Liu"}, {"title": "Pegasus: Pre-training with extracted gap-sentences for abstractive summarization", "journal": "PMLR", "year": "2020", "authors": "Jingqing Zhang; Yao Zhao; Mohammad Saleh; Peter Liu"}, {"title": "Bertscore: Evaluating text generation with bert", "journal": "", "year": "2020", "authors": "Tianyi Zhang; * ; Varsha Kishore; * ; Felix Wu; * ; Kilian Q Weinberger; Yoav Artzi"}, {"title": "Bridging the gap between training and inference for neural machine translation", "journal": "Association for Computational Linguistics", "year": "2019", "authors": "Wen Zhang; Yang Feng; Fandong Meng; Di You; Qun Liu"}, {"title": "Extractive summarization as text matching", "journal": "Association for Computational Linguistics", "year": "2020", "authors": "Ming Zhong; Pengfei Liu; Yiran Chen; Danqing Wang; Xipeng Qiu; Xuanjing Huang"}], "figures": [{"figure_label": "2", "figure_type": "", "figure_id": "fig_1", "figure_caption": "Figure 2 :2Figure 2: Loop of candidate generation and model finetuning.", "figure_data": ""}, {"figure_label": "3", "figure_type": "", "figure_id": "fig_2", "figure_caption": "Figure 3 :3Figure 3: Performance comparison (BART v.s. BRIO-Mul) w.r.t. reference summary novelty. The x-axis represents different buckets of test examples grouped by reference summary novelty (Eq. 11). Larger x-coordinates correspond to examples of which the reference summaries have higher novelty. The left figure shows the performance improvement of our model compared with the baseline model, while the right one shows model performance.", "figure_data": ""}, {"figure_label": "4", "figure_type": "", "figure_id": "fig_3", "figure_caption": "Figure 4 :4Figure 4: Reliability graphs on the CNNDM and XSum datasets. The accuracy of model's predictions is plotted against the model's confidence on these predictions.", "figure_data": ""}, {"figure_label": "1", "figure_type": "table", "figure_id": "tab_1", "figure_caption": "Accuracy of different abstractive summarization systems w.r.t ranking the quality of candidate summaries on CNNDM dataset. Acc. stands for the frequency of the model assigning higher probabilities to better candidate summaries.", "figure_data": ""}, {"figure_label": "2", "figure_type": "table", "figure_id": "tab_3", "figure_caption": "", "figure_data": ""}, {"figure_label": "4", "figure_type": "table", "figure_id": "tab_6", "figure_caption": "", "figure_data": ""}, {"figure_label": "5", "figure_type": "table", "figure_id": "tab_8", "figure_caption": "Results on CNNDM with different beam widths (the number of beams) used in beam search.", "figure_data": "The default beam"}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_9", "figure_caption": "Mul (R) 47.78 23.55 44.57 32.11 BRIO-Mul (B) 47.53 23.22 44.37 32.59", "figure_data": "SystemR-1R-2R-LBSBART44.29 21.17 41.09 27.38BRIO-"}, {"figure_label": "67", "figure_type": "table", "figure_id": "tab_10", "figure_caption": "Results on CNNDM using different evaluation metrics as M in Eq.7. BRIO-Mul (R) is trained with candidate summaries ordered by ROUGE scores, while BRIO-Mul (B) is trained with candidate summaries ordered by BERTScore. R-1/2/L are ROUGE-1/2/L F1 scores. BS denotes BERTScore. Ratio of novel n-grams of different models on CNNDM. Novel n-grams are those that appear in the summaries but not in the source documents.", "figure_data": "SystemUnigram BigramReference.1110.4865BART.0101.0924BRIO-Mul.0262.2381"}, {"figure_label": "8", "figure_type": "table", "figure_id": "tab_11", "figure_caption": "Rank Correlation between the model's estimated probabilities of the candidate summaries and the quality scores (ROUGE) of the candidate summaries on CNNDM. Own stands for the candidates generated by the models themselves, while PEGASUS stands for the candidates generated by the pretrained PEGASUS model. \u2020: significantly better than the baseline model (BART) (p < 0.01).", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_12", "figure_caption": "Conf) on the test set of CNNDM and XSum.", "figure_data": "DatasetSystemECEAccConfCNNDMBART BRIO-Mul .2719 .4271 .6652 .4097 .3711 .7365XSumPEGASUS .2369 .4688 .6990 BRIO-Mul .1423 .4744 .5881Table 9: Expected Calibration Error (ECE), accuracy (Acc)and confidence ("}, {"figure_label": "10", "figure_type": "table", "figure_id": "tab_13", "figure_caption": "Case Study on CNNDM. BRIO-Mul learns to ignore the noise pattern (\"click here\") while BART cannot.", "figure_data": "DatasetSystemR-1R-2R-LCNNDMBART BRIO-Few 45.81 21.91 42.61 44.29 21.17 41.09XSumPEGASUS 47.46 24.69 39.53 BRIO-Few 47.95 24.89 39.71"}, {"figure_label": "11", "figure_type": "table", "figure_id": "tab_14", "figure_caption": "Few-shot Fine-tuning. BRIO-Few is trained on only 100/1000 training examples on CNNDM and XSum, and fine-tune the models that are pre-trained using MLE loss on those examples. More training details can be found in Appendix C. The results are shown in Tab. 11. All experiments are repeated three times, and the reported results are the average performance. The results indicate that our model can achieve improvement over the baseline model under the few-shot learning setting with a small computational overhead.", "figure_data": "XSum respec-tively. R-1/2/L are ROUGE-1/2/L F1 scores.2021; Fabbri et al., 2021) has shown that few-shotlearning can be an effective fine-tuning method ofpre-trained models for text generation tasks.Therefore, we investigate our model's perfor-mance in a few-shot setting. Specifically, we ran-domly sample 100/1000 examples from the trainingset of CNNDM/"}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_16", "figure_caption": "to generate 16 candidates for each data sample. On CNNDM and XSum, we use the pre-trained BART12  and PEGASUS 13 models from the Transformers(Wolf et al., 2020) library as the base abstractive models for candidate summary generation and model finetuning respectively. On NYT, we first fine-tuned a BART model 14 with MLE training as the base abstractive model, since our data pre-processing is sightly different from the previous work and there are no available pre-trained checkpoints. We use 4 NVIDIA RTX 3090 GPUs for the model training, and the average running time for one epoch is around 20 hours. We use the Adam optimizer (Kingma and Ba, 2015) with learning rate scheduling for the model training: lr = 2 \u00d7 10 \u22123 min(step \u22120.5 , step \u2022 warmup \u22121.5 )", "figure_data": ""}, {"figure_label": "13", "figure_type": "table", "figure_id": "tab_17", "figure_caption": "Hyper-parameter Setting.ROUGE evaluation, the reference summaries and system outputs are lower-cased and tokenized.16    C Details of Few-shot Fine-tuning On CNNDM, we randomly select 100 examples from the training set for fine-tuning. On XSum, we found that at least 1000 examples are needed for the model to achieve better performance compared to the baseline model. All experiments are repeated three times. We randomly select 1000 examples from the original validation set for hyper-parameter selection. We use the Adam optimizer with the learning rate set to 1 \u00d7 10 \u22126 . The model is trained for 15 epochs on CNNDM and 10 epochs on XSum.", "figure_data": ""}], "doi": "10.3115/v1/W14-4012"}