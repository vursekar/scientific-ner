{"authors": "Zirui Wang; Zachary C Lipton; Yulia Tsvetkov", "pub_date": "", "title": "On Negative Interference in Multilingual Models: Findings and A Meta-Learning Treatment", "abstract": "Modern multilingual models are trained on concatenated text from multiple languages in hopes of conferring benefits to each (positive transfer), with the most pronounced benefits accruing to low-resource languages. However, recent work has shown that this approach can degrade performance on high-resource languages, a phenomenon known as negative interference. In this paper, we present the first systematic study of negative interference. We show that, contrary to previous belief, negative interference also impacts low-resource languages. While parameters are maximally shared to learn language-universal structures, we demonstrate that language-specific parameters do exist in multilingual models and they are a potential cause of negative interference. Motivated by these observations, we also present a meta-learning algorithm that obtains better cross-lingual transferability and alleviates negative interference, by adding languagespecific layers as meta-parameters and training them in a manner that explicitly improves shared layers' generalization on all languages. Overall, our results show that negative interference is more common than previously known, suggesting new directions for improving multilingual representations. 1   ", "sections": [{"heading": "Introduction", "text": "Advances in pretraining language models (Devlin et al., 2018;Yang et al., 2019) as general-purpose representations have pushed the state of the art on a variety of natural language tasks. However, not all languages enjoy large public datasets for pretraining and/or downstream tasks. Multilingual language models such as mBERT (Devlin et al., 2018) and XLM (Lample and Conneau, 2019) have been proven effective for cross-lingual transfer learning by pretraining a single shared Transformer model (Vaswani et al., 2017) jointly on multiple languages. The goals of multilingual modeling are not limited to improving language modeling in low-resource languages (Lample and Conneau, 2019), but also include zero-shot crosslingual transfer on downstream tasks-it has been shown that multilingual models can generalize to target languages even when labeled training data is only available in the source language (typically English) on a wide range of tasks (Pires et al., 2019;Wu and Dredze, 2019;Hu et al., 2020).\nHowever, multilingual models are not equally beneficial for all languages.  demonstrated that including more languages in a single model can improve performance for lowresource languages but hurt performance for highresource languages. Similarly, recent work (Johnson et al., 2017;Tan et al., 2019;Aharoni et al., 2019; in multilingual neural machine translation (NMT) also observed performance degradation on high-resource language pairs. In multi-task learning (Ruder, 2017), this phenomenon is known as negative interference or negative transfer (Wang et al., 2019), where training multiple tasks jointly hinders the performance on individual tasks.\nDespite these empirical observations, little prior work analyzed or showed how to mitigate negative interference in multilingual language models. Particularly, it is natural to ask: (1) Can negative interference occur for low-resource languages also?\n(2) What factors play an important role in causing it? (3) Can we mitigate negative interference to improve the model's cross-lingual transferability?\nIn this paper, we take a step towards addressing these questions. We pretrain a set of monolingual and bilingual models and evaluate them on a range of downstream tasks to analyze negative interference. We seek to individually characterize the un-derlying factors of negative interference through a set of ablation studies and glean insights on its causes. Specifically, we examine if training corpus size and language similarity affect negative interference, and also measure gradient and parameter similarities between languages.\nOur results show that negative interference can occur in both high-resource and low-resource languages. In particular, we observe that neither subsampling the training corpus nor adding typologically similar languages substantially impacts negative interference. On the other hand, we show that gradient conflicts and language-specific parameters do exist in multilingual models, suggesting that languages are fighting for model capacity, which potentially causes negative interference. We further test whether explicitly assigning language-specific modules to each language can alleviate negative interference, and find that the resulting model performs better within each individual language but worse on zero-shot cross-lingual tasks.\nMotivated by these observations, we further propose to meta-learn these language-specific parameters to explicitly improve generalization of shared parameters on all languages. Empirically, our method improves not only within-language performance on monolingual tasks but also cross-lingual transferability on zero-shot transfer benchmarks. To the best of our knowledge, this is the first work to systematically study and remedy negative interference in multilingual language models.", "n_publication_ref": 14, "n_figure_ref": 0}, {"heading": "Motivation", "text": "Multilingual transfer learning aims at utilizing knowledge transfer across languages to boost performance on low-resource languages. State-of-theart multilingual language models are trained on multiple languages jointly to enable cross-lingual transfer through parameter sharing. However, languages are heterogeneous, with different vocabularies, morphosyntactic rules, and different pragmatics across cultures. It is therefore natural to ask, is knowledge transfer beneficial for all languages in a multilingual model? To analyze the effect of knowledge transfer from other languages on a specific language lg, we can compare multilingual models with the monolingual model trained on lg. For example, in Figure 1, we compare the performance on a named entity recognition (NER) task of monolingually-trained models vs. bilingual models (trained on lg and English) vs. state-of- the-art XLM . We can see that monolingual models outperform multilingual models on four out of six languages (See \u00a73.3 for details). This shows that language conflicts may induce negative impacts on certain languages, which we refer to as negative interference. Here, we investigate the causes of negative interference ( \u00a73.3) and methods to overcome it ( \u00a74).\n3 Investigating the Sources of Negative Interference in Multilingual Models", "n_publication_ref": 0, "n_figure_ref": 1}, {"heading": "Methodology", "text": "To study negative interference, we compare multilingual models with monolingual baselines. Without loss of generality, we focus on analyzing bilingual models to minimize confounding factors. For two languages lg 1 and lg 2 , we pretrain a single bilingual model and two monolingual models. We then assess their performance on downstream tasks using two different settings. To examine negative interference, we evaluate both monolingual and multilingual models using the withinlanguage monolingual setting, such that the pretrained model is finetuned and tested on the same language. For instance, if the monolingual model of lg 1 outperforms the bilingual model on lg 1 , we know that lg 2 induces negative impact on lg 1 in the bilingual model. Besides, since multilingual models are trained to enable cross-lingual transfer, we also report their performance on the zero-shot cross-lingual transfer setting, where the model is only finetuned on the source language, say lg 1 , and tested on the target language lg 2 . We hypothesize that the following factors play important roles in causing negative interference and study each individually:  guages , we hypothesize that it can also occur for languages with less resources. We study the impact of training data size per language on negative interference. We subsample a high-resource language, say lg 1 , to create a \"low-resource version\". We then retrain the monolingual and bilingual models and compare with results of their high-source counterparts. Particularly, we test if reducing lg 1 's training size also reduces negative interference on lg 2 . Language Similarity Language similarity has been shown important for effective transfer in multilingual models.  shows that bilingual models trained on more similar language pairs result in better zero-shot transfer performance. We thus expect it to play a critical role in negative interference as well. For a specific language lg 1 , we pair it with languages that are closely and distantly related. We then compare these bilingual models' performance on lg 1 to investigate if more similar languages cause less severe interference. In addition, we further add a third language lg 3 that is similar to lg 1 and train a trilingual model on lg 1 -lg 2 -lg 3 . We compare the trilingual model with the bilingual model to examine if adding lg 3 can mitigate negative interference on lg 1 .", "n_publication_ref": 0, "n_figure_ref": 0}, {"heading": "Gradient Conflict", "text": "Recent work (Yu et al., 2020) shows that gradient conflict between dissimilar tasks, defined as a negative cosine similarity between gradients, is predictive of negative interference in multi-task learning. Therefore, we study whether gradient conflicts exist between languages in multilingual models. In particular, we sample one batch for each language in the model and compute the corresponding gradients' cosine similarity for every 10 steps during pretraining.", "n_publication_ref": 1, "n_figure_ref": 0}, {"heading": "Parameter Sharing", "text": "State-of-the-art multilingual models aim to share as many parameters as possible in the hope of learning a languageuniversal model for all languages . While prior studies measure the latent embedding similarity between languages, we instead examine model parameters directly. The idea is to test whether model parameters are language-universal or language-specific. To achieve this, we prune multilingual models for each language using relaxed L 0 norm regularization (Louizos et al., 2017), and compare parameter similarities between languages. Formally, for a model f (\u2022; \u03b8) parameterized by \u03b8 = {\u03b8 i } n i=1 where each \u03b8 i represents an individual parameter or a group of parameters, the method introduces a set of binary masks z, drawn from some distribution q(z|\u03c0) parametrized by \u03c0, and learns a sparse model f (\u2022; \u03b8 z) by optimizing:\nmin \u03c0 E q(z|\u03c0) 1 N N i=1 L(f (x i ;\u03b8), y i ) + \u03bb \u03b8 0 s.t.\u03b8 = \u03b8 z,\n(1) where is the Hadamard (elementwise) product, L(\u2022) is some task loss and \u03bb is a hyper-parameter. We follow the work of (Louizos et al., 2017) and use the Hard Concrete distribution for the binary mask z, such that the above objective is fully differentiable. Then, for each bilingual model, we freeze its pretrained parameter weights and learn binary masks z for each language independently. As a result, we obtain two independent sets of mask parameters \u03c0 which can be used to determine parameter importance. Intuitively, for each parameter group, it is language-universal if both languages consider it important (positive \u03c0 values). On the other hand, if one language assigns positive value while the other assigns negative, it shows that the parameter group is language-specific. We compare them across languages and layers to analyze parameter similarity in multilingual models.", "n_publication_ref": 2, "n_figure_ref": 0}, {"heading": "Experimental Setup", "text": "We focus on standard multilingual masked language modeling (MLM) used in mBERT and XLM. We first pretrain models and then evaluate their performance on four NLP benchmarks.\nFor pretraining, we mainly follow the setup and implementation of XLM (Lample and Conneau, 2019). We focus on monolingual and bilingual models for a more controllable comparison, which we refer to as Mono and JointPair respectively. In particular, we always include English (En) in bilingual models to compare on zero-shot transfer settings with prior work. Besides, we consider three  adpt 86.8 86.7 84.3 88.6 86.1 76.0 84.8 89.3 76.4 93.5 95.2 88.2 88  high-resource languages {Arabic (Ar), French (Fr), Russian (Ru)} and three low-resource languages {Hindi (Hi), Swahili (Sw), Telugu (Te)} (see Table 1 for their statistics). We choose these six languages based their data availability in downstream tasks.\nWe use Wikipedia as training data with statistics shown in Table 1. For each model, we use BPE (Sennrich et al., 2016) to learn 32k subword vocabulary shared between languages. For multilingual models, we sample language proportionally to P i = (\nL i j L j ) 1 T\n, where L i is the size of the training corpus for i-th language pair and T is the temperature. Each model is a standard Transformer (Vaswani et al., 2017) with 8 layers, 12 heads, 512 embedding size and 2048 hidden dimension for the feedforward layer. Notice that we specifically consider a smaller model capacity to be comparable with existing models with larger capacity but also include much more (over 100) languages. We use the Adam optimizer (Kingma and Ba, 2014) and exploit the same learning rate schedule as Lample and Conneau (2019). We train each model with 4 NVIDIA V100 GPUs with 32GB of memory. Using mixed precision, we fit a batch of 128 for each GPU and the total batch size is 512. Each epoch contains 10k steps and we train for 50 epochs.\nFor evaluation, we consider four downstream tasks: named entity recognition (NER), part-ofspeech tagging (POS), question answering (QA), and natural language inference (NLI). (See Appendix A for finetuning details.)", "n_publication_ref": 4, "n_figure_ref": 0}, {"heading": "NER", "text": "We use the WikiAnn (Pan et al., 2017) dataset, which is a sequence labelling task built automatically from Wikipedia. A linear layer with softmax classifier is added on top of pretrained models to predict the label for each word based on its first subword. We report the F1 score.", "n_publication_ref": 1, "n_figure_ref": 0}, {"heading": "POS", "text": "Similar to NER, POS is also a sequence labelling task but with a focus on synthetic knowledge. In particular, we use the Universal Dependencies treebanks (Nivre et al., 2018). Task-specific layers are the same and we report F1, as in NER.", "n_publication_ref": 1, "n_figure_ref": 0}, {"heading": "QA", "text": "We choose to use the TyDiQA-GoldP dataset (Clark et al., 2020) that covers typologically diverse languages. Similar to popular QA dataset such as SQuAD (Rajpurkar et al., 2018), this is a span prediction task where task-specific linear classifiers are used to predict start/end positions of the answer. Standard metrics of F1 and Exact Match (EM) are reported. NLI XNLI (Conneau et al., 2018) is probably the most popular cross-lingual benchmark. Notice that the original dataset only contains training data for English. Consequently, we only evaluate this task on the zero-shot transfer setting while we consider both settings for the rest of other tasks.", "n_publication_ref": 2, "n_figure_ref": 0}, {"heading": "Results and Analysis", "text": "In Table 2 and 3  gual models outperform bilingual models for all languages except Swahili on all three tasks. In fact, monolingual models even perform better than XLM on four out of six languages including hi and te, despite that XLM is much larger in model sizes and trained with much more resources. This shows that negative interference can occur on low-resource languages as well. While the negative impact is expected to be more prominent on high-resource languages, we demonstrate that it may occur for languages with resources fewer than commonly believed. The existence of negative interference confirms that state-of-the-art multilingual models cannot generalize equally well on all languages, and there is still a gap compared to monolingual models on certain languages. We next turn to dissect negative interference by studying the four factors described in Section 3.1.\nTraining Corpus Size By comparing the validation perplexity on Swahili and Telugu in Figure 2, we find that while both monolingual models outperform bilingual models in the first few epochs, the Swahili model's perplexity starts to increase and is eventually surpassed by the bilingual model in later epochs. This matches the intuition that monolingual models may overfit when training data size is small. To verify this, we subsample French and Russian to 100k sentences to create a \"low-resource version\" of them (denoted as fr l /ru l ). As shown in   lingual models for fr l /ru l , in contrast for fr/ru. This suggests that multilingual models can stimulate positive transfer for low-resource languages when monolingual models overfit. On the other hand, when we compare bilingual models on English, models trained using different sizes of fr/ru data obtain similar performance, indicating that the training size of the source language has little impact on negative interference on the target language (English in this case). While more training data usually implies larger vocabulary and more diverse linguistic phenomena, negative interference seems to arise from more fundamental conflicts contained in even small training corpus.\nLanguage Similarity As illustrated by Table 5, the in-language performance on English drops as the paired language becomes more distantly related (French vs Russian). This verifies that transferring from more distant languages results in more severe negative interference.\nIt is therefore natural to ask if adding more similar languages can mitigate negative interference, especially for low-resource languages. We then train two trilingual models, adding Marathi to English-Hindi, and Kannada to English-Telugu. Compared to their bilingual counterparts (Table 4), trilingual models obtain similar within-language performance, which indicates that adding similar languages cannot mitigate negative interference.   \"En-En\" refers to gradients of two English batches within the Ar-En model, while \"Ar-En\" and \"Fr-En\" refer to gradients of two batches, one from each language, within Ar-En and Fr-En models respectively. However, they do improve zero-shot cross-lingual performance. One possible explanation is that even similar languages can fight for language-specific capacity but they may nevertheless benefit the generalization of the shared knowledge. Gradient Conflict In Figure 3, we plot the gradient cosine similarity between Arabic-English and French-English in their corresponding bilingual models over the first 25 epochs. We also plot the similarity within English, measured using two independently sampled batches 2 . Specifically, gradients between two different languages are indeed less similar than those within the same language. The gap is more evident in the early few epochs, where we observe negative gradient similarities for Ar-En and Fr-En while those for En-En are positive. In addition, gradients in Ar-En are less similar than those in Fr-En, indicating that distant language pair can cause more severe gradient conflicts. These results confirm that gradient conflict exists in multilingual models and is correlated to per language performance, suggesting it may introduce optimization challenge that results in negative interference.", "n_publication_ref": 0, "n_figure_ref": 2}, {"heading": "Parameter Sharing", "text": "The existence of gradient 2 Notice that we use gradient accumulation to sample an effectively larger batch of 4096 sentences to calculate the gradient similarity. conflicts may imply that languages are fighting for capacity. Thus, we next study how languageuniversal these multilingual parameters are. Figure 4a shows the cosine similarity of mask parameters \u03c0 across different layers. We observe that within-language similarity (En-En) is near perfect, which validates the pruning method's robustness.\nThe trend shows that model parameters are better shared in the bottom layers than the upper ones. Besides, it also demonstrates that parameters in multi-head attention layers obtain higher similarities than those in feedforward layers, suggesting that attention mechanism might be more languageuniversal. We additionally inspect \u03c0 parameters with the highest absolute values and plot those values for Ar (Figure 4b), together with their En counterparts. A more negative value indicates that the parameter is more likely to be pruned for that language and vice versa. Interestingly, while many parameters with positive values (on the right) are language-universal as both languages assign very positive values, parameters with negative values (on the left) are mostly language-specific for Ar as En assigns positive values. We observe similar patterns for other languages as well. These results demonstrate that language-specific parameters do exist in multilingual models.\nHaving language-specific capacity in shared parameters is sub-optimal. It is less transferable and thus can hinder cross-lingual performance. Moreover, it may also take over capacity budgets for other languages and degrade their within-language performance, i.e., causing negative interference. A natural next question is whether explicitly adding language-specific capacity into multilingual models can alleviate negative interference. We thus train variants of bilingual models that contain language-specific components for each language. Particularly, we consider adding language-specific feedforward layers, attention layers, and residual adapter layers (Rebuffi et al., 2017;Houlsby et al., 2019), denoted as ffn, attn and adpt respectively. For each type of component, we create two separate copies in each Transformer layer, one designated for each language, while the rest of the network remains unchanged. As shown in Table 2 and 3, adding language-specific capacity does mitigate negative interference and improve monolingual performance. We also find that language-specific feedforward layers obtain larger performance gains compared to attention layers, consistent with our prior analysis. However, these gains come at a cost of cross-lingual transferability, such that their zeroshot performance drops tremendously. Our results suggest a tension between addressing interference versus improving transferability. In the next section, we investigate how to address negative interference in a manner that can improve performance on both within-language tasks and cross-lingual benchmarks.\n4 Mitigating Negative Interference via Meta Learning", "n_publication_ref": 2, "n_figure_ref": 2}, {"heading": "Proposed Method", "text": "In the previous section, we demonstrated that while explicitly adding language-specific components can alleviate negative interference, it can also hinder cross-lingual transferability. We notice that a critical shortcoming of language-specific capacity is that they are agnostic of the rest of other languages, since by design they are trained on the designated language only. They are thus more likely to overfit and can induce optimization challenges for shared capacity as well. Inspired by recent work in meta learning (Flennerhag et al., 2019) that utilizes meta parameters to improve gradient geometry of the base network, we propose a novel meta-learning formulation of multilingual models that exploits language-specific parameters to im-prove generalization of shared parameters.\nFor a model with some predefined languagespecific parameters \u03c6 = {\u03c6 i } L i=1 , where \u03c6 i is designated for the i-th language, and shared parameters \u03b8, our solution is to treat \u03c6 as meta parameters and \u03b8 as base parameters. Ideally, we want \u03c6 to store non-transferable language-specific knowledge to resolve conflicts and improve generalization of \u03b8 in all languages (a.k.a. mitigate negative interference and improve cross-lingual transferability). Therefore, we train \u03c6 based on the following principle: if \u03b8 follows the gradients on training data for a given \u03c6, the resulting \u03b8 should obtain a good validation performance on all languages. This implies a bilevel optimization problem (Colson et al., 2007) formally written as:\nmin \u03c6 1 L L i=1 L i val (\u03b8 * , \u03c6 i ) s.t. \u03b8 * = arg min \u03b8 1 L L i=1 L i train (\u03b8, \u03c6 i ),(2)\nwhere L i val and L i train denote the training and the validation MLM loss for the i-th language. Since directly solving this problem can be prohibitive due to the expensive inner optimization, we approximate \u03b8 * by adapting the current \u03b8 (t) using a single gradient step, similar to techniques used in prior meta-learning methods (Finn et al., 2017). This results in a two-phase iterative training process shown in Algorithm 1 (See Appendix B).\nTo be specific, at each training step t on the ith language during pretraining, we first adapt a gradient step on \u03b8 to obtain a new \u03b8 and update \u03c6 i Update language-specific parameters as:\n\u03c6 (t+1) i \u2190 GradientUpdate(\u03c6 (t) i , \u2207 \u03c6 (t) i 1 L L j=1 L j val (\u03b8 (t) i \u2212 \u03b2\u2207 \u03b8 (t) L i train (\u03b8 (t) , \u03c6 (t) i ), \u03c6(t) j )) 7:\nUpdate shared parameters as: t) , \u03c6 (t+1) )) 8: end while based on the \u03b8 's validation MLM loss:\n\u03b8 (t+1) \u2190 GradientUpdate(\u03b8 (t) , \u2207 \u03b8 (t) L train (\u03b8 (\n\u03c6 (t+1) i = \u03c6 (t) i \u2212 \u03b1\u2207 \u03c6 (t) i 1 L L j=1 L j val (\u03b8 , \u03c6 (t) j ) \u03b8 = \u03b8 (t) \u2212 \u03b2\u2207 \u03b8 (t) L i train (\u03b8 (t) , \u03c6 (t) i ),(3)\nwhere \u03b1 and \u03b2 are learning rates. Notice that \u03b8 is a function of \u03c6 (t)\ni and thus this optimization requires computing the gradient of gradient. Particularly, by applying chain rule to the gradient of \u03c6 (t) i , we can observe that it contains a higher-order term:\n\u2207 2 \u03c6 (t) i ,\u03b8 (t) L i train (\u03b8 (t) , \u03c6 (t) i ) \u2022 \u2207 \u03b8 1 L L j=1 L j val (\u03b8 , \u03c6 (t) j )(4)\nThis is important, since it shows that \u03c6 i can obtain information from other languages through higherorder gradients. In other words, language-specific parameters are not agnostic of other languages anymore without violating the language-specific requirement. This is because, in Eq. 3, while \u2207 \u03b8 (t) is based on the i-th language only, the validation loss is computed for all languages. Finally, in the second phase, we update \u03b8 based on the new \u03c6 (t+1) :\n\u03b8 (t+1) = \u03b8 (t) \u2212 \u03b2\u2207 \u03b8 (t) L train (\u03b8 (t) , \u03c6 (t+1) ) (5)", "n_publication_ref": 4, "n_figure_ref": 0}, {"heading": "Evaluation", "text": "While our method is generic, we evaluate it applied on bilingual models with adapter networks. Adapters have been effectively utilized in multilingual models , and we choose them for practical consideration of limiting perlanguage capacity. Unlike prior works that finetune adapters for adaptation, we train them jointly with shared parameters during pretraining. We follow Houlsby et al. (2019) and insert language-specific adapters after attention and feedforward layers. We leave a more thorough investigation of how to better pick language-specific structures for future work.\nFor downstream task evaluation, we finetune all layers. Notice that computing the gradient of gradient in Eq. 3 doubles the memory requirement. In practice, we utilize the finite difference approximation (Appendix B).\nBy evaluating their performance on the zeroshot transfer settings (Table 2, 3 and 6), we observe that our method, denoted as meta adpt, consistently improves the performance over JointPair baselines, while ordinary adapters (adpt) perform worse than JointPair. This shows that, the proposed method can effectively utilize the added language-specific adapters to improve generalization of shared parameters across languages. At the same time, our method also mitigates negative interference and outperforms JointPair on withinlanguage performance, closing the gap with monolingual models. In particular, it performs better than ordinary adapters in both settings. We hypothesize that this is because it alleviates language conflicts during training and thus converges more robustly. For example, we plot training loss in the early stage in Figure 4c, which shows that ordinary adapters converge slower than JointPair due to overfitting of language-specific adapters while meta adapters converge much faster. For ablation studies, we also report results for JointPair trained with adapters shared between two languages, denoted as share adpt. Unlike language-specific adapters that can hinder transferability, shared adapters improve both within-language and cross-lingual performance with the extra capacity. However, meta adapters still obtain better performance. These results show that mitigating negative interference can improve multilingual representations.  ", "n_publication_ref": 1, "n_figure_ref": 1}, {"heading": "Related Work", "text": "Unsupervised multilingual language models such as mBERT (Devlin et al., 2018) and XLM (Lample and Conneau, 2019; work surprisingly well on many NLP tasks without parallel training signals (Pires et al., 2019;Wu and Dredze, 2019). A line of follow-up work Artetxe et al., 2019;Karthikeyan et al., 2020) study what contributes to the cross-lingual ability of these models. They show that vocabulary overlap is not required for multilingual models, and suggest that abstractions shared across languages emerge automatically during pretraining. Another line of research investigate how to further improve these shared knowledge, such as applying post-hoc alignment (Wang et al., 2020b;Cao et al., 2020) and utilizing better calibrated training signal (Mulcaire et al., 2019;Huang et al., 2019). While prior work emphasize how to share to improve transferability, we study multilingual models from a different perspective of how to unshare to resolve language conflicts. Our work is also related to transfer learning (Pan and Yang, 2010) and multi-task learning (Ruder, 2017). In particular, prior work have observed (Rosenstein et al., 2005) and studied (Wang et al., 2019) negative transfer, such that transferring knowledge from source tasks can degrade the performance in the target task. Others show it is important to remedy negative transfer in multi-source settings (Ge et al., 2014;Wang and Carbonell, 2018). In this work, we study negative transfer in multilingual models, where languages contain heavily unbalanced training data and exhibit complex intertask relatedness.\nIn addition, our work is related to methods that measure similarity between cross-lingual representations. For example, existing methods utilize statistical metrics to examine cross-lingual embeddings such as singular vector canonical correlation analysis (Raghu et al., 2017;Kudugunta et al., 2019), eigenvector similarity (S\u00f8gaard et al., 2018), and centered kernel alignment (Kornblith et al., 2019;. While these methods focus on testing latent representations, we directly compare similarity of neural network structures through network pruning. Finally, our work is related to meta learning, which sets a meta task to learn model initialization for fast adaptation (Finn et al., 2017;Gu et al., 2018;Flennerhag et al., 2019), data selection (Wang et al., 2020a), andhyperparameters (Baydin et al., 2018). In our case, the meta task is to mitigate negative interference.", "n_publication_ref": 25, "n_figure_ref": 0}, {"heading": "Conclusion", "text": "We present the first systematic study of negative interference in multilingual models and shed light on its causes. We further propose a method and show it can improve cross-lingual transferability by mitigating negative interference. While prior efforts focus on improving sharing and cross-lingual alignment, we provide new insights and a different perspective on unsharing and resolving language conflicts.", "n_publication_ref": 0, "n_figure_ref": 0}, {"heading": "A Fine-tuning Details", "text": "Notice that XNLI only has training data in available in English so we only evaluate zero-shot crosslingual performance on it. Following (Hu et al., 2020), we finetune the model for 10 epochs for NER and POS, 2 epochs for QA and 200 epochs for XNLI. For NER, POS and QA, we search the following hyperparameters: batch size {16, 32}; learning rate {2e-5, 3e-5, 5e-5}. We use English dev set for zero-shot cross-lingual setting and the target language dev set for within-language monolingual setting. For XNLI, we search for: batch size {4, 8}; encoder learning rate {1e-6, 5e-6, 2e-5}; classifier learning rate {5e-6, 2e-5, 5e-5}. For models with language-specific components, we test freezing these components or finetuning them together. We discover that finetuning the whole network always yields better results. For all experiments, we save checkpoint after each epoch.", "n_publication_ref": 1, "n_figure_ref": 0}, {"heading": "B Method Details", "text": "Let z i be the output of the i-th layer of dimension d. The residual adapter network (Rebuffi et al., 2017;Houlsby et al., 2019;) is a bottleneck layer that first projects z i to an inner layer with dimension b:\nh i = g(W z i z i )(6)\nwhere W z i \u2208 R d\u00d7b and g is some activation function such as relu. It is then projected back to the original input dimension d with a residual connection:\no i = W h i h i + z i(7)\nwhere W h i \u2208 R b\u00d7d . In our experiments, we fix b = 1 4 d. For a bilingual model of lg 1 and lg 2 , we inject two langauge-specific adapters after each attention and feedforward layer, one for each language. For example, if the input text is in lg 1 , the network will be routed to adapters designated for lg 1 . The rest of the network and training protocol remain unchanged.\nThe injected adapter layers mimic the warp layers interleaved between base network layers in Flennerhag et al. (2019). Warp layers are meta parameters that aim to improve the performance of the base network. They precondition base network gradients to obtain better gradient geometry. In our experiments, we treat language-specific adapters as meta parameters to improve generalization of the shared network. The algorithm is outlined in Algorithm 1. The adapters are updated according to Eq 3, which doubles the memory requirement. In particular, the high-order term in Eq 4 requires computing the gradient of gradient. In practice, we approximate this term using the finite difference approximation as:\n\u2207 \u03c6 (t) i L i train (\u03b8 + , \u03c6 (t) i ) \u2212 \u2207 \u03c6 (t) i L i train (\u03b8 \u2212 , \u03c6(t)\ni ) 2\n(8) where \u03b8 \u00b1 = \u03b8 (t) \u00b1 \u2207 \u03b8\n1 L L j=1 L j val (\u03b8 , \u03c6 (t) j\n) and is a small scalar. We use the same value for learning rates \u03b1 and \u03b2 in Eq 3, to be consistent with standard learning rate schedule used in XLM (Lample and Conneau, 2019).", "n_publication_ref": 4, "n_figure_ref": 0}, {"heading": "C Extra Results", "text": "We show the full results on the TyDiQA-GoldP dataset in Table 7.  ", "n_publication_ref": 0, "n_figure_ref": 0}, {"heading": "Acknowledgments", "text": "We want to thank Jaime Carbonell for his support on the early stage of this project. We also would like to thank Zihang Dai, Graham Neubig, Orhan Firat, Yuan Cao, Jiateng Xie, Xinyi Wang, Ruochen Xu and Yiheng Zhou for insightful discussions. Lastly, we thank anonymous reviewers for their valueable feedbacks.", "n_publication_ref": 0, "n_figure_ref": 0}], "references": [{"title": "Massively multilingual neural machine translation", "journal": "", "year": "2019", "authors": "Roee Aharoni; Melvin Johnson; Orhan Firat"}, {"title": "Massively multilingual neural machine translation in the wild: Findings and challenges", "journal": "", "year": "2019", "authors": "Naveen Arivazhagan; Ankur Bapna; Orhan Firat; Dmitry Lepikhin; Melvin Johnson; Maxim Krikun; Mia Xu Chen; Yuan Cao; George Foster; Colin Cherry"}, {"title": "On the cross-lingual transferability of monolingual representations", "journal": "", "year": "2019", "authors": "Mikel Artetxe; Sebastian Ruder; Dani Yogatama"}, {"title": "Simple, scalable adaptation for neural machine translation", "journal": "", "year": "2019", "authors": "Ankur Bapna; Naveen Arivazhagan; Orhan Firat"}, {"title": "Online learning rate adaptation with hypergradient descent", "journal": "", "year": "2018", "authors": "Robert Atilim Gunes Baydin; David Martinez Cornish; Mark Rubio; Frank Schmidt;  Wood"}, {"title": "Multilingual alignment of contextual word representations", "journal": "", "year": "2020", "authors": "Steven Cao; Nikita Kitaev; Dan Klein"}, {"title": "Tydi qa: A benchmark for information-seeking question answering in typologically diverse languages", "journal": "", "year": "2020", "authors": "H Jonathan; Eunsol Clark; Michael Choi; Dan Collins; Tom Garrette; Vitaly Kwiatkowski; Jennimaria Nikolaev;  Palomaki"}, {"title": "An overview of bilevel optimization", "journal": "Annals of operations research", "year": "2007", "authors": "Beno\u00eet Colson; Patrice Marcotte; Gilles Savard"}, {"title": "Unsupervised cross-lingual representation learning at scale", "journal": "", "year": "2019", "authors": "Alexis Conneau; Kartikay Khandelwal; Naman Goyal; Vishrav Chaudhary; Guillaume Wenzek; Francisco Guzm\u00e1n; Edouard Grave; Myle Ott; Luke Zettlemoyer; Veselin Stoyanov"}, {"title": "Xnli: Evaluating crosslingual sentence representations", "journal": "", "year": "2018", "authors": "Alexis Conneau; Guillaume Lample; Ruty Rinott; Adina Williams; R Samuel; Holger Bowman; Veselin Schwenk;  Stoyanov"}, {"title": "Bert: Pre-training of deep bidirectional transformers for language understanding", "journal": "", "year": "2018", "authors": "Jacob Devlin; Ming-Wei Chang; Kenton Lee; Kristina Toutanova"}, {"title": "Model-agnostic meta-learning for fast adaptation of deep networks", "journal": "", "year": "2017", "authors": "Chelsea Finn; Pieter Abbeel; Sergey Levine"}, {"title": "Metalearning with warped gradient descent", "journal": "", "year": "2019", "authors": "Sebastian Flennerhag; Andrei A Rusu; Razvan Pascanu; Hujun Yin; Raia Hadsell"}, {"title": "On handling negative transfer and imbalanced distributions in multiple source transfer learning. Statistical Analysis and Data Mining", "journal": "The ASA Data Science Journal", "year": "2014", "authors": "Jing Liang Ge; Hung Gao; Kang Ngo; Aidong Li;  Zhang"}, {"title": "Meta-learning for lowresource neural machine translation", "journal": "", "year": "2018", "authors": "Jiatao Gu; Yong Wang; Yun Chen; O K Victor; Kyunghyun Li;  Cho"}, {"title": "Parameter-efficient transfer learning for nlp", "journal": "", "year": "2019", "authors": "Neil Houlsby; Andrei Giurgiu; Stanislaw Jastrzebski; Bruna Morrone; Quentin De Laroussilhe; Andrea Gesmundo; Mona Attariyan; Sylvain Gelly"}, {"title": "Xtreme: A massively multilingual multi-task benchmark for evaluating cross-lingual generalization", "journal": "", "year": "2020", "authors": "Junjie Hu; Sebastian Ruder; Aditya Siddhant; Graham Neubig; Orhan Firat; Melvin Johnson"}, {"title": "Unicoder: A universal language encoder by pretraining with multiple cross-lingual tasks", "journal": "", "year": "2019", "authors": "Haoyang Huang; Yaobo Liang; Nan Duan; Ming Gong; Linjun Shou; Daxin Jiang; Ming Zhou"}, {"title": "Google's multilingual neural machine translation system: Enabling zero-shot translation", "journal": "Transactions of the Association for Computational Linguistics", "year": "2017", "authors": "Melvin Johnson; Mike Schuster; V Quoc; Maxim Le; Yonghui Krikun; Zhifeng Wu; Nikhil Chen; Fernanda Thorat; Martin Vi\u00e9gas; Greg Wattenberg;  Corrado"}, {"title": "Cross-lingual ability of multilingual bert: An empirical study", "journal": "", "year": "2020", "authors": "K Karthikeyan; Zihan Wang; Stephen Mayhew; Dan Roth"}, {"title": "Adam: A method for stochastic optimization", "journal": "", "year": "2014", "authors": "P Diederik; Jimmy Kingma;  Ba"}, {"title": "Similarity of neural network representations revisited", "journal": "", "year": "2019", "authors": "Simon Kornblith; Mohammad Norouzi; Honglak Lee; Geoffrey Hinton"}, {"title": "vestigating multilingual nmt representations at scale. arXiv preprint", "journal": "", "year": "2019", "authors": "Ankur Sneha Reddy Kudugunta; Isaac Bapna; Naveen Caswell; Orhan Arivazhagan;  Firat"}, {"title": "Crosslingual language model pretraining", "journal": "", "year": "2019", "authors": "Guillaume Lample; Alexis Conneau"}, {"title": "Roberta: A robustly optimized bert pretraining approach", "journal": "", "year": "2019", "authors": "Yinhan Liu; Myle Ott; Naman Goyal; Jingfei Du; Mandar Joshi; Danqi Chen; Omer Levy; Mike Lewis; Luke Zettlemoyer; Veselin Stoyanov"}, {"title": "Learning sparse neural networks through l 0 regularization", "journal": "", "year": "2017", "authors": "Christos Louizos; Max Welling; Diederik P Kingma"}, {"title": "Polyglot contextual representations improve crosslingual transfer", "journal": "Long and Short Papers", "year": "2019", "authors": "Phoebe Mulcaire; Jungo Kasai; Noah A Smith"}, {"title": "", "journal": "Mohammed Attia", "year": "", "authors": "Joakim Nivre; Mitchell Abrams; \u017deljko Agi\u0107; Lars Ahrenberg; Lene Antonsen; Maria Jesus Aranzabe; Gashaw Arutie; Masayuki Asahara; Luma Ateyah"}, {"title": "A survey on transfer learning", "journal": "IEEE Transactions on knowledge and data engineering", "year": "2010", "authors": "Qiang Sinno Jialin Pan;  Yang"}, {"title": "Crosslingual name tagging and linking for 282 languages", "journal": "Long Papers", "year": "2017", "authors": "Xiaoman Pan; Boliang Zhang; Jonathan May; Joel Nothman; Kevin Knight; Heng Ji"}, {"title": "How multilingual is multilingual bert? arXiv preprint", "journal": "", "year": "2019", "authors": "Telmo Pires; Eva Schlinger; Dan Garrette"}, {"title": "Svcca: Singular vector canonical correlation analysis for deep learning dynamics and interpretability", "journal": "", "year": "2017", "authors": "Maithra Raghu; Justin Gilmer; Jason Yosinski; Jascha Sohl-Dickstein"}, {"title": "Know what you don't know: Unanswerable questions for squad", "journal": "", "year": "2018", "authors": "Pranav Rajpurkar; Robin Jia; Percy Liang"}, {"title": "Learning multiple visual domains with residual adapters", "journal": "", "year": "2017", "authors": "Hakan Sylvestre-Alvise Rebuffi; Andrea Bilen;  Vedaldi"}, {"title": "To transfer or not to transfer", "journal": "", "year": "2005", "authors": "Zvika Michael T Rosenstein; Leslie Pack Marx; Thomas G Kaelbling;  Dietterich"}, {"title": "An overview of multi-task learning in", "journal": "", "year": "2017", "authors": "Sebastian Ruder"}, {"title": "Neural machine translation of rare words with subword units", "journal": "Long Papers", "year": "2016", "authors": "Rico Sennrich; Barry Haddow; Alexandra Birch"}, {"title": "On the limitations of unsupervised bilingual dictionary induction", "journal": "Long Papers", "year": "2018", "authors": "Anders S\u00f8gaard; Sebastian Ruder; Ivan Vuli\u0107"}, {"title": "Multilingual neural machine translation with knowledge distillation", "journal": "", "year": "2019", "authors": "Xu Tan; Yi Ren; Di He; Tao Qin; Zhou Zhao; Tie-Yan Liu"}, {"title": "Attention is all you need", "journal": "", "year": "2017", "authors": "Ashish Vaswani; Noam Shazeer; Niki Parmar; Jakob Uszkoreit; Llion Jones; Aidan N Gomez; \u0141ukasz Kaiser; Illia Polosukhin"}, {"title": "Balancing training for multilingual neural machine translation", "journal": "", "year": "2020", "authors": "Xinyi Wang; Yulia Tsvetkov; Graham Neubig"}, {"title": "Towards more reliable transfer learning", "journal": "", "year": "2018", "authors": "Zirui Wang; Jaime Carbonell"}, {"title": "Characterizing and avoiding negative transfer", "journal": "", "year": "2019", "authors": "Zirui Wang; Zihang Dai; Barnab\u00e1s P\u00f3czos; Jaime Carbonell"}, {"title": "Cross-lingual alignment vs joint training: A comparative study and a simple unified framework", "journal": "", "year": "2020", "authors": "Zirui Wang; Jiateng Xie; Ruochen Xu; Yiming Yang; Graham Neubig; Jaime Carbonell"}, {"title": "Emerging cross-lingual structure in pretrained language models", "journal": "", "year": "2019", "authors": "Shijie Wu; Alexis Conneau; Haoran Li; Luke Zettlemoyer; Veselin Stoyanov"}, {"title": "Beto, bentz, becas: The surprising cross-lingual effectiveness of bert", "journal": "", "year": "2019", "authors": "Shijie Wu; Mark Dredze"}, {"title": "Xlnet: Generalized autoregressive pretraining for language understanding", "journal": "", "year": "2019", "authors": "Zhilin Yang; Zihang Dai; Yiming Yang; Jaime Carbonell; R Russ; Quoc V Salakhutdinov;  Le"}, {"title": "Gradient surgery for multi-task learning", "journal": "", "year": "2020", "authors": "Tianhe Yu; Saurabh Kumar; Abhishek Gupta; Sergey Levine; Karol Hausman; Chelsea Finn"}], "figures": [{"figure_label": "1", "figure_type": "", "figure_id": "fig_0", "figure_caption": "Figure 1 :1Figure 1: Comparing monolingual vs multilingual models on NER. Lower performance of multilingual models is likely an indicator of negative interference.", "figure_data": ""}, {"figure_label": "2", "figure_type": "", "figure_id": "fig_1", "figure_caption": "Figure 2 :2Figure 2: Validation perplexity during pretraining.", "figure_data": ""}, {"figure_label": "3", "figure_type": "", "figure_id": "fig_2", "figure_caption": "Figure 3 :3Figure 3: Gradients similarity throughout training.\"En-En\" refers to gradients of two English batches within the Ar-En model, while \"Ar-En\" and \"Fr-En\" refer to gradients of two batches, one from each language, within Ar-En and Fr-En models respectively.", "figure_data": ""}, {"figure_label": "4", "figure_type": "", "figure_id": "fig_3", "figure_caption": "Figure 4 :4Figure 4: Left: Parameter similarity across layers. Middle: Normalized pruning variables of highest absolute values for Ar in Ar-En model. 10 parameter groups with most negative values are shown on the left and 10 with most positive values are shown on the right. Right: Average MLM training loss after the warm-up stage.", "figure_data": ""}, {"figure_label": "1", "figure_type": "", "figure_id": "fig_4", "figure_caption": "Algorithm 11Training XLM with Meta Language-specific Layers 1: Input: Training data 2: Output: The converged model {\u03b8 * , \u03c6 * } 3: Initialize model parameters {\u03b8 (0) , \u03c6 (0) } 4: while not converged do", "figure_data": ""}, {"figure_label": "1", "figure_type": "table", "figure_id": "tab_1", "figure_caption": "", "figure_data": ": Language training corpra statitstics and down-stream tasks availability. Corpus size measured in mil-lions of sentences."}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_2", "figure_caption": "88.0 87.8 89.1 85.1 82.1 86.9 92.7 76.2 96.7 97.0 94.5 91.4 JointPair 86.9 86.5 84.2 88.3 86.1 76.2 84.7 89.2 75.8 93.2 95.2 88.7 88.4 + ffn 88.2 88.4 86.6 88.9 85.4 81.2 86.5 92.4 76.1 95.6 96.1 92.4 90.5 + attn 87.3 86.8 84.1 88.5 84.9 77.4 84.8 91.8 75.4 94.4 95.3 90.9 89.6", "figure_data": "ModelarfrruNER (F1) hiswteavgarfrPOS (F1) ru hiteavgWithin-language MonolingualMono 89.2 + adpt 87.8 86.8 84.5 87.7 86.3 77.0 85.0 91.7 75.6 94.0 95.2 91.5 89.6+ share"}, {"figure_label": "2", "figure_type": "table", "figure_id": "tab_4", "figure_caption": "", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_5", "figure_caption": ", we report our results on NER, POS and QA together with XLM-100, which is trained on 100 languages and contains 827M parameters. In particular, we observe that monolin-", "figure_data": "ModelarruswteavgWithin-language MonolingualMono74.2 63.1 52.5 58.2 62.0JointPair71.3 58.2 52.8 52.2 58.6+ ffn73.4 61.2 51.4 57.5 60.9+ attn72.8 60.8 51.2 52.8 59.4+ adpt71.5 59.4 52.1 55.5 59.6+ share adpt 71.0 58.5 52.8 53.9 59.1+ meta adpt73.0 61.8 54.5 56.2 61.4XLM74.3 62.5 58.7 55.4 62.7Zero-shot Cross-lingualJointPair54.1 43.2 41.5 21.5 40.1+ ffn2.20.04.40.01.7+ attn3.72.10.70.01.6+ adpt53.4 44.7 41.2 20.4 39.9+ share adpt 54.3 44.8 42.2 22.7 41.0+ meta adpt57.5 45.8 43.0 23.1 42.4XLM59.4 47.3 42.3 16.3 41.3"}, {"figure_label": "3", "figure_type": "table", "figure_id": "tab_6", "figure_caption": "", "figure_data": ""}, {"figure_label": "5", "figure_type": "table", "figure_id": "tab_7", "figure_caption": "while the performance for both models drop compared to their \"high-resource\" counterparts, bilingual models indeed outperform mono-", "figure_data": "ModelNER (F1) hi tePOS (F1) hi teWithin-language MonolingualJointPair 88.3 76.2 95.2 88.7JointTri87.8 76.4 95.3 88.7Zero-shot Cross-lingualJointPair 61.4 45.2 58.9 72.8JointTri63.5 47.6 59.5 74.4"}, {"figure_label": "4", "figure_type": "table", "figure_id": "tab_8", "figure_caption": "Comparing trilingual models with bilingual models. This shows the effect of adding a third similar language to bilingual models.", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_9", "figure_caption": "Within-language Performance on fr/ru Mono 88.0 81.7 87.8 82.4 76.2 68.5 96.7 88.7 63.1/49.2 47.2/29.5 JointPair 86.5 83.2 84.2 82.7 75.8 71.4 93.2 89.5 58.2/43.1 49.5/30.4", "figure_data": "ModelfrNER (F1) fr l ruru lfrPOS (F1) fr l ruru lQA (F1/EM) ru ru lWithin-language Performance on enJointPair 78.6 78.4 75.8 75.9 94.5 94.5 92.7 92.3 61.7/49.8 62.1/50.2"}, {"figure_label": "5", "figure_type": "table", "figure_id": "tab_10", "figure_caption": "Evaluating effects of training corpus sizes on negative interference.", "figure_data": ""}, {"figure_label": "6", "figure_type": "table", "figure_id": "tab_12", "figure_caption": "XNLI results (Accuracy).", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_13", "figure_caption": "/58.7 59.4/44.8 52.1/38.7 55.5/38.9 59.6/45.3 + share adpt 71.0/57.8 58.5/43.2 52.8/39.0 53.9/37.2 59.1/44.3 + meta adpt 73.0/61.4 61.8/46.7 54.5/40.0 56.2/39.5 61.4/36.4", "figure_data": "ModelarruswteavgWithin-language MonolingualMono74.2/62.5 63.1/49.2 52.5/37.4 58.2/41.0 62.0/47.5JointPair71.3/58.1 58.2/43.1 52.8/39.0 52.2/36.4 58.6/44.2+ ffn73.4/61.2 61.2/45.8 51.4/34.3 57.5/40.5 60.9/45.5+ attn72.8/61.0 60.8/45.4 51.2/34.0 52.8/36.8 59.4/44.3+ adpt 71.5XLM 74.3/63.2 62.5/48.7 58.7/40.4 55.4/38.3 62.7/47.7Zero-shot Cross-lingualJointPair54.1/39.5 43.2/27.5 41.5/22.2 21.5/14.7 40.1/26.0+ ffn2.2/1.50.0/0.04.4/3.70.0/0.01.7/1.3+ attn3.7/2.02.1/1.20.7/1.00.0/0.01.6/1.1+ adpt53.4/39.1 44.7/27.9 41.2/21.8 20.4/13.8 39.9/25.7+ share adpt 54.3/39.6 44.8/27.8 42.2/22.9 22.7/15.6 41.0/26.5+ meta adpt 57.5/40.8 45.8/28.8 43.0/24.2 23.1/17.7 42.4/27.9XLM59.4/41.2 47.3/29.8 42.3/22.0 16.3/7.2 41.3/25.1"}, {"figure_label": "7", "figure_type": "table", "figure_id": "tab_14", "figure_caption": "Full results on TyDiQA-GoldP (F1/EM).", "figure_data": ""}], "doi": ""}