{"authors": "Ulya Bayram; Lamia Benhiba", "pub_date": "", "title": "Determining a Person's Suicide Risk by Voting on the Short-Term History of Tweets for the CLPsych 2021 Shared Task", "abstract": "In this shared task, we accept the challenge of constructing models to identify Twitter users who attempted suicide based on their tweets 30 and 182 days before the adverse event's occurrence. We explore multiple machine learning and deep learning methods to identify a person's suicide risk based on the short-term history of their tweets. Taking the real-life applicability of the model into account, we make the design choice of classifying on the tweet level. By voting the tweet-level suicide risk scores through an ensemble of classifiers, we predict the suicidal users 30-days before the event with an 81.8% true-positives rate. Meanwhile, the tweet-level voting falls short on the six-month-long data as the number of tweets with weak suicidal ideation levels weakens the overall suicidal signals in the long term.", "sections": [{"heading": "Introduction", "text": "Suicide is amongst the most pressing public health issues facing today's society, stressing the need for rapid and effective detection tools. As people are increasingly self-expressing their distress on social media, an unprecedented volume of data is currently available to detect a person's suicide risk (Roy et al., 2020;Tadesse et al., 2020;Luo et al., 2020). In this shared task, we aim to construct tools to identify suicidal Twitter users (who attempted suicide) based on their tweets collected from spans of 30-days (subtask 1) and six months (subtask 2) before the adverse event's occurrence date (Macavaney et al., 2021). The small number of users in the labeled collections of subtask 1 (57 suicidal/57 control) and subtask 2 (82 suicidal/82 control) and the scarcity of tweets for some users pose these tasks as small-dataset classification challenges. On that note, Coppersmith et al. (2018) reported high performance with deep learning (DL) methods on these collections after enriching them with additional data (418 suicidal/418 control).\nWhen formulating the strategy to attack the challenge, we were motivated by the real-life applicability of the methods. Some social media domains already started implementing auto-detection tools to prevent suicide (Ji et al., 2020). These tools continuously monitor the presence of suicide risk in new posts. Therefore, we chose to train the models at the tweet level. Next, we develop a majority voting scheme over the classified tweets to report an overall suicide risk score for a user. We employ simple machine learning (ML) methods and create an ensemble. We also experiment with DL methods to assess whether complexity would improve the results. Since successful ML applications thrive on feature engineering (Domingos, 2012), we conduct feature selection to evaluate and determine the best feature sets for the models.\nOur experiments suggest that majority voting (MV) over tweet-level classification scores is a viable approach for the short-term prediction of suicide risk. We observe that DL methods require plentiful resources despite the small size of the datasets. Simple ML methods with feature selection return satisfactory results, and the performance further improves by the ensemble classifier. We also observe that the MV approach falls short on the six-month-long data regardless of the applied model. Yet this limitation provides the invaluable insight that suicidal ideation signals are more significant when the date of the suicidal event is closer, which stresses the need for more complex, noise immune models for longer time-spanning data. In this context, we consider a noise-immune model as a suicidal ideation detection model that is not affected by tweets lacking suicidal ideation.", "n_publication_ref": 7, "n_figure_ref": 0}, {"heading": "Methods", "text": "Pre-processing: We clean the tweets by removing user mentions, URLs, punctuation, and non-ASCII characters, then normalize hashtags into words using a probabilistic splitting tool based on English Wikipedia unigram frequencies (Anderson, 2019). We maintain stopwords and emojis, as they might provide clues regarding the suicidal ideation of the users.\nExperimentation Framework: Before designing the experiments, we face a critical choice: Should we merge all tweets per user, or should we perform the assessment per tweet and then aggregate the scores? To answer this, we consider a real-life risk assessment system. The system should provide a score every time someone posts a tweet. Some social media domains already implement these systems (Ji et al., 2020). Hence, we select to train the models to classify tweets, then apply majority voting (MV) per user to compute a risk score based on the tweet scores. Our framework is described in Figure 1. ", "n_publication_ref": 2, "n_figure_ref": 1}, {"heading": "Experiments with Standard ML methods:", "text": "Before ML experiments, we initially explore a simple approach that constructs graphs from training sets and computes how well the given texts match the graphs (Bayram et al., 2018). However, tweets proved to be unfit for the method due to low word counts.\nAs most ML methods depend on learning from features, we select n-gram features where n \u2264 2 for their popularity in suicide studies (O'Dea et al., 2015;De Choudhury et al., 2016;Pestian et al., 2020). For bigrams (n = 2), we apply a sliding window over concurrent words using the NLTK library (Bird et al., 2009). Next, we eliminate infrequent n-grams from the training set to reduce uninformative features (occurring in \u22643 tweets in 30days, \u226410 tweets in 182-days training sets). Subsequently, we scale the features by row-normalizing them with the root of the sum of the square (i.e. variation) of the feature values.\nAmong the popular ML methods in suicide literature is logistic regression (LR) (Walsh et al., 2017;De Choudhury et al., 2016;O'Dea et al., 2015). We select the \"liblinear\" solver with default settings for being recommended for small datasets (Buitinck et al., 2013). To cover diverse mathematical frameworks and assumptions, we also include two naive Bayes methods (Gaussian (GNB) and Multinomial (MNB) with default settings) (Buitinck et al., 2013). We also experiment with K-Nearest Neighbors with different distance (uniform, weighted) and neighborhood (k \u2208 {3, 5, 8}) settings, but we eliminate it for low within-dataset results. Similarly, ensemblelearning methods (Adaboost, XGBoost, Random Forest) also return underwhelming performance despite the parameter tuning, and thus, were eliminated. Additionally, we evaluate support vector machines (SVM) for their popularity in suicide research (Zhu et al., 2020;Pestian et al., 2020;O'Dea et al., 2015). SVM with rbf kernel proves to be successful but requires costly parameter tuning, while linear SVM (lSVM) shows success on withindataset evaluations with less cost. Consequently, we select lSVM of sklearn (default settings) for the shared task (Buitinck et al., 2013), which returns only binary classification results. To convert them to probabilities, we apply probability calibration with logistic regression (CalibratedClassifierCV).\nFeature selection: Following the ML method selections, we evaluate the effect of feature selection on ML performance. To compute feature importance scores, we also use the LR. For each selected number of features, we gather top suicidal and control features. Next, we train and evaluate the ML methods in a leave-one-out (LOO) framework using those features. The feature selection results of the selected ML methods for two subtasks are in Figure 2. We select the best ML models from these plots.\nExperiments with Ensemble: Ensemble classifiers previously showed success in ML challenges (Niculescu-Mizil et al., 2009). Since every classifier renders predicted probabilities for every data point, we build an ensemble classifier to optimize the results of four selected ML methods (LR, GNB, MNB, lSVM). We adopt a weighting ensemble method where the weight of each classifier is set proportional to its performance (Rokach, 2010). We call this method weighted Ensemble (wEns).", "n_publication_ref": 16, "n_figure_ref": 1}, {"heading": "Experiments with DL:", "text": "To measure whether re- sults would improve with complexity, we also evaluate shallow DL methods. We use the pre-trained transformer model Bert-base-uncased (Devlin et al., 2018) to catch the linguistics features of the tweets. The embeddings are then fed to a DL Recurrent Units-based architecture to learn text sequence orders. We experiment with two types of recurrent neural networks (RNNs): Long Short Term Memory (LSTM) (Gers et al., 1999), and Gated Recurrent Unit (GRU) known for overcoming vanishing and exploding gradient problems faced by vanilla RNNs during training (Cho et al., 2014). After assessing various configurations of both architectures, we settle on a multi-layer bi-directional GRU with the following characteristics: embedding dimen-sion=256, number of layers=2, batch size=32. We call this model GRU-Bert. We include a drop-out to regularise learning and a fully connected layer with a Sigmoid activation to produce the classification for each tweet. Finally, we include the same majority voting framework to infer the classification on the user level. We use Pytorch (Paszke et al., 2019) and scikit-learn (Buitinck et al., 2013) libraries for implementation.", "n_publication_ref": 5, "n_figure_ref": 0}, {"heading": "Results", "text": "Before training each classifier, we employ the best performing top features from the Figure 2, where every classifier has its most fitting top features for each subtask. Next, we construct a LOO crossvalidation framework for within-dataset evaluations. 1 It is important to note that, in each step of the LOO, we choose new user ids for evaluation and completely exclude all of their tweets from the training sets to evade ML methods potentially learning the way a person drafts tweets. That means the within-dataset LOO results of a subtask are reported for all users of the labeled set. Moreover, the labeled datasets have more users than the unlabeled test sets per subtask (e.g. 57 vs. 11 suicidal users in subtask1). Ergo, we expect a high magnitudinal difference between the within-dataset and the test results. The within-dataset evaluation results of the selected methods are in Table 1. For subtask 1, we obtain the best LOO cross-validation score from the wEns method that combines the results of four ML methods (LR, MNB, GNB, lSVM) in a way that improves the results obtained from each of them. Meanwhile, GRU-Bert and MNB return the lowest false positive rates (FPR) for this subtask, which might be a critical rate to consider in real-life applications in social media domains. LOO results of subtask 2 in Table 1 show that wEns returns the best scores for the longer-spanning dataset as well, where LR returns the best FPR, and GBN returns the highest true positives rate (TPR). Based on the LOO results, we select three different methods we were allowed to submit for the evaluation of the test set: LR, wEns, and GRU-Bert. We choose LR and wEns for their high performance on LOO experiments, while we select GRU-Bert for measuring how a DL method would generalize over the test sets. The baseline classifier provided by the organizers is also a logistic regression. However, it performs the classification over merged tweets of users -therefore is different from our implementation of LR. In Table 2, wEns appears to provide the best F1, F2, and TPR scores over the test set of subtask 1, while our LR outperforms the AUC of the baseline method. While these methods show the success of generalizability on the 30-days test set, the results are not that successful for subtask 2. The wEns method performs the same as the baseline in terms of TPR, but the rest of the scores are lower than the baseline results.", "n_publication_ref": 1, "n_figure_ref": 1}, {"heading": "Discussion", "text": "In subtask 1, the test set results show that feature selection can considerably enhance the performance of ML models compared to the baseline. We also find that the ensemble classifier is comparably better than the baseline in this subtask. Meanwhile, though the baseline of CLPsych2021 is the same as our LR, our additional MV and feature selection together enable LR to substantially outperform the baseline. These successes of simple ML methods indicate that a collection of tweets from within the 30-days of a suicidal event is good enough to capture the existence of suicidal ideation, which is an important finding for future real-life suicide prevention applications.\nIn contrast to the observations from subtask 1, our test results on subtask 2 are unsatisfactory. Yet, they provide the valuable insight that suicidal signals are more significant in the short-term, and older tweets lacking suicidal ideation generate noise. This insight suggests the need to account for a time-domain aspect. To investigate the viability of this claim, we experiment with a simple time-decay coefficient in the MV framework and evaluate it through LR on the test set. We multiply each vote by the coefficient 2\n\u2212timeDif f\nhalf Lif e where timeDif f is the number of days between the current and last tweets, and half Lif e (=7 days) is a hyperparameter that reflects the weight of a vote in the final suicide risk score of a user. Initial experiments show that even this simple time-decay coefficient improves the test results significantly. This observation suggests that tweet dates are critical features for this subtask and should be included in future work.\nNotwithstanding, on both subtasks, the shallow DL methods we experimented with perform poorly. These results could be attributed to overfitting on the small dataset and noise sensitivity for the larger time-spanning dataset. Additionally, regardless of the dataset size, these methods proved to be computationally expensive. As within-dataset experiments using simple ML methods outperformed these expensive shallow DL methods, we excluded the latter from the test set evaluation. Future work on DL will include deeper, more complex, and noise immune methods that could integrate Convolutional neural networks (CNN), deeper LSTM or GRU layers, and experiments with various word embedding models.\nIf we compare our findings with those in Coppersmith et al. (2018), we observe different results in terms of short-term versus long-term dataset classifications. We attribute these different outcomes to the fact that the original study optimizes the design for detecting trait-level (relevant to risk for any point in time) suicide risk when we endeavor to identify suicidal ideation at the state level (immediate risk presence). This design choice, along with tweet-level classification, enabled our model to recognize suicidal nuances in short-term tweets. Meanwhile, we were unable to detect any suicidal ideation through manual inspection (reading and interpreting the tweets) over most of these tweets due to their noisy and ambiguous nature.", "n_publication_ref": 1, "n_figure_ref": 0}, {"heading": "Conclusion", "text": "In this shared task, we investigate various models for identifying suicide risk based on user's tweets. Inspired by real-life applications, we focus on assessing suicide risk on the tweet level. Experimental results reveal that the ensemble classifier can identify suicidal users from 30-days tweets with a high performance rate, demonstrating the power of majority voting over tweet-level classifications for short-term suicide risk detection. Meanwhile, we construe from the underwhelming results on the six-month dataset that these models were more sensitive to the signals relevant to short term risk than those relevant to long term risk. In future work, we will incorporate a temporal aspect to improve the noise immunity of our models, and we will continue experimenting with more complex models.", "n_publication_ref": 0, "n_figure_ref": 0}, {"heading": "Ethics Statement", "text": "Secure access to the shared task dataset was provided with IRB approval under University of Maryland, College Park protocol 1642625.", "n_publication_ref": 0, "n_figure_ref": 0}, {"heading": "Acknowledgements", "text": "The organizers are particularly grateful to the users who donated data to the OurDataHelps project without whom this work would not be possible, to Qntfy for supporting the OurDataHelps project and making the data available, to NORC for creating and administering the secure infrastructure, and to Amazon for supporting this research with computational resources on AWS. The authors are thankful to the anonymous reviewers for their constructive comments and valuable suggestions.", "n_publication_ref": 0, "n_figure_ref": 0}], "references": [{"title": "wordninja Python library", "journal": "", "year": "2019-03", "authors": "Derek Anderson"}, {"title": "A lexical network approach for identifying suicidal ideation in clinical interview transcripts", "journal": "Springer", "year": "2018", "authors": "Ulya Bayram; A Ali; John Minai;  Pestian"}, {"title": "Natural language processing with Python: analyzing text with the natural language toolkit", "journal": "Reilly Media, Inc", "year": "2009", "authors": "Steven Bird; Ewan Klein; Edward Loper"}, {"title": "API design for machine learning software: experiences from the scikit-learn project", "journal": "", "year": "2013", "authors": "Lars Buitinck; Gilles Louppe; Mathieu Blondel; Fabian Pedregosa; Andreas Mueller; Olivier Grisel; Vlad Niculae; Peter Prettenhofer; Alexandre Gramfort; Jaques Grobler; Robert Layton; Jake Vanderplas; Arnaud Joly; Brian Holt; Ga\u00ebl Varoquaux"}, {"title": "On the properties of neural machine translation", "journal": "", "year": "2014", "authors": "Kyunghyun Cho; Bart Van Merri\u00ebnboer; Dzmitry Bahdanau; Yoshua Bengio"}, {"title": "Natural language processing of social media as screening for suicide risk", "journal": "Biomedical informatics insights", "year": "2018", "authors": "Glen Coppersmith; Ryan Leary; Patrick Crutchley; Alex Fine"}, {"title": "Discovering shifts to suicidal ideation from mental health content in social media", "journal": "ACM", "year": "2016", "authors": "Emre Munmun De Choudhury; Mark Kiciman; Glen Dredze; Mrinal Coppersmith;  Kumar"}, {"title": "Bert: Pre-training of deep bidirectional transformers for language understanding", "journal": "", "year": "2018", "authors": "Jacob Devlin; Ming-Wei Chang; Kenton Lee; Kristina Toutanova"}, {"title": "A few useful things to know about machine learning", "journal": "Communications of the ACM", "year": "2012", "authors": "Pedro Domingos"}, {"title": "Learning to forget: Continual prediction with lstm", "journal": "", "year": "1999", "authors": "J\u00fcrgen Felix A Gers; Fred Schmidhuber;  Cummins"}, {"title": "Suicidal ideation detection: A review of machine learning methods and applications", "journal": "IEEE Transactions on Computational Social Systems", "year": "2020", "authors": "Shaoxiong Ji; Shirui Pan; Xue Li; Erik Cambria; Guodong Long; Zi Huang"}, {"title": "Exploring temporal suicidal behavior patterns on social media: Insight from twitter analytics", "journal": "Health informatics journal", "year": "2020", "authors": "Jianhong Luo; Jingcheng Du; Cui Tao; Hua Xu; Yaoyun Zhang"}, {"title": "Community-level research on suicidality prediction in a secure environment: Overview of the CLPsych 2021 shared task", "journal": "", "year": "2021", "authors": "Sean Macavaney; Anjali Mittu; Glen Coppersmith; Jeff Leintz; Philip Resnik"}, {"title": "Winning the kdd cup orange challenge with ensemble selection", "journal": "", "year": "2009", "authors": "Alexandru Niculescu-Mizil; Claudia Perlich; Grzegorz Swirszcz; Vikas Sindhwani; Yan Liu; Prem Melville; Dong Wang; Jing Xiao; Jianying Hu; Moninder Singh"}, {"title": "", "journal": "Competition", "year": "", "authors": ""}, {"title": "Detecting suicidality on twitter", "journal": "", "year": "2015", "authors": "O' Bridianne; Stephen Dea;  Wan; J Philip; Alison L Batterham; Cecile Calear; Helen Paris;  Christensen"}, {"title": "Pytorch: An imperative style, high-performance deep learning library", "journal": "Curran Associates, Inc", "year": "2019", "authors": "Adam Paszke; Sam Gross; Francisco Massa; Adam Lerer; James Bradbury; Gregory Chanan; Trevor Killeen; Zeming Lin; Natalia Gimelshein; Luca Antiga; Alban Desmaison; Andreas Kopf; Edward Yang; Zachary Devito; Martin Raison; Alykhan Tejani; Sasank Chilamkurthy; Benoit Steiner; Lu Fang; Junjie Bai; Soumith Chintala"}, {"title": "A machine learning approach to identifying changes in suicidal language", "journal": "Suicide and Life-Threatening Behavior", "year": "2020", "authors": "John Pestian; Daniel Santel; Michael Sorter; Ulya Bayram; Brian Connolly; Tracy Glauser; Melissa Delbello; Suzanne Tamang; Kevin Cohen"}, {"title": "Ensemble-based classifiers. Artificial intelligence review", "journal": "", "year": "2010", "authors": "Lior Rokach"}, {"title": "A machine learning approach predicts future risk to suicidal ideation from social media data", "journal": "NPJ digital medicine", "year": "2020", "authors": "Arunima Roy; Katerina Nikolitch; Rachel Mcginn; Safiya Jinah; William Klement; Zachary A Kaminsky"}, {"title": "Detection of suicide ideation in social media forums using deep learning", "journal": "Algorithms", "year": "2020", "authors": "Hongfei Michael Mesfin Tadesse; Bo Lin; Liang Xu;  Yang"}, {"title": "Predicting risk of suicide attempts over time through machine learning", "journal": "Clinical Psychological Science", "year": "2017", "authors": "G Colin; Jessica D Walsh; Joseph C Ribeiro;  Franklin"}, {"title": "Comparisons of different classification algorithms while using text mining to screen psychiatric inpatients with suicidal behaviors", "journal": "Journal of psychiatric research", "year": "2020", "authors": "H Zhu;  Xia; H Yao;  Fan; Q Wang;  Gao"}], "figures": [{"figure_label": "1", "figure_type": "", "figure_id": "fig_0", "figure_caption": "Figure 1 :1Figure 1: Classification framework used to compute person-level risk scores from the tweet-level scores.", "figure_data": ""}, {"figure_label": "2", "figure_type": "", "figure_id": "fig_1", "figure_caption": "Figure 2 :2Figure 2: Feature selection evaluations on the labeled datasets of two subtasks.", "figure_data": ""}, {"figure_label": "1", "figure_type": "table", "figure_id": "tab_0", "figure_caption": "Within-dataset evaluation results.", "figure_data": "F1F2 TPR FPR AUCSubtask 1: (30 days)LR78.0 81.6 84.2 31.6 80.8GNB81.2 88.8 94.7 38.6 89.3MNB83.1 84.8 86.0 21.0 86.8lSVM81.9 87.2 91.2 31.6 88.6wEns85.0 90.6 94.7 28.1 93.2GRU-Bert 81.2 82.2 83.1 21.7 84.0Subtask 2: (6 months)LR81.9 83.9 85.4 23.2 85.5GNB69.6 83.0 95.1 78.0 81.5MNB75.7 77.1 78.0 28.0 82.8lSVM78.6 87.1 93.9 45.1 84.6wEns81.7 88.0 92.7 34.1 88.5GRU-Bert 74.5 75.4 76.0 28.6 77.5"}, {"figure_label": "2", "figure_type": "table", "figure_id": "tab_1", "figure_caption": "Test results over unlabeled data and the results from the baseline method of CLPsych2021.", "figure_data": "F1F2 TPR FPR AUCSubtask 1: (30 days)Baseline 63.6 63.6 63.6 36.4 66.1LR63.6 63.6 63.6 36.4 74.0wEns69.2 76.3 81.8 54.5 70.2Subtask 2: (6 months)Baseline 71.0 72.4 73.3 33.3 76.4LR64.5 65.8 66.7 40.0 56.9wEns59.5 67.1 73.3 73.3 58.2"}], "doi": "10.1111/sltb.12642"}