Abstract Text Summarization : A Low Resource Challenge
Text summarization is considered as a challenging task in the NLP community . The availability of datasets for the task of multilingual text summarization is rare , and such datasets are difficult to construct . In this work , we build an abstract text summarizer for the German language text using the state - of - the - art " Transformer " model . We propose an iterative data augmentation approach which uses synthetic data along with the real summarization data for the German language . To generate synthetic data , the Common Crawl ( German ) dataset is exploited , which covers different domains . The synthetic data is effective for the low resource condition and is particularly helpful for our multilingual scenario where availability of summarizing data is still a challenging issue . The data are also useful in deep learning scenarios where the neural models require a large amount of training data for utilization of its capacity . The obtained summarization performance is measured in terms of ROUGE and BLEU score . We achieve an absolute improvement of +1.5 and +16.0 in ROUGE1 F1 ( R1 F1 ) on the development and test sets , respectively , compared to the system which does not rely on data augmentation .
Automatic text summarization is considered as a challenging task because while summarizing a piece of text , we read it entirely to develop our understanding to prepare highlighting its main points . Due to the lack of human knowledge and language processing abilities in computers , automatic text summarization is a major non - trivial task ( Allahyari et al , 2017 ) . Two major approaches for automatic summarization are : extractive and abstractive . The extractive summarization approach produces summaries by choosing a subset of sentences in the original text . The abstract text summarization approach aims to shorten the long text into a humanreadable form that contains the most important fact from the original text ( Allahyari et al , 2017 ; Kryściński et al , 2018 ) . The deep learning - based neural attention model when applying to abstract text summarization performs well compared to standard learning - based approaches ( Rush et al , 2015 ) . Abstract text summarization using the attentional encoder - decoder recurrent neural network approach shows a stateof - the - art performance and sets a baseline model ( Nallapati et al , 2016 ) . Further improvements are introduced to the baseline model by using the pointer generator network and coverage mechanism using reinforcement learning based training procedure ( See et al , 2017 ; Paulus et al , 2017 ) . There is an inherent limitation to natural language processing tasks such as text summarization for resource - poor and morphological complex languages owing to a shortage of quality linguistic data available ( Kurniawan and Louvan , 2018 ) . The use of synthetic data along with the real data is one of the popular approaches followed in machine translation domain for the low resource conditions to improve the translation quality ( Bojar and Tamchyna , 2011 ; Hoang et al , 2018 ; Chinea - Rıos et al , 2017 ) . The iterative back - translation ( e.g. training back - translation systems multiple times ) were also found effective in machine translation ( Hoang et al , 2018 ) . We explore similar approaches in our experiments for the text summarization task . The organizations of this paper is as follows : Section 1 describes related work on abstract text summarization . Section 2 explains the techniques followed in our work . Section 3 describes the dataset used in our experiment . Section 4 explains the experimental settings : models and their parameters . Section 5 provides evaluation results with analysis and discussion . Section 6 provides conclusion to the paper .
Across all experiments performed in this paper , we have used the Transformer model as implemented in OpenNMT - py 1 ( Vaswani et al , 2018 ; See et al , 2017 ) . The Transformer model is based on encoder / decoder architecture . In context to summarize , it takes text as input and provides its summary . We use synthetic data as shown in Figure 1 to increase the size of the training data . Figure 1 : Generation of synthetic data using a reverse system . To generate synthetic data , first , a system in the reverse direction ( i.e. source as summary and target as text ) is trained and then used to generate text for the given summary . Then both the real and synthetic data acts as input to the final system .
We use German wiki data ( spread across different domain ) collected from the SwissText 2019 2 ( real data ) and Common Crawl 3 data ( synthetic data ) in our experiment . The statistics of all the datasets are shown in Table 1 .
We divide the 100 K SwissText dataset ( downloaded from SwissText 2019 website ) into three subsets : train , dev , and test in 90:5:5 ratio ( i. the test data ) . The experiments performed over these datasets are described in Section 4.3 ( denoted as S1 experimental setup ) .
The data crawled from the Internet ( Common Crawl ) used to prepare synthetic data to boost the training . The steps followed to create the synthetic dataset as follows : Step 1 : Build vocab : We create vocabulary using SwissText based on the occurrence of the most frequent ( top N ) German words . Step 2 : Sentence selection : The sentences from the Common Crawl data are selected with respect to the vocabulary based on the threshold we provide ( e.g. a sentence has 10 words and the threshold is 10 % ( 0.1 ) ) . For a sentence to be selected , at least 1 out of 10 words should be in the vocabulary . Step 3 : Filtering : Select random sentences ( e.g. 100 K ) from the selected Common Crawl data in the previous step . Step 4 : Generate summary : The 100 K data obtained from the previous step are used as a summary and required to generate corresponding text . We use the reverse trained model where we provide the summary as source and target as text . This results in the text as well as the corresponding summary as additional data to be utilized along with real data ( SwissText ) . Eventually , the 190 K dataset is created ( denote as Train RealSynth ) as a combination of 90 K SwissText train data ( real ) and 100 K synthetic data . This dataset is used in the experimental setup S2 ( described in details in Section 4.3 ) .
This section describes our experiments conducted for the text summarization task .
The preprocess step involves preprocessing the dataset such that source and target are aligned and use the same dictionary . Additionally , we truncate the source length at 400 tokens and the target length at 100 tokens to expedite training ( See et al , 2017 ) .
The Transformer model is implemented in OpenNMT - py . To train the model , we use a single GPU . To fit the model to the GPU cluster , a batch size equal to 4 , 096 is selected for training . The validation batch size is set to 8 . We use an initial learning rate of 2 , drop out of 0.2 and 8 , 000 warm - up steps . Decoding uses a beam size of 10 and we did not set any minimum length of output summary .
We use 3 settings : ( i ) real data ( we set this as the baseline in our experiment ) , ( ii ) real data and synthetic data , and ( iii ) real and regenerated synthetic data for the summarization task , described as follows : 1 . S1 : Transformer model using Train Real data In this setup , we use the " Train Real " data for training the Transformer model .
In this setup , we use the " Train RealSynth " data for training the Transformer model . As the balance between real and synthetic data is an important factor , we maintain a 1:1 ratio ( e.g. 1 ( real ) :1 ( synthetic ) ) for our experiment ( Sennrich et al , 2016 ) .
Transformer Model using Train RealSynthRegen data We propose an iterative approach to improve the quality of synthetic summaries . In this setup , after training a system with ( real+synthetic ) data , it is used to regenerate synthetic data for the final system . As a result , the input data to the final system is a combination of real and regenerated synthetic data as shown in Figure 2 .
The copying mechanism is applied during training . It allows the summarizer to fall back and copy the source text when encounters < unk > tokens by referencing to the softmax of the multiplication between attention scores of the output with the attention scores of the source ( See et al , 2017 ) . The systems are trained for 300 K iterations .
We evaluate the results for every 10 , 000 iterations on the dev and test set . The automatic evaluation results based on the dev and test set are shown in Table 2 with sample summaries in Table 3 . To evaluate the proposed algorithms , we use ROUGE ( Recall - Oriented Understudy for Gisting Evaluation ) score , which is a popular metric for text summarization task , and has several variants like ROUGE - N , and ROUGE - L , which measure the overlap of n - grams between the system and reference summary ( LIN , 2004 ) . We use ROUGE 1 F1 ( R1 F1 ) , ROUGE 2 F1 ( R2 F1 ) , and ROUGE L F1 ( RL F1 ) for scoring the generated summary . In addition , we also use the SacreBLEU 4 evaluation metric ( Post , 2018 ) . Figure 3 presents the learning curves for the models ( S1 and S2 ) on the development set . It can be seen that there is a variance ( e.g. word selection , summary length ) for model S2 generated summary as compared with model S1 . During manual verification , we found that the summaries generated without a minimum length constraint appear better compared to summaries with minimum length constraint . Although we do not explicitly specify a minimum length parameter for generating summaries for the models , the average length of words generated by model S2 ( e.g. 41.42 words ) is longer than the model S1 ( e.g. 39.81 words ) . Some data ( e.g. name , year ) were found inconsistent during a comparison of the generated summary with respect to the reference . There is a variance in summaries generated by model S3 as compared to S2 and S1 . In terms of Rouge score model S3 outperforms model S1 but perform worse than model S2 ( see Table 2 ) .
In this paper , we highlighted the implementation of synthetic data for the abstract text summariza - Ref Summary : " Das Feuerschiff Relandersgrund war ein finnisches Feuerschiff , das von 1888 bis 1914 i m Schrenmeer bei Rauma positioniert war . Heute dient es als Restaurantschiff in Helsinki . " Gloss : The lightship Relandersgrund was a Finnish lightship , which was built from 1888 to 1914 Schrenmeer was positioned at Rauma . Today serves it as a restaurant ship in Helsin S1 Summary : : " Die " Rauma " . ist ein 1886 - 1888 Feuerschiff der norwegischen Reederei " Libauskij " , Das Schiff wurde in den 1930er Jahren gebaut und in den 2000er Jahren als Museumsschiff als " Gloss:"The " Rauma " . is a 1886 - 1888 Lightship of the Norwegian shipping company " Libauskij " , The ship was built in the 1930s and in the 2000s as a museum ship as S2 Summary : : " Das Feuerschiff Relandersgrund war ein Feuerschiff des das von 1888 bis 1914 i m Einsatz war . Heute dient es als Restaurantschiff in Kotka , " Gloss : The lightship Relandersgrund was on Lightship of the 1888 to 1914 was in use . Today it serves as a restaurant ship in Kotka S3 Summary : : " Das Kotka . " ist ein finnischer Museumsschiff der i m Zweiten Weltkrieg von der russischen Marine als Restaurantschiff 1 " eingesetzt wurde . I m Mittelalter war das Schiff unter dem Namen " Vuolle " 1 " fr die finnische Marine 1 " Gloss : The Kotka . " Is a Finnish one Museum ship of the World War II Russian Navy used as a restaurant ship 1 " has been . In the Middle Ages , the ship was under the name " Vuolle " 1 " for the Finnish Navy 1 tion task under low resource condition , which helps improving the text summarization system in terms of automatic evaluation metrics . As the next step , we plan to investigate : i ) synthetic summarization data , and ii ) applying transfer learning on text summarization for the multilingual low resource data set with little or no ground truth summaries ( Keneshloo et al , 2018 ) .
The work is supported by an innovation project ( under an InnoSuisse grant ) oriented to improve the automatic speech recognition and natural language understanding technologies for German . Title : " SM2 : Extracting Semantic Meaning from Spoken Material " funding application no . 29814.1 IP - ICT .
