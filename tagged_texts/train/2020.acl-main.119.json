[{"text": "Proceedings of the 58th Annual Meeting of the Association for Computational Linguistics , pages 1290\u20131301 July 5 - 10 , 2020 .", "entities": []}, {"text": "c", "entities": []}, {"text": "2020 Association for Computational Linguistics1290AMR Parsing via Graph \u001c Sequence Iterative Inference\u0003", "entities": []}, {"text": "Deng Cai", "entities": []}, {"text": "The Chinese University of Hong Kong thisisjcykcd@gmail.comWai Lam", "entities": []}, {"text": "The Chinese University of Hong Kong wlam@se.cuhk.edu.hk", "entities": []}, {"text": "Abstract We propose a new end - to - end model that treats AMR parsing as a series of dual decisions on the input sequence and the incrementally constructed graph .", "entities": [[13, 15, "TaskName", "AMR parsing"]]}, {"text": "At each time step , our model performs multiple rounds of attention , reasoning , and composition that aim to answer two critical questions : ( 1 ) which part of the input sequence to abstract ; and ( 2 ) where in the outputgraph to construct the new concept .", "entities": []}, {"text": "We show that the answers to these two questions are mutually causalities .", "entities": []}, {"text": "We design a model based on iterative inference that helps achieve better answers in both perspectives , leading to greatly improved parsing accuracy .", "entities": [[22, 23, "MetricName", "accuracy"]]}, {"text": "Our experimental results signi\ufb01cantly outperform all previously reported S MATCH scores by large margins .", "entities": []}, {"text": "Remarkably , without the help of any large - scale pre - trained language model ( e.g. , BERT ) , our model already surpasses previous state - of - the - art using BERT .", "entities": [[18, 19, "MethodName", "BERT"], [34, 35, "MethodName", "BERT"]]}, {"text": "With the help of BERT , we can push the state - of - the - art results to 80.2 % on LDC2017T10 ( AMR 2.0 ) and 75.4 % on LDC2014T12 ( AMR 1.0 ) .", "entities": [[4, 5, "MethodName", "BERT"], [22, 23, "DatasetName", "LDC2017T10"]]}, {"text": "1 Introduction Abstract Meaning Representation ( AMR ) ( Banarescu et al . , 2013 ) is a broad - coverage semantic formalism that encodes the meaning of a sentence as a rooted , directed , and labeled graph , where nodes represent concepts and edges represent relations ( See an example in Figure 1 ) .", "entities": []}, {"text": "AMR parsing is the task of transforming natural language text into AMR .", "entities": [[0, 2, "TaskName", "AMR parsing"]]}, {"text": "One biggest challenge of AMR parsing is the lack of explicit alignments between nodes ( concepts ) in the graph and words in the text .", "entities": [[4, 6, "TaskName", "AMR parsing"]]}, {"text": "This characteristic not only poses great dif\ufb01culty in concept \u0003The work described in this paper is substantially supported by grants from the Research Grant Council of the Hong Kong Special Administrative Region , China ( Project Code : 14204418 ) and the Direct Grant of the Faculty of Engineering , CUHK ( Project Code : 4055093).prediction but also brings a close tie for concept prediction and relation prediction .", "entities": [[50, 51, "DatasetName", "CUHK"]]}, {"text": "While most previous works rely on a pre - trained aligner to train a parser , some recent attempts include : modeling the alignments as latent variables ( Lyu and Titov , 2018 ) , attention - based sequenceto - sequence transduction models ( Barzdins and Gosko , 2016 ;", "entities": []}, {"text": "Konstas et al . , 2017 ; van Noord and Bos , 2017 ) , and attention - based sequence - to - graph transduction models ( Cai and Lam , 2019 ; Zhang et al . , 2019b ) .", "entities": []}, {"text": "Sequence - to - graph transduction models build a semantic graph incrementally via spanning one node at every step .", "entities": []}, {"text": "This property is appealing in terms of both computational ef\ufb01ciency and cognitive modeling since it mimics what human experts usually do , i.e. , \ufb01rst grasping the core ideas then digging into more details ( Banarescu et al . , 2013 ; Cai and Lam , 2019 ) .", "entities": []}, {"text": "Unfortunately , the parsing accuracy of existing works including recent state - of - the - arts ( Zhang et al . , 2019a , b ) remain unsatisfactory compared to human - level performance,1especially in cases where the sentences are rather long and informative , which indicates substantial room for improvement .", "entities": [[4, 5, "MetricName", "accuracy"]]}, {"text": "One possible reason for the de\ufb01ciency is the inherent defect of one - pass prediction process ; that is , the lack of the modeling capability of the interactions between concept prediction and relation prediction , which is critical to achieving fullyinformed and unambiguous decisions .", "entities": []}, {"text": "We introduce a new approach tackling AMR parsing , following the incremental sequence - tograph transduction paradigm .", "entities": [[6, 8, "TaskName", "AMR parsing"]]}, {"text": "We explicitly characterize each spanning step as the efforts for \ufb01nding which part to abstract with respect to the input sequence , and where to construct with respect to the partially constructed output graph .", "entities": []}, {"text": "Equivalently , 1The average annotator vs. inter - annotator agreement ( SMATCH ) was 0.83 for newswire and 0.79 for web text according to Banarescu et al . ( 2013 ) .", "entities": []}, {"text": "1291we treat AMR parsing as a series of dual decisions on the input sequence and the incrementally constructed graph .", "entities": [[2, 4, "TaskName", "AMR parsing"]]}, {"text": "Intuitively , the answer of what concept to abstract decides where to construct ( i.e. , the relations to existing concepts ) , while the answer of where to construct determines what concept to abstract .", "entities": []}, {"text": "Our proposed model , supported by neural networks with explicit structure for attention , reasoning , and composition , integrated with an iterative inference algorithm .", "entities": []}, {"text": "It iterates between \ufb01nding supporting text pieces and reading the partially constructed semantic graph , inferring more accurate and harmonious expansion decisions progressively .", "entities": []}, {"text": "Our model is aligner - free and can be effectively trained with limited amount of labeled data .", "entities": []}, {"text": "Experiments on two AMR benchmarks demonstrate that our parser outperforms the previous best parsers on both benchmarks .", "entities": []}, {"text": "It achieves the best - reported SMATCH scores ( F1 ): 80.2 % on LDC2017T10 and 75.4 % on LDC2014T12 , surpassing the previous state - of - the - art models by large margins .", "entities": [[9, 10, "MetricName", "F1"], [14, 15, "DatasetName", "LDC2017T10"]]}, {"text": "2 Related Work & Background On a coarse - grained level , we can categorize existing AMR parsing approaches into two main classes : Two - stage parsing ( Flanigan et al . , 2014 ; Lyu and Titov , 2018 ; Zhang et al . , 2019a ) uses a pipeline design for concept identi\ufb01cation and relation prediction , where the concept decisions precede all relation decisions ; One - stage parsing constructs a parse graph incrementally .", "entities": [[16, 18, "TaskName", "AMR parsing"]]}, {"text": "For more \ufb01ne - grained analysis , those one - stage parsing methods can be further categorized into three types : Transitionbased parsing ( Wang et al . , 2016 ;", "entities": []}, {"text": "Damonte et al . , 2017 ; Ballesteros and Al - Onaizan , 2017 ; Peng et al . , 2017 ; Guo and Lu , 2018 ; Liu et al . , 2018 ; Wang and Xue , 2017 ; Naseem et al . , 2019 ) processes a sentence from left - to - right and constructs the graph incrementally by alternately inserting a new node or building a new edge .", "entities": []}, {"text": "Seq2seq - based parsing ( Barzdins and Gosko , 2016 ; Konstas et al . , 2017 ; van Noord and Bos , 2017 ; Peng et", "entities": [[0, 1, "MethodName", "Seq2seq"]]}, {"text": "al . , 2018 ) views parsing as sequence - to - sequence transduction by some linearization of the AMR graph .", "entities": []}, {"text": "The concept and relation prediction are then treated equally with a shared vocabulary .", "entities": []}, {"text": "The third class is graph - based parsing ( Cai and Lam , 2019 ; Zhang et", "entities": []}, {"text": "al . , 2019b ) , where at each time step , a new node along with its connections to existing nodes are jointly decided , either in order ( Cai and Lam , 2019 ) or in parallel ( Zhang et al . , 2019b ) .", "entities": []}, {"text": "So far , the recipThe boy must not goThe boy must not goobligate-01boygo-02 - ARG2ARG0polarityobligate-01?go-02ARG2ARG0obligate-01go-02?ARG2polarity(a)(b)The boy must not goThe current partial ( solid ) and full ( solid + dashed ) AMR graphs for the sentence \u201c The boy must no go\u201dFigure 1 : AMR graph construction given the partially constructed graph : ( a ) one possible expansion resulting in the boy concept .", "entities": [[45, 47, "TaskName", "graph construction"]]}, {"text": "( b ) another possible expansion resulting in the -(negation ) concept .", "entities": []}, {"text": "rocal causation of relation prediction and concept prediction has not been closely - studied and wellutilized .", "entities": []}, {"text": "There are also some exceptions staying beyond the above categorization .", "entities": []}, {"text": "Peng et al .", "entities": []}, {"text": "( 2015 ) introduce a synchronous hyperedge replacement grammar solution .", "entities": []}, {"text": "Pust et", "entities": []}, {"text": "al .", "entities": []}, {"text": "( 2015 ) regard the task as a machine translation problem , while Artzi et al .", "entities": [[8, 10, "TaskName", "machine translation"]]}, {"text": "( 2015 ) adapt combinatory categorical grammar .", "entities": []}, {"text": "Groschwitz et al .", "entities": []}, {"text": "( 2018 ) ;", "entities": []}, {"text": "Lindemann et al .", "entities": []}, {"text": "( 2019 ) view AMR graphs as the structure AM algebra .", "entities": []}, {"text": "3 Motivation Our approach is inspired by the deliberation process when a human expert is deducing a semantic graph from a sentence .", "entities": []}, {"text": "The output graph starts from an empty graph and spans incrementally in a node - by - node manner .", "entities": []}, {"text": "At any time step of this process , we are distilling the information for the next expansion .", "entities": []}, {"text": "We call it expansion because the new node , as an abstract concept of some speci\ufb01c text fragments in the input sentence , is derived to complete some missing elements in the current semantic graph .", "entities": [[28, 30, "TaskName", "missing elements"]]}, {"text": "Speci\ufb01cally , given the input sentence and the current partially constructed graph , we are answering two critical questions : which part of the input sequence to abstract , and where in the output graph to construct the new concept .", "entities": []}, {"text": "For instance , Figure 1(a ) and ( b ) show two possible choices for the next expansion .", "entities": []}, {"text": "In Figure 1(a ) , the word \u201c boy \u201d is abstracted to the concept boy to complement the subject information of the event go-02 .", "entities": []}, {"text": "On the", "entities": []}, {"text": "1292 ( Current Graph ) ( Input Sequence)The boy wants the girl to believe him .", "entities": []}, {"text": "GraphEncoder SequenceEncodertext memory \u2026 Relation Solverattention xt yt \u2026 Concept SolverThe boy wants the girl to believe him .", "entities": []}, {"text": "attention xtyt+1 \u2026 initial statex0f(Gi , x0)f(Gi , x1)g(W , y1)g(W , y2)y1x1y2Gi Wgraph memoryFigure 2 : Overview of the dual graph - sequence iterative inference for AMR parsing .", "entities": [[27, 29, "TaskName", "AMR parsing"]]}, {"text": "Given the current graph Gi and input sequence", "entities": []}, {"text": "W. The inference starts with an initial concept decision x0and follows the inference chain x0!f(Gi;x0)!y1!g(W;y", "entities": []}, {"text": "1)!x1!f(Gi;x1)!y2!g(W;y 2)!\u0001\u0001\u0001 .", "entities": []}, {"text": "The details of fandgare shown in red and blue boxes , where nodes in graph and tokens in sequence are selected via attention mechanisms .", "entities": []}, {"text": "other hand , in Figure 1(b ) , a polarity attribute of the event go-2 is constructed , which is triggered by the word \u201c not \u201d in the sentence .", "entities": []}, {"text": "We note that the answer to one of the questions can help answer the other .", "entities": []}, {"text": "For instance , if we have decided to render the word \u201c not \u201d to the graph , then we will consider adding an edge labeled as polarity , and \ufb01nally determine its attachment to the existing event go-2 ( rather than an edge labeled ARG0 to the same event go-2 , though it is also present in the golden graph ) .", "entities": []}, {"text": "On the other hand , if we have decided to \ufb01nd the subject ( ARG0 relation ) of the action go-02 , we are con\ufb01dent to locate the word \u201c boy \u201d instead of function words like \u201c not \u201d or \u201c must \u201d , thus unambiguously predict the right concept boy .", "entities": []}, {"text": "Another possible circumstance is that we may make a mistake trying to ask something that is not present in the sentence ( e.g. , the destination of the go-02 action ) .", "entities": []}, {"text": "This attempt will be rejected by a review of the sentence .", "entities": []}, {"text": "The rationale is that literally we can not \ufb01nd the destination information in the sentence .", "entities": []}, {"text": "Similarly , if we mistakenly propose to abstract some parts of the sentence that are not ready for construction yet , the proposal will be rejected by another inspection on the graph since that there is nowhere to place such a new concept .", "entities": []}, {"text": "We believe the mutual causalities , as described above , are useful for action disambiguation and harmonious decision making , which eventually result in more accurate parses .", "entities": [[17, 19, "TaskName", "decision making"]]}, {"text": "We formulate AMR parsing as a series of dual graph - sequence decisions and design an iterative inference approachto tackle each of them .", "entities": [[2, 4, "TaskName", "AMR parsing"]]}, {"text": "It is sort of analogous to the cognition procedure of a person , who might \ufb01rst notice part of the important information in one side ( graph or sequence ) , then try to con\ufb01rm her decision at the other side , which could just refute her former hypothesis and propose a new one , and \ufb01nally converge to a conclusion after multiple rounds of reasoning .", "entities": []}, {"text": "4 Proposed Model 4.1 Overview Formally , the parsing model consists of a series of graph expansion procedures fG0!:::!Gi ! : : : g , starting from an empty graph G0 .", "entities": []}, {"text": "In each turn of expansion , the following iterative inference process is performed : yi t = g(Gi;xi t ) ; xi t+1 = f(W;yi t ) ; whereW;Giare the input sequence and the current semantic graph respectively .", "entities": []}, {"text": "g(\u0001);f(\u0001)seek where to construct ( edge prediction ) and what to abstract ( node prediction ) respectively , and xi t;yi tare the t - th graph hypothesis ( where to construct ) and t - th sequence hypothesis ( what to abstract ) for the i - th expansion step respectively .", "entities": []}, {"text": "For clarity , we may drop the superscript iin the following descriptions .", "entities": []}, {"text": "Figure 2 depicts an overview of the graphsequence iterative inference process .", "entities": []}, {"text": "Our model has four main components : ( 1 ) Sequence Encoder , which generates a set of text memories ( per token )", "entities": []}, {"text": "1293to provide grounding for concept alignment and abstraction ; ( 2 ) Graph Encoder , which generates a set of graph memories ( per node ) to provide grounding for relation reasoning ; ( 3 ) Concept Solver , where a previous graph hypothesis is used for concept prediction ; and ( 4 ) Graph Solver , where a previous concept hypothesis is used for relation prediction .", "entities": []}, {"text": "The last two components correspond to the reasoning functions g(\u0001)andf(\u0001)respectively .", "entities": []}, {"text": "The text memories can be computed by Sentence Encoder at the beginning of the whole parsing while the graph memories are constructed by Graph Encoder incrementally as the parsing progresses .", "entities": []}, {"text": "During the iterative inference , a semantic representation of current state is used to attend to both graph and text memories ( blue and red arrows ) in order to locate the new concept and obtain its relations to the existing graph , both of which subsequently re\ufb01ne each other .", "entities": []}, {"text": "Intuitively , after a \ufb01rst glimpse of the input sentence and the current graph , speci\ufb01c sub - areas of both sequence and graph are revisited to obtain a better understanding of the current situation .", "entities": []}, {"text": "Later steps typically read the text in detail with speci\ufb01c learning aims , either con\ufb01rming or overturning a previous hypothesis .", "entities": []}, {"text": "Finally , after several iterations of reasoning steps , the re\ufb01ned sequence / graph decisions are used for graph expansion .", "entities": []}, {"text": "4.2 Sequence Encoder As mentioned above , we employ a sequence encoder to convert the input sentence into vector representations .", "entities": []}, {"text": "The sequence encoder follows the multi - layer Transformer architecture described in Vaswani et", "entities": [[8, 9, "MethodName", "Transformer"]]}, {"text": "al . ( 2017 ) .", "entities": []}, {"text": "At the bottom layer , each token is \ufb01rstly transformed into the concatenation of features learned by a character - level convolutional neural network ( charCNN , Kim et", "entities": []}, {"text": "al . , 2016 ) and randomly initialized embeddings for its lemma , part - of - speech tag , and named entity tag .", "entities": [[11, 12, "DatasetName", "lemma"], [13, 16, "DatasetName", "part - of"]]}, {"text": "Additionally , we also include features learned by pre - trained language model BERT ( Devlin et al . , 2019).2", "entities": [[13, 14, "MethodName", "BERT"]]}, {"text": "Formally , for an input sequence w1;w2;:::;w n with lengthn , we insert a special token BOS at the beginning of the sequence .", "entities": []}, {"text": "For clarity , we omit the detailed transformations ( Vaswani et al . , 2017 ) and denote the \ufb01nal output from our sequence encoder asfh0;h1;:::;h ng2Rd , whereh0corresponds the special token BOS and serves as an overall rep2We obtain word - level representations from pre - trained BERT in the same way as Zhang et al .", "entities": [[48, 49, "MethodName", "BERT"]]}, {"text": "( 2019a , b ) , where subtoken representations at the last layer are averaged.resentation while others are considered as contextualized word representations .", "entities": []}, {"text": "Note that the sequence encoder only needs to be invoked once , and the produced text memories are used for the whole parsing procedure .", "entities": []}, {"text": "4.3 Graph Encoder We use a similar idea in Cai and Lam ( 2019 ) to encode the incrementally expanding graph .", "entities": []}, {"text": "Specifically , a graph is simply treated as a sequence of nodes ( concepts ) in the chronological order of when they are inserted into the graph .", "entities": []}, {"text": "We employ multi - layer Transformer architecture with masked self - attention and source - attention , which only allows each position in the node sequence to attend to all positions up to and including that position , and every position in the node sequence to attend over all positions in the input sequence.3While this design allows for signi\ufb01cantly more parallelization during training and computation - saving incrementality during testing,4it inherently neglects the edge information .", "entities": [[5, 6, "MethodName", "Transformer"]]}, {"text": "We attempted to alleviate this problem by incorporating the idea of Strubell et al .", "entities": []}, {"text": "( 2018 ) that applies auxiliary supervision at attention heads to encourage them to attend to each node \u2019s parents in the AMR graph .", "entities": []}, {"text": "However , we did not see performance improvement .", "entities": []}, {"text": "We attribute the failure to the fact that the neural attention mechanisms on their own are already capable of learning to attend to useful graph elements , and the auxiliary supervision is likely to disturb the ultimate parsing goal .", "entities": []}, {"text": "Consequently , for the current graph Gwith mnodes , we take its output concept sequence c1;c2;:::;c mas input .", "entities": []}, {"text": "Similar to the sequence encoder , we insert a special token BOG at the beginning of the concept sequence .", "entities": []}, {"text": "Each concept is \ufb01rstly transformed into the concatenation of feature vector learned by a char - CNN and randomly initialized embedding .", "entities": []}, {"text": "Then , a multi - layer Transformer encoder with masked self - attention and sourceattention is applied , resulting in vector representationsfs0;s1;:::;s mg2Rd , wheres0represents the special concept BOG and serves as a dummy node while others are considered as contextualized node representations .", "entities": [[6, 7, "MethodName", "Transformer"]]}, {"text": "3It is analogous to a standard Transformer decoder ( Vaswani et al . , 2017 ) for sequence - to - sequence learning .", "entities": [[6, 8, "MethodName", "Transformer decoder"]]}, {"text": "4Trivially employing a graph neural network here can be computationally expensive and intractable since it needs to re - compute all graph representations after every expansion .", "entities": []}, {"text": "12944.4 Concept Solver At each sequence reasoning step t , the concept solver receives a state vector ytthat carries the latest graph decision and the input sequence memoriesh1;:::;h nfrom the sequence encoder , and aims to locate the proper parts in the input sequence to abstract and generate a new concept .", "entities": []}, {"text": "We employ the scaled dot - product attention proposed in Vaswani et", "entities": [[3, 8, "MethodName", "scaled dot - product attention"]]}, {"text": "al .", "entities": []}, {"text": "( 2017 ) to solve this problem .", "entities": []}, {"text": "Concretely , we \ufb01rst calculate an attention distribution over all input tokens : \u000b t = softmax ( ( WQyt)TWKh1 : npdk ) ; wherefWQ;WKg2Rdk\u0002ddenote learnable linear projections that transform the input vectors into the query and key subspace respectively , and dk represents the dimensionality of the subspace .", "entities": [[16, 17, "MethodName", "softmax"]]}, {"text": "The attention weights \u000b t2Rnprovide a soft alignment between the new concept and the tokens in the input sequence .", "entities": []}, {"text": "We then compute the probability distribution of the new concept label through a hybrid of three channels .", "entities": []}, {"text": "First , \u000b tis fed through an MLP and softmax to obtain a probability distribution over a pre - de\ufb01ned vocabulary : MLP ( \u000b t ) = ( WVh1 : n ) \u000b t+yt ( 1 ) P(vocab)=softmax", "entities": [[7, 8, "DatasetName", "MLP"], [9, 10, "MethodName", "softmax"], [22, 23, "DatasetName", "MLP"]]}, {"text": "( W(vocab)MLP ( \u000b t ) + b(vocab ) ) ; whereWV2Rd\u0002ddenotes the learnable linear projection that transforms the text memories into the value subspace , and the value vectors are averaged according to \u000b tfor concept label prediction .", "entities": []}, {"text": "Second , the attention weights \u000b tdirectly serve as a copy mechanism ( Gu et al . , 2016 ; See et al . , 2017 ) , i , e. , the probabilities of copying a token lemma from the input text as a node label .", "entities": [[38, 39, "DatasetName", "lemma"]]}, {"text": "Third , to address the attribute values such as person names or numerical strings , we also use \u000b tfor another copy mechanism that directly copies the original strings of input tokens .", "entities": []}, {"text": "The above three channels are combined via a soft switch to control the production of the concept label from different sources :", "entities": []}, {"text": "[ p0;p1;p2 ] = softmax ( W(switch)MLP ( \u000b t ) ) ; where MLP is the same as in Eq . 1 , and p0;p1and p2are the probabilities of three prediction channels respectively .", "entities": [[4, 5, "MethodName", "softmax"], [14, 15, "DatasetName", "MLP"]]}, {"text": "Hence , the \ufb01nal prediction probabilityof a concept cis given by : P(c ) = p0\u0001P(vocab)(c ) + p1\u0001(X i2L(c ) \u000b t[i ] )", "entities": []}, {"text": "+ p2\u0001(X i2T(c ) \u000b t[i ] ) ; where [ i]indexes the i - th element and L(c)and T(c)are index sets of lemmas and tokens respectively that have the surface form as c. 4.5 Relation Solver At each graph reasoning step t , the relation solver receives a state vector xtthat carries the latest concept decision and the output graph memories s0;s1;:::;s mfrom the graph encoder , and aims to point out the nodes in the current graph that have an immediate relation to the new concept ( source nodes ) and generate corresponding edges .", "entities": []}, {"text": "Similar to Cai and Lam ( 2019 ) ; Zhang et al . ( 2019b ) , we factorize the task as two stages : First , a relation identi\ufb01cation module points to some preceding nodes as source nodes ; Then , the relation classi\ufb01cation module predicts the relation type between the new concept and predicted source nodes .", "entities": []}, {"text": "We leave the latter to be determined after iterative inference .", "entities": []}, {"text": "AMR is a rooted , directed , and acyclic graph .", "entities": []}, {"text": "The reason for AMR being a graph instead of a tree is that it allows reentrancies where a concept participates in multiple semantic relations with different semantic roles .", "entities": []}, {"text": "Following Cai and Lam ( 2019 ) , we use multi - head attention for a more compact parsing procedure where multiple source nodes are simultaneously determined.5Formally , our relation identi\ufb01cation module employs Hdifferent attention heads , for each head h , we calculate an attention distribution over all existing node ( including the dummy node s0 ): \f h t = softmax ( ( WQ hxt)TWK hs0 : mpdk ): Then , we take the maximum over different heads as the \ufb01nal edge probabilities : \f t[i ]", "entities": [[10, 14, "MethodName", "multi - head attention"], [62, 63, "MethodName", "softmax"]]}, {"text": "= Hmax h=1 \f h t[i ] : Therefore , different heads may points to different nodes at the same time .", "entities": []}, {"text": "Intuitively , each head represents a distinct relation detector for a particular 5This is different to Zhang", "entities": []}, {"text": "et al .", "entities": []}, {"text": "( 2019b ) where an AMR graph is converted into a tree by duplicating nodes that have reentrant relations .", "entities": []}, {"text": "1295 0.050.70.10.80.80.10.00.050.050.10.20.10.10.10.70.050.80.80.20.7maxs0s1s2s3h1h2h3h4c1c3new conceptpredictc2\u03b2Figure 3 : Multi - head attention for relation identi\ufb01cation .", "entities": [[5, 9, "MethodName", "Multi - head attention"]]}, {"text": "At left is the attention matrix , where each column corresponds to a unique attention head , and each row corresponds to an existing node .", "entities": []}, {"text": "set of relation types .", "entities": []}, {"text": "For each attention head , it will point to a source node if certain relations exist between the new node and the existing graph , otherwise it will point to the dummy node .", "entities": []}, {"text": "An example with four attention heads and three existing nodes ( excluding the dummy node ) is illustrated in Figure 3 . 4.6 Iterative Inference As described above , the concept solver and the relation solver are conceptually two attention mechanisms over the sequence and graph respectively , addressing the concept prediction and relation prediction separately .", "entities": []}, {"text": "The key is to pass the decisions between the solvers so that they can examine each other \u2019s answer and make harmonious decisions .", "entities": []}, {"text": "Speci\ufb01cally , at each spanning step i , we start the iterative inference by setting x0 = h0and solving f(Gi;x0 ) .", "entities": []}, {"text": "After thet - th graph reasoning , we compute the state vector yt , which will be handed over to the concept solver as g(W;y t ) , as : yt = FFN(y)(xt+ ( WVh1 : n ) \u000b t ) ; where FFN(y)is a feed - forward network and WV projects text memories into a value space .", "entities": []}, {"text": "Similarly , after the t - th sequence reasoning , we update the state vector from yttoxt+1as : xt+1 = FFN(x)(yt+HX h=1(WV hs0 : n ) \f h t ) ; where FFN(x)is a feed - forward network and WV h projects graph memories into a value space for each headh .", "entities": []}, {"text": "AfterNsteps of iterative inference , i , e. , x0!f(Gi;x0)!y1!g(W;y 1)!x1!\u0001\u0001\u0001 ! f(Gi;xN\u00001)!yN!g(W;y", "entities": []}, {"text": "N)!xN ; we \ufb01nally employ a deep biaf\ufb01ne classi\ufb01er ( Dozat and Manning , 2016 ) for edge label prediction .", "entities": []}, {"text": "TheAlgorithm 1 AMR Parsing via Graph \u001c Sequence Iterative Inference Input : the input sentence W= ( w1;w2;:::;w n ) Output : the corresponding AMR graph G // compute text memories 1 : h0;h1;:::;h n = SequenceEncoder ( ( BOS , w1;:::;w n ) ) // initialize graph 2 : G0= ( nodes = fBOGg;edges = ;) // start graph expansions 3 : i=", "entities": [[2, 4, "TaskName", "AMR Parsing"]]}, {"text": "0 4 : while True do 5 : s0;:::;s i= GraphEncoder ( Gi ) //", "entities": [[0, 1, "DatasetName", "0"]]}, {"text": "the graph memories can be computed * incrementally * 6 : x0 = h0 // iterative inference 7 : fort 1toNdo 8 : yt = f(Gi;xt\u00001)// Seq.!Graph 9 : xt = g(W;y t)// Graph!Seq .", "entities": []}, {"text": "10 : end for 11 : ifconcept prediction is EOG then 12 : break 13 : end if 14 : updateGi+1based onGi , xNandyN 15 : i = i+ 1 16 : end while 17 : returnGi classi\ufb01er uses a biaf\ufb01ne function to score each label , given the \ufb01nal concept representation xNand the node vector s1 : mas input .", "entities": []}, {"text": "The resulted concept , edge , and edge label predictions will added to the new graphGi+1if the concept prediction is not EOG , a special concept that we add for indicating termination .", "entities": []}, {"text": "Otherwise , the whole parsing process is terminated and the current graph is returned as \ufb01nal result .", "entities": []}, {"text": "The complete parsing process adopting the iterative inference is described in Algorithm 1 . 5 Training & Prediction Our model is trained with the standard maximum likelihood estimate .", "entities": []}, {"text": "The optimization objective is to maximize the sum of the decomposed step - wise log - likelihood , where each is the sum of concept , edge , and edge label probabilities .", "entities": [[14, 17, "MetricName", "log - likelihood"]]}, {"text": "To facilitate training , we create a reference generation order of nodes by running a breadth-\ufb01rst - traversal over target AMR graphs , as it is cognitively appealing ( core - semantic-\ufb01rst principle , Cai and Lam , 2019 ) and the effectiveness of pre - order traversal is also", "entities": []}, {"text": "1296empirically veri\ufb01ed by Zhang et al . ( 2019a ) in a depth-\ufb01rst setting .", "entities": []}, {"text": "For the generation order for sibling nodes , we adopt the uniformly random order and the deterministic order sorted by the relation frequency in a 1 : 1 ratio at \ufb01rst then change to the deterministic order only in the \ufb01nal training steps .", "entities": []}, {"text": "We empirically \ufb01nd that the deterministic - afterrandom strategy slightly improves performance .", "entities": []}, {"text": "During testing , our model searches for the best output graph through beam search based on the log - likelihood at each spanning step .", "entities": [[17, 20, "MetricName", "log - likelihood"]]}, {"text": "The time complexity of our model is O(kjVj ) , wherekis the beam size , and jVjis the number of nodes .", "entities": []}, {"text": "6 Experiments 6.1 Experimental Setup Datasets Our evaluation is conducted on two AMR public releases : AMR 2.0 ( LDC0217T10 ) and AMR 1.0 ( LDC2014T12 ) .", "entities": []}, {"text": "AMR 2.0 is the latest and largest AMR sembank that was extensively used in recent works .", "entities": []}, {"text": "AMR 1.0 shares the same development and test set with AMR , while the size of its training set is only about one - third of AMR 2.0 , making it a good testbed to evaluate our model \u2019s sensitivity for data size.6 Implementation Details We use Stanford CoreNLP ( Manning et al . , 2014 ) for tokenization , lemmatization , part - of - speech , and named entity tagging .", "entities": [[60, 61, "TaskName", "lemmatization"], [62, 65, "DatasetName", "part - of"]]}, {"text": "The hyper - parameters of our models are chosen on the development set of AMR 2.0 .", "entities": []}, {"text": "Without explicit speci\ufb01cation , we perform N= 4 steps of iterative inference .", "entities": []}, {"text": "Other hyper - parameter settings can be found in the Appendix .", "entities": []}, {"text": "Our models are trained using ADAM ( Kingma and Ba , 2014 ) for up to 60 K steps ( \ufb01rst 50 K with the random sibling order and last 10 K with deterministic order ) , with early stopping based on development set performance .", "entities": [[5, 6, "DatasetName", "ADAM"], [38, 40, "MethodName", "early stopping"]]}, {"text": "We \ufb01x BERT parameters similar to Zhang et al .", "entities": [[2, 3, "MethodName", "BERT"]]}, {"text": "( 2019a , b ) due to the GPU memory limit .", "entities": []}, {"text": "During testing , we use a beam size of 8 for the highest - scored graph approximation.7 AMR Pre- and Post - processing We remove senses as done in Lyu and Titov ( 2018 ) ; Zhang et al .", "entities": []}, {"text": "( 2019a , b ) and simply assign the most frequent sense for nodes in post - processing .", "entities": []}, {"text": "Notably , 6There are a few annotation revisions from AMR 1.0 to AMR 2.0 .", "entities": []}, {"text": "7Our code is released at https://github.com/ jcyk / AMR - gs .most existing methods including the state - the - ofart parsers ( Zhang et al . , 2019a , b ; Lyu and Titov , 2018 ; Guo and Lu , 2018 , inter alia ) often rely on heavy graph re - categorization for reducing the complexity and sparsity of the original AMR graphs .", "entities": []}, {"text": "For graph re - categorization , speci\ufb01c subgraphs of AMR are grouped together and assigned to a single node with a new compound category , which usually involves non - trivial expert - level manual efforts for hand - crafting rules .", "entities": []}, {"text": "We follow the exactly same pre- and post - processing steps of those of Zhang et al .", "entities": []}, {"text": "( 2019a , b ) for graph re - categorization .", "entities": []}, {"text": "More details can be found in the Appendix .", "entities": []}, {"text": "Ablated Models As pointed out by Cai and Lam ( 2019 ) , the precise set of graph re - categorization rules differs among different works , making it dif\ufb01cult to distinguish the performance improvement from model optimization and carefully designed rules .", "entities": []}, {"text": "In addition , only recent works ( Zhang et al . , 2019a , b ; Lindemann et al . , 2019 ; Naseem et al . , 2019 ) have started to utilize the large - scale pretrained language model , BERT ( Devlin et al . , 2019 ; Wolf et al . , 2019 ) .", "entities": [[42, 43, "MethodName", "BERT"]]}, {"text": "Therefore , we also include ablated models for addressing two questions : ( 1 ) How dependent is our model on performance from handcrafted graph re - categorization rules ?", "entities": []}, {"text": "( 2 ) How much does BERT help ?", "entities": [[6, 7, "MethodName", "BERT"]]}, {"text": "We accordingly implement three ablated models by removing either one of them or removing both .", "entities": []}, {"text": "The ablation study not only reveals the individual effect of two model components but also helps facilitate fair comparisons with prior works .", "entities": []}, {"text": "6.2 Experimental Results Main Results The performance of AMR parsing is conventionally evaluated by SMATCH ( F1 ) metric ( Cai and Knight , 2013 ) .", "entities": [[8, 10, "TaskName", "AMR parsing"], [16, 17, "MetricName", "F1"]]}, {"text": "The left block of Table 1 shows the SMATCH scores on the AMR 2.0 test set of our models against the previous best approaches and recent competitors .", "entities": []}, {"text": "On AMR 2.0 , we outperform the latest push from Zhang et al .", "entities": []}, {"text": "( 2019b ) by 3.2 % and , for the \ufb01rst time , obtain a parser with over 80 % SMATCH score .", "entities": []}, {"text": "Note that even without BERT , our model still outperforms the previous state - of - the - art approaches using BERT ( Zhang et al . , 2019b , a ) with 77.3 % .", "entities": [[4, 5, "MethodName", "BERT"], [21, 22, "MethodName", "BERT"]]}, {"text": "This is particularly remarkable since running BERT is computationally expensive .", "entities": [[6, 7, "MethodName", "BERT"]]}, {"text": "As shown in Table 2 , on AMR 1.0 where the training instances are only around 10 K , we improve the best - reported results by 4.1 % and reach at 75.4 % , which is already higher than", "entities": []}, {"text": "1297Model G. R. BERT SMATCH\ufb01ne - grained evaluation Unlabeled No WSD Concept SRL Reent .", "entities": [[3, 4, "MethodName", "BERT"]]}, {"text": "Neg .", "entities": []}, {"text": "NER Wiki van Noord and Bos ( 2017 ) \u00d7 \u00d7 71.0 74 72 82 66 52 62 79 65 Groschwitz et al .", "entities": [[0, 1, "TaskName", "NER"]]}, {"text": "( 2018 ) X \u00d7 71.0 74 72 84 64 49 57 78 71 Lyu and Titov ( 2018 ) X \u00d7 74.4 77.1 75.5 85.9 69.8 52.3 58.4 86.0 75.7", "entities": []}, {"text": "Cai and Lam ( 2019 ) \u00d7 \u00d7 73.2 77.0 74.2 84.4 66.7 55.3 62.9 82.0 73.2 Lindemann", "entities": []}, {"text": "et", "entities": []}, {"text": "al .", "entities": []}, {"text": "( 2019 ) XX 75.3 - - - - - - - Naseem et", "entities": []}, {"text": "al .", "entities": []}, {"text": "( 2019 ) XX 75.5 80 76 86 72 56 67 83 80 Zhang et al .", "entities": []}, {"text": "( 2019a ) X \u00d7 74.6 - - - - - - - Zhang et al .", "entities": []}, {"text": "( 2019a )", "entities": []}, {"text": "XX 76.3 79.0 76.8 84.8 69.7 60.0 75.2 77.9 85.8 Zhang et al .", "entities": []}, {"text": "( 2019b ) XX 77.0 80 78 86 71 61 77 79 86 Ours\u00d7 \u00d7 74.5 77.8 75.1 85.9 68.5 57.7 65.0 82.9 81.1 X \u00d7 77.3 80.1 77.9 86.4 69.4 58.5 75.6 78.4 86.1 \u00d7X 78.7 81.5 79.2 88.1 74.5 63.8 66.1 87.1 81.3 XX 80.2 82.8 80.8 88.1 74.2 64.6 78.9 81.1 86.3 Table 1 : S MATCH scores ( % ) ( left ) and \ufb01ne - grained evaluations ( % ) ( right ) on the test set of AMR 2.0 .", "entities": []}, {"text": "G. R./BERT indicates whether or not the results use Graph Re - categorization / BERT respectively .", "entities": [[14, 15, "MethodName", "BERT"]]}, {"text": "Model G. R. BERT SMATCH Flanigan", "entities": [[3, 4, "MethodName", "BERT"]]}, {"text": "et al .", "entities": []}, {"text": "( 2016 ) \u00d7 \u00d7 66.0 Pust et al .", "entities": []}, {"text": "( 2015 ) \u00d7 \u00d7 67.1 Wang and Xue ( 2017 ) X \u00d7 68.1 Guo and Lu ( 2018 ) X \u00d7 68.3 Zhang et al .", "entities": []}, {"text": "( 2019a ) XX 70.2 Zhang et al .", "entities": []}, {"text": "( 2019b ) XX 71.3 Ours\u00d7 \u00d7 68.8 X \u00d7 71.2 \u00d7X 74.0 XX 75.4 Table 2 : S MATCH scores on the test set of AMR 1.0 .", "entities": []}, {"text": "most models trained on AMR 2.0 .", "entities": []}, {"text": "The even more substantial performance gain on the smaller dataset suggests that our method is both effective and dataef\ufb01cient .", "entities": []}, {"text": "Besides , again , our model without BERT already surpasses previous state - of - the - art results using BERT .", "entities": [[7, 8, "MethodName", "BERT"], [20, 21, "MethodName", "BERT"]]}, {"text": "For ablated models , it can be observed that our models yield the best results in all settings if there are any competitors , indicating BERT and graph re - categorization are not the exclusive key for our superior performance .", "entities": [[25, 26, "MethodName", "BERT"]]}, {"text": "Fine - grained Results", "entities": []}, {"text": "In order to investigate how our parser performs on individual sub - tasks , we also use the \ufb01ne - grained evaluation tool ( Damonte et al . , 2017 ) and compare to systems which reported these scores.8As shown in the right block of Table 1 , our best model obtains the highest scores on almost all sub - tasks .", "entities": []}, {"text": "The improvements in all sub - tasks are consistent and uniform ( around 2%\u00183 % ) compared to the previous state - of - the - art performance ( Zhang et al . , 2019b ) , partly con\ufb01rming that our model boosts performance via consolidated and harmonious decisions rather than \ufb01xing particular phenomena .", "entities": []}, {"text": "By our ablation study , 8We only list the results on AMR 2.0 since there are few results on AMR 1.0 to compare .", "entities": []}, {"text": "Smatch ( % ) 55.062.570.077.585.0 Number of Inference Steps123456 All ( 0 , 15 ] ( 15 , 30 ] ( 30,\u221e)Figure 4 : S MATCH scores with different numbers of inference steps .", "entities": [[11, 12, "DatasetName", "0"]]}, {"text": "Sentences are grouped by length .", "entities": []}, {"text": "it is worth noting that the NER scores are much lower when using graph re - categorization .", "entities": [[6, 7, "TaskName", "NER"]]}, {"text": "This is because the rule - based system for NER in graph recategorization does not generalize well to unseen entities , which suggest a potential improvement by adapting better NER taggers .", "entities": [[9, 10, "TaskName", "NER"], [29, 30, "TaskName", "NER"]]}, {"text": "6.3 More Analysis Effect of Iterative Inference", "entities": []}, {"text": "We then turn to study the effect of our key idea , namely , the iterative inference design .", "entities": []}, {"text": "To this end , we run a set of experiments with different values of the number of the inference steps", "entities": []}, {"text": "N.", "entities": []}, {"text": "The results on AMR 2.0 are shown in Figure 4 ( solid line ) .", "entities": []}, {"text": "As seen , the performance generally goes up when the number of inference steps increases .", "entities": []}, {"text": "The difference is most noticeable between 1 ( no iterative reasoning is performed ) and 2 , while later improvements gradually diminish .", "entities": []}, {"text": "One important point here is that the model size in terms of the number of parameters is constant regardless of the number of inference steps , making it different from general over - parameterized problems .", "entities": [[13, 16, "HyperparameterName", "number of parameters"]]}, {"text": "1298 youpity-01pity-01youpity-01pity-01youpity-01pity-01pity-01pity-01youpity-01pity-01oryouIPredicted Expansionlittle Golden AMR - pity-01pity-01oryouIorororor\u03b21\u03b22\u03b23\u03b24 \u03b11\u03b12\u03b13\u03b14ccccccccccccccccccccccccccccccccccccI have little or no   pity for you .I have little or no   pity for you .I", "entities": []}, {"text": "have little or no   pity for you .I have little or no   pity for you .", "entities": []}, {"text": "1.00.50.0 Figure 5 : Case study ( viewed in color ) .", "entities": []}, {"text": "Color shading intensity represents the value of the attention score .", "entities": []}, {"text": "For a closer study on the effect of the inference steps with respect to the lengths of input sentences , we group sentences into three classes by length and also show the individual results in Figure 4 ( dashed lines ) .", "entities": []}, {"text": "As seen , the iterative inference helps more for longer sentences , which con\ufb01rms our intuition that longer and more complex input needs more reasoning .", "entities": []}, {"text": "Another interesting observation is that the performance on shorter sentences reaches the peaks earlier .", "entities": []}, {"text": "This observation suggests that the number of inference steps can be adjusted according to the input sentence , which we leave as future work .", "entities": []}, {"text": "Effect of Beam Size We are also interested in the effect of beam size during testing .", "entities": []}, {"text": "Ideally , if a model is able to make accurate predictions in the \ufb01rst place , it should rely less on the search algorithm .", "entities": []}, {"text": "We vary the beam size and plot the curve in Figure 6 .", "entities": []}, {"text": "The results show that the performance generally gets better with larger beam sizes .", "entities": []}, {"text": "However , a small beam size of 2 already gets the most of the credits , which suggests that our model is robust enough for time - stressing environments .", "entities": []}, {"text": "Visualization We visualize the iterative reasoning process with a case study in Figure 5 .", "entities": []}, {"text": "We illustrate the values of \u000b t ; \f tas the iterative inference progresses .", "entities": []}, {"text": "As seen , the parser makes mistakes in the \ufb01rst step , but gradually corrects its decisions and \ufb01nally makes the right predictions .", "entities": []}, {"text": "Later reasoning steps typically provide a sharper attention distribution than earlier steps , narrowing down the most likely answer with more con\ufb01dence .", "entities": []}, {"text": "Speed We also report the parsing speed of our non - optimized code : With BERT , the parsing speed of our system is about 300 tokens / s , while without BERT , it is about 330 tokens / s on a single Nvidia P4 GPU .", "entities": [[15, 16, "MethodName", "BERT"], [32, 33, "MethodName", "BERT"]]}, {"text": "The absolute speed depends on various implementation choices and hardware performance .", "entities": []}, {"text": "Smatch ( % ) 77.078.079.080.081.0 Beam Size12345678 Figure 6 : S MATCH scores with different beam sizes .", "entities": []}, {"text": "In theory , the time complexity of our parsing algorithm isO(kbn ) , wherekis the number of iterative steps , bis beam size , and nis the graph size ( number of nodes ) respectively .", "entities": []}, {"text": "It is important to note that our algorithm is linear in the graph size .", "entities": []}, {"text": "7 Conclusion We presented the dual graph - sequence iterative inference method for AMR Parsing .", "entities": [[13, 15, "TaskName", "AMR Parsing"]]}, {"text": "Our method constructs an AMR graph incrementally in a nodeby - node fashion .", "entities": []}, {"text": "Each spanning step is explicitly characterized as answering two questions : which parts of the sequence to abstract , and where in the graph to construct .", "entities": []}, {"text": "We leverage the mutual causalities between the two and design an iterative inference algorithm .", "entities": []}, {"text": "Our model signi\ufb01cantly advances the state - of - the - art results on two AMR corpora .", "entities": []}, {"text": "An interesting future work is to make the number of inference steps adaptive to input sentences .", "entities": []}, {"text": "Also , the idea proposed in this paper may be applied to a broad range of structured prediction tasks ( not only restricted to other semantic parsing tasks ) where the complex output space can be divided into two interdependent parts with a similar iterative inference process to achieve harmonious predictions and better performance .", "entities": [[16, 18, "TaskName", "structured prediction"], [25, 27, "TaskName", "semantic parsing"]]}, {"text": "1299References Yoav Artzi , Kenton Lee , and Luke Zettlemoyer .", "entities": []}, {"text": "2015 .", "entities": []}, {"text": "Broad - coverage ccg semantic parsing with amr .", "entities": [[4, 6, "TaskName", "semantic parsing"]]}, {"text": "In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing , pages 1699\u20131710 .", "entities": []}, {"text": "Miguel Ballesteros and Yaser Al - Onaizan . 2017 .", "entities": []}, {"text": "AMR parsing using stack - LSTMs .", "entities": [[0, 2, "TaskName", "AMR parsing"]]}, {"text": "In Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing , pages 1269\u20131275 .", "entities": []}, {"text": "Laura Banarescu , Claire Bonial , Shu Cai , Madalina Georgescu , Kira Grif\ufb01tt , Ulf Hermjakob , Kevin Knight , Philipp Koehn , Martha Palmer , and Nathan Schneider .", "entities": []}, {"text": "2013 .", "entities": []}, {"text": "Abstract meaning representation for sembanking .", "entities": []}, {"text": "In Proceedings of the 7th Linguistic Annotation Workshop and Interoperability with Discourse , pages 178\u2013186 .", "entities": []}, {"text": "Guntis Barzdins and Didzis Gosko .", "entities": []}, {"text": "2016 .", "entities": []}, {"text": "RIGA at SemEval-2016 task 8 : Impact of Smatch extensions and character - level neural translation on AMR parsing accuracy .", "entities": [[17, 19, "TaskName", "AMR parsing"], [19, 20, "MetricName", "accuracy"]]}, {"text": "In Proceedings of the 10th International Workshop on Semantic Evaluation ( SemEval2016 ) , pages 1143\u20131147 .", "entities": []}, {"text": "Deng Cai and Wai Lam . 2019 .", "entities": []}, {"text": "Core semantic \ufb01rst : A top - down approach for AMR parsing .", "entities": [[10, 12, "TaskName", "AMR parsing"]]}, {"text": "In Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natural Language Processing ( EMNLP - IJCNLP ) , pages 3797\u20133807 .", "entities": []}, {"text": "Shu Cai and Kevin Knight .", "entities": []}, {"text": "2013 .", "entities": []}, {"text": "Smatch : an evaluation metric for semantic feature structures .", "entities": []}, {"text": "In Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics ( Volume 2 : Short Papers ) , volume 2 , pages 748\u2013752 .", "entities": []}, {"text": "Joachim Daiber , Max Jakob , Chris Hokamp , and Pablo N Mendes .", "entities": []}, {"text": "2013 .", "entities": []}, {"text": "Improving ef\ufb01ciency and accuracy in multilingual entity extraction .", "entities": [[3, 4, "MetricName", "accuracy"]]}, {"text": "In Proceedings of the 9th International Conference on Semantic Systems , pages 121\u2013124 .", "entities": []}, {"text": "Marco Damonte , Shay B. Cohen , and Giorgio Satta . 2017 .", "entities": []}, {"text": "An incremental parser for abstract meaning representation .", "entities": []}, {"text": "In Proceedings of the 15th Conference of the European Chapter of the Association for Computational Linguistics : Volume 1 , Long Papers , pages 536\u2013546 .", "entities": []}, {"text": "Jacob Devlin , Ming - Wei Chang , Kenton Lee , and Kristina Toutanova . 2019 .", "entities": []}, {"text": "BERT : Pre - training of deep bidirectional transformers for language understanding .", "entities": [[0, 1, "MethodName", "BERT"]]}, {"text": "In Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics : Human Language Technologies , Volume 1 ( Long and Short Papers ) , pages 4171\u20134186 .", "entities": []}, {"text": "Timothy Dozat and Christopher D Manning .", "entities": []}, {"text": "2016 .", "entities": []}, {"text": "Deep biaf\ufb01ne attention for neural dependency parsing .", "entities": [[5, 7, "TaskName", "dependency parsing"]]}, {"text": "arXiv preprint arXiv:1611.01734 .Jeffrey", "entities": [[0, 1, "DatasetName", "arXiv"]]}, {"text": "Flanigan , Chris Dyer , Noah A Smith , and Jaime Carbonell . 2016 .", "entities": []}, {"text": "Cmu at semeval-2016 task 8 : Graph - based amr parsing with in\ufb01nite ramp loss .", "entities": [[9, 11, "TaskName", "amr parsing"], [14, 15, "MetricName", "loss"]]}, {"text": "In Proceedings of the 10th International Workshop on Semantic Evaluation ( SemEval-2016 ) , pages 1202 \u2013 1206 .", "entities": []}, {"text": "Jeffrey Flanigan , Sam Thomson , Jaime Carbonell , Chris Dyer , and Noah A Smith .", "entities": []}, {"text": "2014 .", "entities": []}, {"text": "A discriminative graph - based parser for the abstract meaning representation .", "entities": []}, {"text": "In Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics ( Volume 1 : Long Papers ) , volume 1 , pages 1426\u20131436 .", "entities": []}, {"text": "Jonas Groschwitz , Matthias Lindemann , Meaghan Fowlie , Mark Johnson , and Alexander Koller .", "entities": []}, {"text": "2018 .", "entities": []}, {"text": "AMR dependency parsing with a typed semantic algebra .", "entities": [[1, 3, "TaskName", "dependency parsing"]]}, {"text": "In Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics ( Volume 1 : Long Papers ) , pages 1831\u20131841 .", "entities": []}, {"text": "Jiatao Gu , Zhengdong Lu , Hang Li , and Victor O.K. Li . 2016 .", "entities": []}, {"text": "Incorporating copying mechanism in sequence - to - sequence learning .", "entities": []}, {"text": "In Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics ( Volume 1 : Long Papers ) , pages 1631\u20131640 .", "entities": []}, {"text": "Zhijiang Guo and Wei Lu .", "entities": []}, {"text": "2018 .", "entities": []}, {"text": "Better transitionbased amr parsing with re\ufb01ned search space .", "entities": [[2, 4, "TaskName", "amr parsing"]]}, {"text": "In Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing , pages 1712 \u2013 1722 .", "entities": []}, {"text": "Yoon Kim , Yacine Jernite , David Sontag , and Alexander M Rush .", "entities": []}, {"text": "2016 .", "entities": []}, {"text": "Character - aware neural language models .", "entities": []}, {"text": "In Thirtieth AAAI Conference on Arti\ufb01cial Intelligence , pages 2741\u20132749 .", "entities": []}, {"text": "Diederik P Kingma and Jimmy Ba . 2014 .", "entities": []}, {"text": "Adam : A method for stochastic optimization .", "entities": [[0, 1, "MethodName", "Adam"], [5, 7, "TaskName", "stochastic optimization"]]}, {"text": "arXiv preprint arXiv:1412.6980 .", "entities": [[0, 1, "DatasetName", "arXiv"]]}, {"text": "Ioannis Konstas , Srinivasan Iyer , Mark Yatskar , Yejin Choi , and Luke Zettlemoyer .", "entities": []}, {"text": "2017 .", "entities": []}, {"text": "Neural AMR : Sequence - to - sequence models for parsing and generation .", "entities": []}, {"text": "In Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics ( Volume 1 : Long Papers ) , pages 146\u2013157 .", "entities": []}, {"text": "Matthias Lindemann , Jonas Groschwitz , and Alexander Koller .", "entities": []}, {"text": "2019 .", "entities": []}, {"text": "Compositional semantic parsing across graphbanks .", "entities": [[1, 3, "TaskName", "semantic parsing"]]}, {"text": "In Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics , pages 4576\u20134585 .", "entities": []}, {"text": "Yijia Liu , Wanxiang Che , Bo Zheng , Bing Qin , and Ting Liu .", "entities": []}, {"text": "2018 .", "entities": []}, {"text": "An AMR aligner tuned by transition - based parser .", "entities": []}, {"text": "In Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing , pages 2422\u20132430 .", "entities": []}, {"text": "Chunchuan Lyu and Ivan Titov .", "entities": []}, {"text": "2018 .", "entities": []}, {"text": "AMR parsing as graph prediction with latent alignment .", "entities": [[0, 2, "TaskName", "AMR parsing"]]}, {"text": "In Proceedings of the 56th Annual Meeting of the Association", "entities": []}, {"text": "1300for Computational Linguistics ( Volume 1 : Long Papers ) , pages 397\u2013407 .", "entities": []}, {"text": "Christopher Manning , Mihai Surdeanu , John Bauer , Jenny Finkel , Steven Bethard , and David McClosky .", "entities": []}, {"text": "2014 .", "entities": []}, {"text": "The stanford corenlp natural language processing toolkit .", "entities": []}, {"text": "In Proceedings of 52nd annual meeting of the association for computational linguistics : system demonstrations , pages 55\u201360 .", "entities": []}, {"text": "Tahira Naseem , Abhishek Shah , Hui Wan , Radu Florian , Salim Roukos , and Miguel Ballesteros . 2019 .", "entities": []}, {"text": "Rewarding Smatch : Transition - based AMR parsing with reinforcement learning .", "entities": [[6, 8, "TaskName", "AMR parsing"]]}, {"text": "In Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics , pages 4586\u20134592 .", "entities": []}, {"text": "Rik van Noord and Johan Bos . 2017 .", "entities": []}, {"text": "Neural semantic parsing by character - based translation : Experiments with abstract meaning representations .", "entities": [[1, 3, "TaskName", "semantic parsing"]]}, {"text": "arXiv preprint arXiv:1705.09980 .", "entities": [[0, 1, "DatasetName", "arXiv"]]}, {"text": "Xiaochang Peng , Linfeng Song , and Daniel Gildea . 2015 .", "entities": []}, {"text": "A synchronous hyperedge replacement grammar based approach for amr parsing .", "entities": [[8, 10, "TaskName", "amr parsing"]]}, {"text": "In Proceedings of the Nineteenth Conference on Computational Natural Language Learning , pages 32\u201341 .", "entities": []}, {"text": "Xiaochang Peng , Linfeng Song , Daniel Gildea , and Giorgio Satta .", "entities": []}, {"text": "2018 .", "entities": []}, {"text": "Sequence - to - sequence models for cache transition systems .", "entities": []}, {"text": "In Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics ( Volume 1 : Long Papers ) , pages 1842\u20131852 .", "entities": []}, {"text": "Xiaochang Peng , Chuan Wang , Daniel Gildea , and Nianwen Xue . 2017 .", "entities": []}, {"text": "Addressing the data sparsity issue in neural AMR parsing .", "entities": [[7, 9, "TaskName", "AMR parsing"]]}, {"text": "In Proceedings of the 15th Conference of the European Chapter of the Association for Computational Linguistics : Volume 1 , Long Papers , pages 366\u2013375 .", "entities": []}, {"text": "Michael Pust , Ulf Hermjakob , Kevin Knight , Daniel Marcu , and Jonathan May . 2015 .", "entities": []}, {"text": "Parsing english into abstract meaning representation using syntaxbased machine translation .", "entities": [[8, 10, "TaskName", "machine translation"]]}, {"text": "In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing , pages 1143\u20131154 .", "entities": []}, {"text": "Abigail See , Peter J. Liu , and Christopher D. Manning .", "entities": []}, {"text": "2017 .", "entities": []}, {"text": "Get to the point : Summarization with pointergenerator networks .", "entities": [[5, 6, "TaskName", "Summarization"]]}, {"text": "In Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics ( Volume 1 : Long Papers ) , pages 1073 \u2013 1083 .", "entities": []}, {"text": "Nitish Srivastava , Geoffrey Hinton , Alex Krizhevsky , Ilya Sutskever , and Ruslan Salakhutdinov .", "entities": [[13, 14, "DatasetName", "Ruslan"]]}, {"text": "2014 .", "entities": []}, {"text": "Dropout : a simple way to prevent neural networks from over\ufb01tting .", "entities": [[0, 1, "MethodName", "Dropout"]]}, {"text": "The Journal of Machine Learning Research , 15(1):1929\u20131958 .", "entities": []}, {"text": "Emma Strubell , Patrick Verga , Daniel Andor , David Weiss , and Andrew McCallum .", "entities": []}, {"text": "2018 .", "entities": []}, {"text": "Linguistically - informed self - attention for semanticrole labeling .", "entities": []}, {"text": "In Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing , pages 5027\u20135038 .", "entities": []}, {"text": "Ashish Vaswani , Noam Shazeer , Niki Parmar , Jakob Uszkoreit , Llion Jones , Aidan N Gomez , \u0141ukasz Kaiser , and Illia Polosukhin . 2017 .", "entities": []}, {"text": "Attention is all you need .", "entities": []}, {"text": "In Advances in neural information processing systems , pages 5998\u20136008 .", "entities": []}, {"text": "Chuan Wang , Sameer Pradhan , Xiaoman Pan , Heng Ji , and Nianwen Xue . 2016 .", "entities": []}, {"text": "Camr at semeval-2016 task 8 : An extended transition - based amr parser .", "entities": []}, {"text": "In Proceedings of the 10th International Workshop on Semantic Evaluation ( SemEval-2016 ) , pages 1173 \u2013 1178 .", "entities": []}, {"text": "Chuan Wang and Nianwen Xue . 2017 .", "entities": []}, {"text": "Getting the most out of amr parsing .", "entities": [[5, 7, "TaskName", "amr parsing"]]}, {"text": "In Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing , pages 1257\u20131268 .", "entities": []}, {"text": "Thomas Wolf , Lysandre Debut , Victor Sanh , Julien Chaumond , Clement Delangue , Anthony Moi , Pierric Cistac , Tim Rault , R\u2019emi Louf , Morgan Funtowicz , and Jamie Brew .", "entities": []}, {"text": "2019 .", "entities": []}, {"text": "Huggingface \u2019s transformers : State - of - the - art natural language processing .", "entities": []}, {"text": "ArXiv , abs/1910.03771 .", "entities": [[0, 1, "DatasetName", "ArXiv"]]}, {"text": "Sheng Zhang , Xutai Ma , Kevin Duh , and Benjamin Van Durme . 2019a .", "entities": []}, {"text": "AMR parsing as sequence - tograph transduction .", "entities": [[0, 2, "TaskName", "AMR parsing"]]}, {"text": "In Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics , pages 80\u201394 .", "entities": []}, {"text": "Sheng Zhang , Xutai Ma , Kevin Duh , and Benjamin Van Durme .", "entities": []}, {"text": "2019b .", "entities": []}, {"text": "Broad - coverage semantic parsing as transduction .", "entities": [[3, 5, "TaskName", "semantic parsing"]]}, {"text": "In Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natural Language Processing ( EMNLPIJCNLP ) , pages 3784\u20133796 .", "entities": []}, {"text": "1301A Hyper - parameter Settings Table 3 lists the hyper - parameters used in our full models .", "entities": []}, {"text": "Char - level CNNs and Transformer layers in the sentence encoder and the graph encoder share the same hyper - parameter settings .", "entities": [[5, 6, "MethodName", "Transformer"]]}, {"text": "The BERT model ( Devlin et al . , 2019 ) we used is the Huggingface \u2019s implementation ( Wolf et al . , 2019 ) ( bert - base - cased ) .", "entities": [[1, 2, "MethodName", "BERT"]]}, {"text": "To mitigate over\ufb01tting , we apply dropout ( Srivastava et al . , 2014 ) with the drop rate0:2between different layers .", "entities": []}, {"text": "We randomly mask ( replacing inputs with a special UNK token ) the input lemmas , POS tags , and NER tags with a rate of 0:33 .", "entities": [[20, 21, "TaskName", "NER"]]}, {"text": "Parameter optimization is performed with the ADAM optimizer ( Kingma and Ba , 2014 ) with \f 1= 0:9and \f 2= 0:999 .", "entities": [[6, 7, "DatasetName", "ADAM"], [7, 8, "HyperparameterName", "optimizer"]]}, {"text": "The learning rate schedule is similar to that in Vaswani", "entities": [[1, 3, "HyperparameterName", "learning rate"]]}, {"text": "et", "entities": []}, {"text": "al . ( 2017 ) , with warm - up steps being set to 2K. We use early stopping on the development set for choosing the best model .", "entities": [[17, 19, "MethodName", "early stopping"]]}, {"text": "B AMR Pre- and Post - processing", "entities": []}, {"text": "We follow exactly the same pre- and postprocessing steps of those of Zhang et al .", "entities": []}, {"text": "( 2019a , b ) for graph re - categorization .", "entities": []}, {"text": "In preprocessing , we anonymize entities , remove wiki links and polarity attributes , and convert the resultant AMR graphs into a compact format by compressing certain subgraphs .", "entities": []}, {"text": "In post - processing , we recover the original AMR format from the compact format , restore Wikipedia links using the DBpedia Spotlight API ( Daiber et al . , 2013 ) , add polarity attributes based on rules observed from the training data .", "entities": [[21, 22, "DatasetName", "DBpedia"]]}, {"text": "More details can be found in Zhang et", "entities": []}, {"text": "al .", "entities": []}, {"text": "( 2019a).Embeddings lemma 300 POS tag 32 NER tag 16 concept 300 char 32 Char - level CNN # \ufb01lters 256 ngram \ufb01lter size [ 3 ] output size 128 Sentence Encoder # transformer layers 4 Graph Encoder # transformer layers 2 Transformer Layer # heads 8 hidden size 512 feed - forward hidden size 1024 Concept Solver feed - forward hidden size 1024 Relation Solver # heads 8 feed - forward hidden size 1024 Deep biaf\ufb01ne classi\ufb01er hidden size 100 Table 3 : Hyper - parameters settings .", "entities": [[2, 3, "DatasetName", "lemma"], [7, 8, "TaskName", "NER"], [42, 43, "MethodName", "Transformer"]]}]