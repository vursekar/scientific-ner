[{"text": "Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing , pages 10619\u201310629 November 7\u201311 , 2021 .", "entities": []}, {"text": "c", "entities": []}, {"text": "2021 Association for Computational Linguistics10619Block Pruning For Faster Transformers Fran\u00e7ois Lagunas , Ella Charlaix , Victor Sanh , Alexander M. Rush Hugging Face { francois , ella , victor , sasha}@huggingface.co Abstract Pre - training has improved model accuracy for both classi\ufb01cation and generation tasks at the cost of introducing much larger and slower models .", "entities": [[38, 39, "MetricName", "accuracy"]]}, {"text": "Pruning methods have proven to be an effective way of reducing model size , whereas distillation methods are proven for speeding up inference .", "entities": []}, {"text": "We introduce a block pruning approach targeting both small and fast models .", "entities": []}, {"text": "Our approach extends structured methods by considering blocks of any size and integrates this structure into the movement pruning paradigm for \ufb01ne - tuning .", "entities": [[17, 19, "MethodName", "movement pruning"]]}, {"text": "We \ufb01nd that this approach learns to prune out full components of the underlying model , such as attention heads .", "entities": []}, {"text": "Experiments consider classi\ufb01cation and generation tasks , yielding among other results a pruned model that is a 2.4x faster , 74 % smaller BERT on SQuAD v1 , with a 1 % drop on F1 , competitive both with distilled models in speed and pruned models in size .", "entities": [[23, 24, "MethodName", "BERT"], [25, 26, "DatasetName", "SQuAD"], [34, 35, "MetricName", "F1"]]}, {"text": "1 Introduction Pre - trained transformer models are the standard for NLP tasks in both classi\ufb01cation and generation tasks ( Devlin et al . , 2019 ; Lewis et al . , 2020 ) .", "entities": []}, {"text": "The recent trend is for models to continue to grow in size while yielding improved performance on standard benchmarks ( Rosset , 2020 ) .", "entities": []}, {"text": "This development highlights the need to reduce the storage size and increase the ef\ufb01ciency of pre - trained models .", "entities": []}, {"text": "Pruning methods have shown to be extremely effective at reducing the storage size of models \ufb01ne - tuned for a speci\ufb01c task .", "entities": []}, {"text": "Approaches such as magnitude pruning ( Han et al . , 2015 ) , L0 regularization ( Louizos et al . , 2018 ) , lottery ticket hypothesis ( Frankle and Carbin , 2018 ) , diff pruning ( Guo et al . , 2020 ) , and movement pruning ( Sanh et al . , 2020 ) have demonstrated remarkable reductions in model size .", "entities": [[48, 50, "MethodName", "movement pruning"]]}, {"text": "Movement pruning produces 77 % savings in parameter storage for a 1 % drop in accuracy on SQuAD v1.1 .", "entities": [[0, 2, "MethodName", "Movement pruning"], [15, 16, "MetricName", "accuracy"], [17, 18, "DatasetName", "SQuAD"]]}, {"text": "However , these models yield verylittle actual ef\ufb01ciency bene\ufb01ts , as to run them in standard hardware often requires reconstructing the original dense shape .", "entities": []}, {"text": "On the other hand distillation methods have been more effective at producing faster models as has been shown by DistilBERT ( Sanh et al . , 2019 ) , TinyBERT ( Jiao et al . , 2019 ) or MobileBERT ( Sun et al . , 2020 ) .", "entities": [[19, 20, "MethodName", "DistilBERT"], [39, 40, "MethodName", "MobileBERT"]]}, {"text": "These approaches utilize targeted distillation to produce smaller models with a dense structure that is fast on standard hardware .", "entities": []}, {"text": "However without careful engineering and size selection these models are much larger than pruned ones .", "entities": []}, {"text": "In this work , we target closing this gap through block pruning .", "entities": []}, {"text": "Unlike pruning individual parameters , this approach encourages pruning that can be optimized on dense hardware .", "entities": []}, {"text": "It is a less rigid approach than row or column - based pruning typically used in structured approaches ( McCarley , 2019 ) , which have been dif\ufb01cult to apply effectively to transformers .", "entities": []}, {"text": "We integrate this approach with Movement pruning ( Sanh et al . , 2020 ) , a simple method for pruning pre - trained models during \ufb01ne - tuning .", "entities": [[5, 7, "MethodName", "Movement pruning"]]}, {"text": "The \ufb01nal method1has few additional hyperparameters or training requirements .", "entities": []}, {"text": "Experiments consider a large variety of different benchmark datasets comparing accuracy and ef\ufb01ciency .", "entities": [[10, 11, "MetricName", "accuracy"]]}, {"text": "We \ufb01nd a surprising result that despite utilizing sub - row square blocks during training , the approach learns to eliminate full components of the model , effectively dropping a large number of attention heads .", "entities": []}, {"text": "This effect allows the model to achieve speedups even beyond standard structured pruning of feed - forward layers .", "entities": []}, {"text": "Results show a 2.4x speedup on SQuAD v1.1 with a 1 % drop of F1 , and a 2.3x speedup on QQP with a 1 % loss of F1 .", "entities": [[6, 7, "DatasetName", "SQuAD"], [14, 15, "MetricName", "F1"], [21, 22, "DatasetName", "QQP"], [26, 27, "MetricName", "loss"], [28, 29, "MetricName", "F1"]]}, {"text": "Experiments on summarization also show a 1.39x speedup for an average of 2 points drop on all ROUGE metrics on CNN / DailyMail , and for a reduction of decoder weights of 3.5x .", "entities": [[2, 3, "TaskName", "summarization"]]}, {"text": "1Available at https://github.com/ huggingface / nn_pruning", "entities": []}, {"text": "106202 Related Work There has been a growing interest in the compression of pre - trained language models .", "entities": []}, {"text": "We consider three varieties of methods : distillation , pruning , and structured pruning .", "entities": []}, {"text": "Knowledge distillation , introduced by Hinton et al . ( 2015 ) , is a popular compression technique .", "entities": [[0, 2, "MethodName", "Knowledge distillation"]]}, {"text": "Researchers have applied this method to a variety of NLP models ( Tang et al . , 2019 ; Sun et al . , 2019 ;", "entities": []}, {"text": "Turc et al . , 2019 ) .", "entities": []}, {"text": "Distillation has been used to obtain signi\ufb01cantly smaller BERT models achieving competitive performances .", "entities": [[8, 9, "MethodName", "BERT"]]}, {"text": "Sanh et al .", "entities": []}, {"text": "( 2019 ) distills BERT into shallower students during the pre - training stage and optionally during the \ufb01netuning stage .", "entities": [[4, 5, "MethodName", "BERT"]]}, {"text": "MobileBERT ( Sun et al . , 2020 ) and TinyBERT ( Jiao et al . , 2019 ) are obtained thanks to a layer - wise distillation strategy .", "entities": [[0, 1, "MethodName", "MobileBERT"]]}, {"text": "While the distillation of former is task - agnostic , the one used to obtain the latter is task - speci\ufb01c .", "entities": []}, {"text": "Other previous work has focused on unstructured pruning ( LeCun et al . , 1989 ;", "entities": []}, {"text": "Han et al . , 2015 ; Frankle and Carbin , 2018 ) .", "entities": []}, {"text": "When targeting transformer models , it is typical to select the weights to prune based on their magnitude ( Gordon et al . , 2020 ) , or by computing an importance score using a \ufb01rstorder method ( Sanh et al . , 2020 ) .", "entities": []}, {"text": "While these methods allow for a signi\ufb01cant reduction in model size , specialized hardware is required to make use of the resulting unstructured sparse matrices in order to speed up inference .", "entities": []}, {"text": "In contrast , structured pruning removes coherent groups of weights ( Murray and Chiang , 2015 ; See et al . , 2016 ; Joulin et al . , 2016 ; Fan et al . , 2020 ;", "entities": []}, {"text": "Sajjad et al . , 2020 ) .", "entities": []}, {"text": "Recent works ( Michel et al . , 2019 ; V oita et al . , 2019 ) show that some heads can be removed without signi\ufb01cant degradation in performance , leading to the conclusion that most heads provide redundant information .", "entities": []}, {"text": "Other authors have worked on combining matrix factorization and weight pruning .", "entities": []}, {"text": "While Mao et al .", "entities": []}, {"text": "( 2020 ) combine SVD - based matrix factorization with unstructured pruning , Wang et al .", "entities": [[4, 5, "DatasetName", "SVD"]]}, {"text": "( 2019 ) use structured pruning in order to reduce the rank .", "entities": []}, {"text": "Related to our approach , Kim and Awadalla ( 2020 ) and McCarley ( 2019 ) both apply structured pruning on the heads of the multi - head attention ( MHA ) and on the inner - layer nodes of the feed - forward network ( FFN ) .", "entities": [[25, 29, "MethodName", "multi - head attention"]]}, {"text": "The former uses prede\ufb01ned pruning ratios , shared across all layers , in order to select the modules to prune after sorting them given an importance score .", "entities": []}, {"text": "McCarley ( 2019 ) compares dif - ferent methods to compute the prunable module masks and \ufb01nd L0 regularization to perform the best .", "entities": []}, {"text": "3 Background Starting with a transformer model with parameters\u0012 , our goal is to produce a set of parameters \u00120that are both \ufb01ne - tuned for a speci\ufb01c end - task and smaller in such a way that inference can be ef\ufb01ciently computed on parallel hardware .", "entities": []}, {"text": "The two largest lines in the transformer parameter budget are the feed - forward network sublayer ( FFN ) and the multi - head attention sub - layer ( MHA ) .", "entities": [[21, 25, "MethodName", "multi - head attention"]]}, {"text": "The FFN parameters consist of two matrices ( W1andW2 ) of transposed shape Rdmodel\u0002d \u000b  andRd \u000b \u0002dmodel wheredmodel is the hidden size and d \u000b\u001d dmodel is the inner size .", "entities": []}, {"text": "These are used in the standard fashion by the network .", "entities": []}, {"text": "The MHA parameters consist of 4 projection matrices ( Wq , Wk , WvandWo ) of size Rdmodel\u0002dmodel ( query , key , value , out ) .", "entities": []}, {"text": "These are used to project the hidden vector to and from the component attention parts .", "entities": []}, {"text": "In implementations , this projection is made with the matrices in their folded tensor form Rnheads\u0002dmodel nheads\u0002dmodelwherenheads is the number of attention heads .", "entities": []}, {"text": "In standard \ufb01ne - tuning , starting from \u0012 , we optimize the lossL(for instance , cross - entropy for classi\ufb01cation ): arg min \u00120L(\u00120 ) Score - based pruning methods ( Ramanujan et al . , 2019 ) modify the model by introducing score parametersSfor each parameter iand replace the original parameter matrices with a masked version W0 = W \f M(S ) .", "entities": [[26, 27, "MetricName", "Score"]]}, {"text": "For instance , in the simplest version of magnitude pruning , the mask would just zero - out parameters with low absolute values .", "entities": []}, {"text": "Movement pruning ( Sanh et al . , 2020 ) is a scorebased pruning approach that encourages the model to optimize these score parameters .", "entities": [[0, 2, "MethodName", "Movement pruning"]]}, {"text": "Speci\ufb01cally , we focus on the soft - movement variant of movement pruning that sets M(S )", "entities": [[11, 13, "MethodName", "movement pruning"]]}, {"text": "= 1(S > \u001c ) for a threshold parameter \u001c , and optimizes a regularized objective , arg min \u00120;SL(\u00120 )", "entities": []}, {"text": "+ \u0015k\u001b(S)k where\u0015is a hyper - parameter , kAk = P i;jAi;j and\u001bis the sigmoid function .", "entities": []}, {"text": "10621This pruning objective encourages the model to \ufb01ne - tune the parameters while lowering the scores of unimportant parameters and thus encouraging more sparsity .", "entities": []}, {"text": "In order to train through the threshold , a straight - through estimator ( Bengio et al . , 2013 ) is used .", "entities": []}, {"text": "Movement pruning , combined with distillation , has shown to be a very effective method to reduce the number of parameters in an existing model yielding 94 % pruning in our tests for a F1 of 87.5 on SQuAD v1.1 ( BERT - base is 88.5 ) .", "entities": [[0, 2, "MethodName", "Movement pruning"], [18, 21, "HyperparameterName", "number of parameters"], [34, 35, "MetricName", "F1"], [38, 39, "DatasetName", "SQuAD"], [41, 42, "MethodName", "BERT"]]}, {"text": "This results in signi\ufb01cantly smaller models than distillation alone .", "entities": []}, {"text": "However , even with this sparsity level , the model is not substantially faster when run on most standard hardware that can not signi\ufb01cantly take advantage of this style of sparse matrix - vector product .", "entities": []}, {"text": "4 Model : Block Movement Pruning In this work , we extend movement pruning to work on blocks of local parameters .", "entities": [[4, 6, "MethodName", "Movement Pruning"], [12, 14, "MethodName", "movement pruning"]]}, {"text": "Speci\ufb01cally , each matrix in the transformer is partitioned into \ufb01xedsized blocks .", "entities": []}, {"text": "This setting goes beyond the arbitrary pruning of unstructured methods , with the goal of encouraging the data locality closer to what would be needed for ef\ufb01ciency.2 Our approach is extremely simple .", "entities": []}, {"text": "For each parameter matrix W2RM\u0002N , we assume a \ufb01xedsized block structure ( M0;N0 ) .", "entities": []}, {"text": "Each of these blocks acts as an individual group in the regularization with a shared score parameter derived from the corresponding score matrix S2RM = M0\u0002N = N0 .", "entities": []}, {"text": "Computing the masked weight is done by expanding the thresholded values , i.e. W0 i;j = Wi;j\u0003M(S)di = M0e;dj = N0e As in past work , this model is trained with distillation to match the performance of a teacher model .", "entities": []}, {"text": "Unlike other distillation approaches that require fully specifying the new model structure , our method only requires the size and shapes of the blocks , i.e. the set of ( M0;N0)for each parameter matrix in the model .", "entities": []}, {"text": "If blocks are too large , then they are dif\ufb01cult to prune , but if they are too small they do not support ef\ufb01cient inference .", "entities": []}, {"text": "2Linear algebra libraries perform matrix multiplication using large blocks , typically 128 * 64 .", "entities": []}, {"text": "At a micro level those machines are typically 32 ways SIMD , and memory is loaded by large contiguous chunks to maximize bandwidth .", "entities": []}, {"text": "Unstructured sparsity is hard to implement with dense algebra performance on GPUs .", "entities": []}, {"text": "Data locality is important on CPU too , but in a more limited way .", "entities": []}, {"text": "To reduce the search space , we will limit ourselves to test ( M0;N0)attand(M0;N0)ff : the same block size will be used for all layers for attention weights Wq , Wk , WvandWoon one hand , and for the feed - forward weights W1andW2on the other hand .", "entities": []}, {"text": "We split the movement pruning regularization term into : \u0015attk\u001b(Satt)k+\u0015 \u000b nk\u001b(S \u000b n)k", "entities": [[3, 5, "MethodName", "movement pruning"]]}, {"text": "This allows us to take into account the difference in terms of gradient received by the score parameters .", "entities": []}, {"text": "To reduce further the search space , we will test on two kinds of blocks : \u2022(32;32 ): square blocks ( Block ) \u2022(1;dmodel ) and(dmodel;1 ): dimension pruning on paired FFN rows and columns ( Dim ) These block sizes allow for ef\ufb01cient models : blocks of size at least ( 16;16)are ef\ufb01cient to compute with appropriate GPU kernels , whereas full rows , columns or heads can be entirely removed from the matrix : the remaining matrix is then dense .", "entities": []}, {"text": "We also include two additional baseline block types used to verify the approach : \u2022(2n;2n);n2[2;5 ] : smaller power of two square block sizes to study the impact of size on performance ( Block ) \u2022(dmodel nheads;dmodel ): for attention heads ( Heads )", "entities": []}, {"text": "The \ufb01rst considers small blocks , and the second considers very large functional blocks .", "entities": []}, {"text": "5 Experimental Setup We conduct experiments on \ufb01ve ( English ) tasks commonly used to evaluate pre - trained language models : question answering ( SQuAD v1.1 Rajpurkar et al . , 2016 ) and ( SQuAD v2 Rajpurkar et al . , 2018 ) , natural language inference ( MNLI Williams et al . , 2018 ) , sentence similarity ( QQP Chen et al . , 2018 ) , sentiment classi\ufb01cation ( SST2 Socher et al . , 2013 ) and abstractive summarization ( CNN / DailyMail Hermann et al . , 2015 ) .", "entities": [[22, 24, "TaskName", "question answering"], [25, 26, "DatasetName", "SQuAD"], [36, 37, "DatasetName", "SQuAD"], [46, 49, "TaskName", "natural language inference"], [50, 51, "DatasetName", "MNLI"], [62, 63, "DatasetName", "QQP"], [74, 75, "DatasetName", "SST2"], [84, 85, "TaskName", "summarization"]]}, {"text": "These datasets respectively contain 87k , 130k , 392k , 363k , 67k and 287k training examples , and are downloaded from the Hugging Face datasets hub .", "entities": []}, {"text": "SQuAD is formulated as a span - extraction task , MNLI and QQP are sentence pairs classi\ufb01cation tasks , SST-2 is a sentence classi\ufb01cation task and", "entities": [[0, 1, "DatasetName", "SQuAD"], [10, 11, "DatasetName", "MNLI"], [12, 13, "DatasetName", "QQP"], [19, 20, "DatasetName", "SST-2"]]}, {"text": "10622CNN / DailyMail ( \u201c CNN \u201d ) is formulated as a conditional generation task .", "entities": []}, {"text": "We report the performance on the development set as measured by the accuracy for MNLI and SST-2 , F1 for QQP , the exact match ( EM ) and F1 for SQuAD and ROUGE for CNN / DailyMail .", "entities": [[12, 13, "MetricName", "accuracy"], [14, 15, "DatasetName", "MNLI"], [16, 17, "DatasetName", "SST-2"], [18, 19, "MetricName", "F1"], [20, 21, "DatasetName", "QQP"], [23, 25, "MetricName", "exact match"], [26, 27, "MetricName", "EM"], [29, 30, "MetricName", "F1"], [31, 32, "DatasetName", "SQuAD"]]}, {"text": "We experiment with task - speci\ufb01c pruning of transformer language models .", "entities": []}, {"text": "We use BERT ( Devlin et al . , 2019 ) ( an encoder - only Transformer language model with 110 M parameters , among which 85 M are part of the linear layers present in the Transformer layers ) for sentence classi\ufb01cation and question answering ( 340 M and 227 M respectively for BERT - large ) , and BART ( Lewis et al . , 2020 ) ( an encoder - decoder language model with 139 M parameters , among which 99 M are part of the linear layers present in the Transformer layers ) for summarization ( 406 M and 353 M for BART - large ) .", "entities": [[2, 3, "MethodName", "BERT"], [16, 17, "MethodName", "Transformer"], [37, 38, "MethodName", "Transformer"], [44, 46, "TaskName", "question answering"], [54, 55, "MethodName", "BERT"], [60, 61, "MethodName", "BART"], [94, 95, "MethodName", "Transformer"], [98, 99, "TaskName", "summarization"], [106, 107, "MethodName", "BART"]]}, {"text": "We compare against several baselines .", "entities": []}, {"text": "Movement pruning is a fully unstructured approach and gives an upper bound on the sparsity trade - offs we hope to achieve , even if it provides little speed bene\ufb01t .", "entities": [[0, 2, "MethodName", "Movement pruning"]]}, {"text": "We also compare our results against state - ofthe - art approaches developed for fast inference of transformer - based language models .", "entities": []}, {"text": "DistilBERT ( Sanh et al . , 2019 ) is obtained by distilling through pre - training a pre - trained BERT into a smaller model .", "entities": [[0, 1, "MethodName", "DistilBERT"], [21, 22, "MethodName", "BERT"]]}, {"text": "TinyBERT ( Jiao et al . , 2019 ) distills a \ufb01netuned model while using data augmentation .", "entities": [[15, 17, "TaskName", "data augmentation"]]}, {"text": "MobileBERT ( Sun et al . , 2020 ) is the result of a large architecture search .", "entities": [[0, 1, "MethodName", "MobileBERT"]]}, {"text": "dBART ( Shleifer and Rush , 2020 ) is obtained by arbitrarily copying equally spaced layers of a large model to a smaller one .", "entities": []}, {"text": "To measure inference speed on GPU , we use a 24 GB 3090 RTX and an Intel i7 CPU , using a large batch size ( 128 ) for evaluation and using PyTorch CUDA timing primitives .", "entities": [[23, 25, "HyperparameterName", "batch size"]]}, {"text": "We measure the speed of other models in this same setup .", "entities": []}, {"text": "Results may be different from original papers , as latency and throughput characteristics are different for each platform .", "entities": []}, {"text": "We also provide the number of parameters in the linear layers of the Transformer layers for each of our models and for the reference ones : as the linear layers represent most of the FLOPS , this is a good proxy for the computation required and to some extent for the compute time , when the model characteristics are equivalent .", "entities": [[4, 7, "HyperparameterName", "number of parameters"], [13, 14, "MethodName", "Transformer"], [34, 35, "MetricName", "FLOPS"]]}, {"text": "Resources and Reproducibility We are using a minimal set of hyperparameters .", "entities": []}, {"text": "The ratio of \u0015attand\u0015 \u000b nis \ufb01xed by the relative sizes .", "entities": []}, {"text": "We performed a few experiments with differ - Method MHA FFN Teacher Block Block Block Base Hybrid Block Dim Base Hybrid", "entities": []}, {"text": "NT Heads Dim None Struct Heads Dim Base Hybrid Filled Heads Dim Base Hybrid Filled LT Heads Dim Large Table 1 : Summary of pruning methods .", "entities": []}, {"text": "Dim blocks correspond to row and column blocks for the FFN .", "entities": []}, {"text": "ent values \ufb01xed manually for these parameters , but their in\ufb02uence is minor .", "entities": []}, {"text": "The main hyperparameter is the number of training epochs .", "entities": []}, {"text": "For SQuAD v1.1 , we are using 20 epochs instead of typically 2 for BERT models .", "entities": [[1, 2, "DatasetName", "SQuAD"], [14, 15, "MethodName", "BERT"]]}, {"text": "This means a \ufb01ne - tuning is taking about 12h with our method instead of 45mn with a standard \ufb01netuning setup .", "entities": []}, {"text": "This number has to be large enough to let pruning happen slowly enough for a given task .", "entities": []}, {"text": "A warming up phase and a post - pruning cooldown phase are helpful , but their exact length has not a large impact on \ufb01nal performance .", "entities": []}, {"text": "We believe the training time is less important than the inference time for energy consideration , as inference is performed repeatedly .", "entities": []}, {"text": "Our method is optimizing inference by a large factor : the training energy is potentially recouped by a large margin with inference savings .", "entities": []}, {"text": "Finally , the checkpoints created during the experiments are available on an AWS S3 bucket , with their metadata and training parameters , totaling 3 TB of data , to facilitate reproduction of our results and to make it possible to study further the behavior of those models .", "entities": []}, {"text": "Code for experiments , analysis , and tools to prepare the present paper are available on GitHub ( see Appendix A ) .", "entities": []}, {"text": "Pruning Methods", "entities": []}, {"text": "The pruning approaches are shown in Table 1 .", "entities": []}, {"text": "Block pruning use square block sizes throughout all the linear layers , as an extension of the original movement pruning for which the block size is 1 .", "entities": [[18, 20, "MethodName", "movement pruning"]]}, {"text": "Hybrid pruning jointly removes hidden dimensions in feed - forward layers W1andW2 , using movement pruning to create the dimension mask .", "entities": [[14, 16, "MethodName", "movement pruning"]]}, {"text": "This corresponds to full rows or columns in the parameter matrices .", "entities": []}, {"text": "The pruned W0 1andW0 2can then be \" compacted \" to become fully dense :", "entities": []}, {"text": "we", "entities": []}, {"text": "10623perform dense operations on cropped matrices .", "entities": []}, {"text": "For the attention layers , pruning only some rows or columns in Wq , Wk , WvandWocan not be practically exploited .", "entities": [[2, 4, "HyperparameterName", "attention layers"]]}, {"text": "This is because the structure of the computation makes the additional cost of resizing the tensor inef\ufb01cient .", "entities": []}, {"text": "We , therefore , use square block pruning on the attention layer , with a block size of ( 32;32)which showed the best tradeoff between performance and accuracy .", "entities": [[27, 28, "MetricName", "accuracy"]]}, {"text": "Struct pruning uses the same methods for FFN layers but aims to remove model attention heads directly .", "entities": []}, {"text": "To do so , we choose a block size on attention that equals the head size while still using the same soft movement pruning strategy .", "entities": [[22, 24, "MethodName", "movement pruning"]]}, {"text": "For this approach , we use a \u0015attequals to 1=32 , as there are 32 times more parameters than in an attention block than in a feed - forward dimension .", "entities": []}, {"text": "When Block Pruning does not fully remove a component such as an attention head , as shown in Figure 1 , we can not speed up the model .", "entities": []}, {"text": "But we can reclaim some of the performance at no speed cost and at marginal cost on sparsity by making use of those zero weights .", "entities": []}, {"text": "Hybrid Filled pruning allows the model to reinitialize these reclaimed weights uniformly at random and continue \ufb01ne - tuning the smaller model for a few steps .", "entities": []}, {"text": "We also explore \" rewinding \" ( Frankle and Carbin , 2018 ) by identifying weights that should not be pruned ( because they are part of a non - empty attention head ) and re-\ufb01ne - pruning the pre - trained model : the \ufb01rst run marks the attention heads that were not pruned , and the second uses this information to create a positive mask of weights that are protected from pruning .", "entities": []}, {"text": "We did not \ufb01nd a signi\ufb01cant difference between the two methods .", "entities": []}, {"text": "The results presented here do not use rewinding .", "entities": []}, {"text": "6 Experiments Main Results We begin by observing the highlevel impact of the different pruning methods .", "entities": []}, {"text": "Figure 1 shows the effect on attention and feedforward layers for the different block pruning methods .", "entities": []}, {"text": "We \ufb01nd that all the different block sizes learn to prune out entire dimensions in the FFN layers .", "entities": []}, {"text": "Interestingly we \ufb01nd that the block methods can also learn to remove entire heads from the MHA .", "entities": []}, {"text": "This pruning pattern makes it possible to remove entire heads from the model during inference .", "entities": []}, {"text": "For this reason , we focus on the Hybrid approach as our main method , which can both eliminate feed - Block Hybrid Hybrid Filled Attention Feed - forward Figure 1 : Pruning patterns on SQuAD v1.1 : blue is preserved , pink is pruned .", "entities": [[35, 36, "DatasetName", "SQuAD"]]}, {"text": "Attention heads are delimited for clarity .", "entities": []}, {"text": "forward dimensions while using blocks to remove attention heads gradually .", "entities": []}, {"text": "Results on SQuAD are shown in Figure 2 , which compares our approach for speed and density to baseline BERT - Base tuned models such as TinyBERT-6 and DistilBERT ( MobileBERT is discussed below ) .", "entities": [[2, 3, "DatasetName", "SQuAD"], [19, 20, "MethodName", "BERT"], [28, 29, "MethodName", "DistilBERT"], [30, 31, "MethodName", "MobileBERT"]]}, {"text": "The main result is that the Hybrid Pruning model is as fast as the baseline and approaches the same accuracy while at the same time producing signi\ufb01cantly smaller models in terms of density .", "entities": [[19, 20, "MetricName", "accuracy"]]}, {"text": "Moving to the Hybrid Filled model leads to a further gain in speed at a small cost in model density .", "entities": []}, {"text": "For instance , for the same F1 performance of 87.5 , Hybrid Filled models display a 2.5x speedup against 1.88 for TinyBERT .", "entities": [[6, 7, "MetricName", "F1"]]}, {"text": "TinyBERT and DistilBERT have 50 % of BERT \u2019s encoder parameters , whereas Hybrid Filled models have 25 % BERT parameters for the same level of accuracy .", "entities": [[2, 3, "MethodName", "DistilBERT"], [7, 8, "MethodName", "BERT"], [19, 20, "MethodName", "BERT"], [26, 27, "MetricName", "accuracy"]]}, {"text": "The \ufb01gures also include two intrinsic baselines : our reimplementation of Movement pruning and pure Block pruning .", "entities": [[11, 13, "MethodName", "Movement pruning"]]}, {"text": "We \ufb01nd that our implementation of Movement pruning is highly effective at producing sparse models ( even leading to a small increase in accuracy ) but does not produce signi\ufb01cant speedups .", "entities": [[6, 8, "MethodName", "Movement pruning"], [23, 24, "MetricName", "accuracy"]]}, {"text": "Square Block pruning does better , but not as well as hybrid blocks .", "entities": []}, {"text": "Table 2 gives a full comparison of models with different compression rates .", "entities": []}, {"text": "As linear layers represent a very large part of the \ufb02ops of a transformer model , this compression rate is actually a good measure of the maximum achievable speedup .", "entities": []}, {"text": "This number is much higher than the actually measured speedup .", "entities": []}, {"text": "This indicates that our setup for measur-", "entities": []}, {"text": "10624 1.00 1.25 1.50 1.75 2.00 2.25 2.50 2.75 Speedup84858687888990F1BERT DistilBERTTinyBERT6MobileBERT Movement Block HybridHybrid Filled Hybrid Filled LT 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 Density84858687888990F1 DistilBERTTinyBERT6MobileBERT Movement Block HybridHybrid Filled Hybrid Filled LT BERT - base ( F1 = 88.5)Figure 2 : Comparison on SQuAD v1.1 of model F1 against speed and density ( BERT - base reference ) .", "entities": [[35, 36, "MethodName", "BERT"], [39, 40, "MetricName", "F1"], [46, 47, "DatasetName", "SQuAD"], [50, 51, "MetricName", "F1"], [56, 57, "MethodName", "BERT"]]}, {"text": "For each pruning method the pruned model is BERT - base , but different regularization values give different \ufb01nal sparsity levels .", "entities": [[8, 9, "MethodName", "BERT"]]}, {"text": "This translates into a tradeoff curve between accuracy and speedup speci\ufb01c to the method .", "entities": [[7, 8, "MetricName", "accuracy"]]}, {"text": "Distilled networks ( Mobile|Tiny|Distil)BERT are given as references .", "entities": []}, {"text": "The higher the curve , the most accurate the model is for a given speed .", "entities": []}, {"text": "Model Size Compr .", "entities": []}, {"text": "Speed F1 EM BERT 85 M 1.00 1.00 88.5 80.8 TinyBERT 42 M 2.00 1.88 87.5 79.7 DistilBERT 42 M 2.00 2.06 86.9 79.1 Hybrid Filled 30 M 2.76 1.84 88.7 81.7 Hybrid Filled 21 M 3.94 2.25 87.7 80.2 Hybrid 20 M 4.09 1.97 88.07 80.6 Hybrid Filled 16 M 5.17 2.69 86.8 78.8", "entities": [[1, 2, "MetricName", "F1"], [2, 3, "MetricName", "EM"], [3, 4, "MethodName", "BERT"], [17, 18, "MethodName", "DistilBERT"]]}, {"text": "Hybrid 15 M 5.44 2.26 87.15 79.4 Hybrid 14 M 5.91 2.24 86.51 78.7 Struct 14 M 6.25 3.36 85.9 78.0 Hybrid 12 M 6.63 2.61 86.41 78.3 Hybrid 10 M 7.82 2.70 86.12 77.8 MobileBERT 21 M 4.00 1.61 90.0 82.9 Hybrid Filled LT 38 M 2.20 1.56 90.3 83.7 Hybrid Filled LT 20 M 4.21 2.31 88.3 81.2 Hybrid Filled LT 16 M 5.08 2.62 87.2 79.5 Table 2 : SQuAD v1.1 pruned models with base / large teacher : Encoder Linear Parameters Count , Compression rate and Speed gain relative to BERT - base , F1 and Exact Match .", "entities": [[35, 36, "MethodName", "MobileBERT"], [72, 73, "DatasetName", "SQuAD"], [94, 95, "MethodName", "BERT"], [98, 99, "MetricName", "F1"], [100, 102, "MetricName", "Exact Match"]]}, {"text": "LT stands for Large Teacher .", "entities": []}, {"text": "ing speed may underestimate the actual speedup one could obtain with those pruned models with specialized implementations .", "entities": []}, {"text": "Hybrid Filled reaches a 2.25x speedup under minimal loss in accuracy .", "entities": [[8, 9, "MetricName", "loss"], [10, 11, "MetricName", "accuracy"]]}, {"text": "Struct pruning targeting MHA blocks directly can be even faster but leads to a stronger degradation in accuracy .", "entities": [[17, 18, "MetricName", "accuracy"]]}, {"text": "Table 3 shows the comparison between TinyBERT and a Hybrid pruned model of the same speed on several others tasks .", "entities": []}, {"text": "Hybrid Pruning performs better on SQuAD v1.1 , and approaches Tiny - Model SQuAD v1.1 MNLI QQP SST-2 F1 / EM Acc ( m / mm ) F1", "entities": [[5, 6, "DatasetName", "SQuAD"], [13, 14, "DatasetName", "SQuAD"], [15, 16, "DatasetName", "MNLI"], [16, 17, "DatasetName", "QQP"], [17, 18, "DatasetName", "SST-2"], [18, 19, "MetricName", "F1"], [20, 21, "MetricName", "EM"], [21, 22, "MetricName", "Acc"], [27, 28, "MetricName", "F1"]]}, {"text": "Acc TinyBERT 87.5/79.7 84.6/83.2 88.0 93.0 Hybrid 88.1/80.6 83.2/ 83.6 87.9 91.2 Table 3 : Hybrid pruning / TinyBERT cross - task performance comparison .", "entities": [[0, 1, "MetricName", "Acc"]]}, {"text": "Speed is at least TinyBERT speed ( 1.88x BERT - base ) for all networks and signi\ufb01cantly sparser .", "entities": [[8, 9, "MethodName", "BERT"]]}, {"text": "BERT performance on other tasks .", "entities": [[0, 1, "MethodName", "BERT"]]}, {"text": "Comparison with MobileBERT All methods can be improved further using a larger teacher model .", "entities": [[2, 3, "MethodName", "MobileBERT"]]}, {"text": "For these experiments , we compare with MobileBERT , which uses a BERT - large teacher and reaches an F1 of 90.0 on SQuAD v1.1 on its fastest version .", "entities": [[7, 8, "MethodName", "MobileBERT"], [12, 13, "MethodName", "BERT"], [19, 20, "MetricName", "F1"], [23, 24, "DatasetName", "SQuAD"]]}, {"text": "It should be noted that MobileBERT makes use of additional optimizations not present in the original BERT - large we are using : LayerNorms are replaced by purely linear NoNorms , and GeLUs are replaced by ReLUs .", "entities": [[5, 6, "MethodName", "MobileBERT"], [16, 17, "MethodName", "BERT"]]}, {"text": "For these experiments , we use a BERT - large teacher to perform meaningful comparisons , using our best method Hybrid Filled .", "entities": [[7, 8, "MethodName", "BERT"]]}, {"text": "Figure 2 shows that we have comparable results on SQuAD v1.1 , with a simpler optimization approach : we get a slightly better model ( F1=90.3 ) for the same speedup of 1.6x , and we get a speedup of 2.2x at BERT - base accuracy ( F1=88.5 ) .", "entities": [[9, 10, "DatasetName", "SQuAD"], [42, 43, "MethodName", "BERT"], [45, 46, "MetricName", "accuracy"]]}, {"text": "We observe that using a large teacher is bene\ufb01cial even at high levels of pruning : up to 80 % of sparsity , the resulting student model has better accuracy for the", "entities": [[29, 30, "MetricName", "accuracy"]]}, {"text": "10625same number of parameters when using a BERTlarge teacher instead of a base one .", "entities": [[1, 4, "HyperparameterName", "number of parameters"]]}, {"text": "This trend reverses after this point : a larger teacher is detrimental to accuracy when the student is very heavily pruned .", "entities": [[13, 14, "MetricName", "accuracy"]]}, {"text": "Encoder - Decoder Finally , we apply these methods to two encoder - decoder architectures , BARTbase and BART - large for the task of summarization .", "entities": [[18, 19, "MethodName", "BART"], [25, 26, "TaskName", "summarization"]]}, {"text": "For these architectures , the decoder parameters are responsible for a majority of the computational costs , so these are our main focus .", "entities": []}, {"text": "V oita et", "entities": []}, {"text": "al .", "entities": []}, {"text": "( 2019 ) observed that for machine translation models , encoder heads were much easier to prune than decoder ones .", "entities": [[6, 8, "TaskName", "machine translation"]]}, {"text": "We found similar results , e.g. for identical\u0015attand\u0015 \u000b n , the encoder was systematically more pruned than the decoder , for both MHA and FFN sub - layers .", "entities": []}, {"text": "In order to increase speedup gain , we applied twice as much weight on the decoder compression , which resulted in even pruning ratios among the encoder and decoder .", "entities": []}, {"text": "Table 4 shows the main results .", "entities": []}, {"text": "We see that Hybrid pruning leads to large decoder compression ratios ( 3.4 on BART - base and 3.5 BART - large ) with only a small drop in ROUGE score .", "entities": [[14, 15, "MethodName", "BART"], [19, 20, "MethodName", "BART"]]}, {"text": "Speedups reach 1.4 times of the original speed .", "entities": []}, {"text": "( Given the large decoder compression rates , we would expect larger speedups to be possible with further engineering of the inference . )", "entities": []}, {"text": "There is less comparable work for pre - trained encoder - decoders .", "entities": []}, {"text": "We compare our approach with a distillation - based approach dBART ( Shleifer and Rush , 2020 ) .", "entities": []}, {"text": "This approach yields a similar speedup gain with a smaller drop in performance but less sparsity .", "entities": []}, {"text": "For models of comparable sizes ( 158 M for our Hybrid NT vs 176 M for dBART6 - 6 ) , we observe a drop of 0.7 in R2 and 0.4 in RL against 0.9 in R2 and 1.3 in RL for dBART6 - 6 .", "entities": []}, {"text": "As with encoder - only models , the two approaches could likely be combined to yield even faster , smaller models.3 7 Analysis Large Model Pruning To test that this approach scales to large models , we apply Hybrid pruning on BERT - large on SQuAD v1.1 .", "entities": [[41, 42, "MethodName", "BERT"], [45, 46, "DatasetName", "SQuAD"]]}, {"text": "We observe similar results : a 18 % dense BERT - large has a F1 of 90.2 , with a speedup of 3.2x compared to BERT - large with a F1 of 93.2 .", "entities": [[9, 10, "MethodName", "BERT"], [14, 15, "MetricName", "F1"], [25, 26, "MethodName", "BERT"], [30, 31, "MetricName", "F1"]]}, {"text": "This pruned model is actually 3Distillation methods for text generation require generating pseudo - labels , a different process which is signi\ufb01cantly slower than BERT distillation .", "entities": [[8, 10, "TaskName", "text generation"], [24, 25, "MethodName", "BERT"]]}, {"text": "Model Size DCp Speed R1 R2 RL BART - large 353 M 1.0 1.00 44.8 21.7 41.8 Hybrid NT 158 M 2.0 - 44.3 21.0 41.4 Hybrid NT 108 M 2.8 1.38 43.5 20.3 40.6 Hybrid NT 82 M 3.5 1.39 42.7 19.6 39.9 BART - largey353 M 1.0 1.00 - 21.1 40.9 dBART-12 - 6y252 M 2.0 1.44 - 21.2 41.0 dBART-6 - 6y176 M 2.0 1.46 - 20.2 39.6 dBART-12 - 3y201 M 4.0 1.66 - 20.6 40.3 BART - base 99 M 1.0 1.00 43.4 20.4 40.4 Hybrid NT 35 M 2.6 1.19 42.2 19.4 39.2 Hybrid NT 23 M 3.4 1.35 41.4 18.7 38.4 Table 4 : BART pruned models \ufb01ne - tuned on CNN : encoder - decoder linear parameters count , Decoder compression rate ( DCp ) and Speed gain ( one forward prediction ) relative to BART - large / base , dev ROUGE scores.ydenotes test ROUGE scores taken from Shleifer and Rush ( 2020 ) .", "entities": [[7, 8, "MethodName", "BART"], [44, 45, "MethodName", "BART"], [80, 81, "MethodName", "BART"], [111, 112, "MethodName", "BART"], [143, 144, "MethodName", "BART"]]}, {"text": "NT stands for No Teacher .", "entities": []}, {"text": "Model Size Compr .", "entities": []}, {"text": "Speed F1 EM SQuAD v1.1 BERT - large 227 M 1.00 1.0 93.2 86.9 BERT - base 85 M 2.66 3.1 88.5 80.8 Hybrid 54 M 4.16 2.9 91.0 84.6 Hybrid 41 M 5.59 3.2 90.2 83.7 SQuAD v2 BERT - large 227 M 1.00 1.0 85.8 82.8 StructuredQA 57 M 4.00 \u2013 81.5 \u2013 Hybrid 38 M 5.88 \u2013 82.6 79.7 Table 5 : BERT - large SQuAD pruned models .", "entities": [[1, 2, "MetricName", "F1"], [2, 3, "MetricName", "EM"], [3, 4, "DatasetName", "SQuAD"], [5, 6, "MethodName", "BERT"], [14, 15, "MethodName", "BERT"], [37, 38, "DatasetName", "SQuAD"], [39, 40, "MethodName", "BERT"], [65, 66, "MethodName", "BERT"], [68, 69, "DatasetName", "SQuAD"]]}, {"text": "Reference speed is BERT - large .", "entities": [[3, 4, "MethodName", "BERT"]]}, {"text": "faster than a BERT - base model ( Table 5 ) .", "entities": [[3, 4, "MethodName", "BERT"]]}, {"text": "We can compare Hybrid Pruning of SQuAD v2 BERT - large models with the results of the structured pruning method described in McCarley ( 2019 ) .", "entities": [[6, 7, "DatasetName", "SQuAD"], [8, 9, "MethodName", "BERT"]]}, {"text": "For a 17 % dense model , we obtain a F1 of 82.6 , whereas structured pruning gets a 25 % dense model with a F1 of 81.5 .", "entities": [[10, 11, "MetricName", "F1"], [25, 26, "MetricName", "F1"]]}, {"text": "This result is in line with Li et", "entities": []}, {"text": "al .", "entities": []}, {"text": "( 2020 ): the larger the model , the more pruning is effective .", "entities": []}, {"text": "When pruning a larger model , the \ufb01nal model is actually better than a smaller one with the same absolute number of parameters .", "entities": [[20, 23, "HyperparameterName", "number of parameters"]]}, {"text": "Block Size In\ufb02uence Figure 3 shows the impact of different block sizes on Block pruning : pruning is done on attention layers and FFNs with the same square block size , from ( 4;4)to(32;32 ) , with a BERT - base teacher .", "entities": [[20, 22, "HyperparameterName", "attention layers"], [38, 39, "MethodName", "BERT"]]}, {"text": "We can see that we reach the", "entities": []}, {"text": "10626 1.0 1.2 1.4 1.6 1.8 2.0 2.2 2.4 Speedup858687888990F1BERT DistilBERTTinyBERT6MobileBERTMovement", "entities": []}, {"text": "Block", "entities": []}, {"text": "Size=32 Block Size=16 Block Size=8 Block Size=4Figure 3 : SQuAD v1.1 with Block Pruning :", "entities": [[9, 10, "DatasetName", "SQuAD"]]}, {"text": "In\ufb02uence of block size on F1 .", "entities": [[5, 6, "MetricName", "F1"]]}, {"text": "BERT - base original F1 for all block sizes from 4 to 32 , but with a speedup that increases with the block size .", "entities": [[0, 1, "MethodName", "BERT"], [4, 5, "MetricName", "F1"]]}, {"text": "The maximum reachable speedup without F1 drop is 1.3 for a block size of 32 .", "entities": [[5, 6, "MetricName", "F1"]]}, {"text": "But when some drop of F1 is allowed , the speedup increases quickly with the block size and plateau when reaching 16 .", "entities": [[5, 6, "MetricName", "F1"]]}, {"text": "We then reach a speedup of 1.75 for an F1 drop of 2 % and a block size of 32 .", "entities": [[9, 10, "MetricName", "F1"]]}, {"text": "We also note that , with the original Movement Pruning method , we see some speedup due to full dimension pruning .", "entities": [[8, 10, "MethodName", "Movement Pruning"]]}, {"text": "This likely comes from our improved set of hyper - parameters ( compared to the original paper ) , allowing us to remove some empty rows and columns in the FFN layers .", "entities": []}, {"text": "However we see that using blocks leads to a signi\ufb01cant speed improvement compared to Movement Pruning .", "entities": [[14, 16, "MethodName", "Movement Pruning"]]}, {"text": "Quantization Quantization is often of critical importance for practical applications .", "entities": [[0, 1, "TaskName", "Quantization"], [1, 2, "TaskName", "Quantization"]]}, {"text": "We , therefore , wanted to check that our networks could be subjected to quantization without signi\ufb01cant loss of accuracy , especially when considering the issues that could arise with the high level of sparsity of some FFNs .", "entities": [[14, 15, "TaskName", "quantization"], [17, 18, "MetricName", "loss"], [19, 20, "MetricName", "accuracy"]]}, {"text": "Table 6 shows the results of full 8 - bit quantization tests on our models .", "entities": [[10, 11, "TaskName", "quantization"]]}, {"text": "These indicate that the method is compatible with quantization , and the models using quantization on top of our pruning method achieve very high gains in terms of size ( as well as speed ) .", "entities": [[8, 9, "TaskName", "quantization"], [14, 15, "TaskName", "quantization"]]}, {"text": "Impact of Distillation We report experimental results with the addition of a teacher distillation step as previous work showed this boosts movement pruning at little cost .", "entities": [[21, 23, "MethodName", "movement pruning"]]}, {"text": "In this section , we conduct an ablation study to evaluate the impact of distillation using a BERT - base teacher .", "entities": [[17, 18, "MethodName", "BERT"]]}, {"text": "Model Compress EM F1 BERT - base 1.0 80.8 88.5 Hybrid 3.3 80.2 87.8 + quantization 13.3 77.8 86.3 Table 6 : Results of pruned BERT - base on SQuAD v1.1 dev Exact Match and F1 score with 8 - bit quantization .", "entities": [[2, 3, "MetricName", "EM"], [3, 4, "MetricName", "F1"], [4, 5, "MethodName", "BERT"], [15, 16, "TaskName", "quantization"], [25, 26, "MethodName", "BERT"], [29, 30, "DatasetName", "SQuAD"], [32, 34, "MetricName", "Exact Match"], [35, 37, "MetricName", "F1 score"], [41, 42, "TaskName", "quantization"]]}, {"text": "Dataset Size Hybrid Hybrid NT QQP 24 M 87.61 87.17 21 M 87.14 87.00 10 M 86.82 86.27 SST-2 70 M 93.23 92.20 42 M 91.97 90.71 18 M 90.60 89.79 Table 7 : Distillation ablation study of BERT - base on QQP and SST-2 dev of a BERT - base teacher .", "entities": [[5, 6, "DatasetName", "QQP"], [18, 19, "DatasetName", "SST-2"], [38, 39, "MethodName", "BERT"], [42, 43, "DatasetName", "QQP"], [44, 45, "DatasetName", "SST-2"], [48, 49, "MethodName", "BERT"]]}, {"text": "F1 and accuracy scores reported for QQP and SST-2 respectively .", "entities": [[0, 1, "MetricName", "F1"], [2, 3, "MetricName", "accuracy"], [6, 7, "DatasetName", "QQP"], [8, 9, "DatasetName", "SST-2"]]}, {"text": "NT stands for No Teacher .", "entities": []}, {"text": "As shown in Table 7 , combining hybrid pruning with distillation always performs better than pruning alone , but that it is not critical for the approach to work .", "entities": []}, {"text": "The distillation effect is larger for smaller datasets such as SST-2 , which are prone to over-\ufb01tting .", "entities": [[10, 11, "DatasetName", "SST-2"]]}, {"text": "We believe that the regularization brought by pruning and distillation counters over\ufb01tting caused by the additional number of steps needed for pruning .", "entities": []}, {"text": "8", "entities": []}, {"text": "Conclusion We have shown that we can extract small pruned models that are at an equivalent or better than distilled networks .", "entities": []}, {"text": "This approach can be done during \ufb01ne - tuning and not pre - training .", "entities": []}, {"text": "The method does not resort to techniques such as data augmentation or architecture search , and it works on a diverse set of tasks and base models .", "entities": [[9, 11, "TaskName", "data augmentation"]]}, {"text": "As better and larger models are published at an increasing pace , we can rely on a simple and robust method to accelerate them on speci\ufb01c tasks without sacri\ufb01cing accuracy and distribute these models easily while keeping most of the original model accuracy .", "entities": [[29, 30, "MetricName", "accuracy"], [42, 43, "MetricName", "accuracy"]]}, {"text": "9 Impact We expect the method presented here to contribute to the reduction of the compute resources and energy needed to perform natural language tasks , while preserving the original model performance .", "entities": []}, {"text": "It will contribute additionally to alleviating privacy", "entities": []}, {"text": "10627concerns : smaller models running on user devices instead of server - side allow more information to stay private .", "entities": []}, {"text": "This is especially relevant when considering the large anticipated demand for such NLP applications in the near future .", "entities": []}, {"text": "9.1 Acknowledgements The authors would like to thank the anonymous reviewers , the Hugging Face team for the support , Nvidia for providing us some hardware for evaluation , and \ufb01nally the open - source community for the numerous tools which made this research possible .", "entities": []}, {"text": "References Yoshua Bengio , Nicholas L\u00e9onard , and Aaron C. Courville .", "entities": []}, {"text": "2013 .", "entities": []}, {"text": "Estimating or propagating gradients through stochastic neurons for conditional computation .", "entities": []}, {"text": "CoRR , abs/1308.3432 .", "entities": []}, {"text": "Zihan Chen , Hongbo Zhang , Xiaoji Zhang , and Leqi Zhao .", "entities": []}, {"text": "2018 .", "entities": []}, {"text": "Quora question pairs .", "entities": [[0, 3, "DatasetName", "Quora question pairs"]]}, {"text": "University of Waterloo .", "entities": []}, {"text": "Jacob Devlin , Ming - Wei Chang , Kenton Lee , and Kristina Toutanova . 2019 .", "entities": []}, {"text": "BERT : pre - training of deep bidirectional transformers for language understanding .", "entities": [[0, 1, "MethodName", "BERT"]]}, {"text": "In Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics : Human Language Technologies , NAACL - HLT 2019 , Minneapolis , MN , USA , June 2 - 7 , 2019 , Volume 1 ( Long and Short Papers ) , pages 4171\u20134186 .", "entities": []}, {"text": "Association for Computational Linguistics .", "entities": []}, {"text": "Angela Fan , Edouard Grave , and Armand Joulin .", "entities": []}, {"text": "2020 .", "entities": []}, {"text": "Reducing transformer depth on demand with structured dropout .", "entities": []}, {"text": "In 8th International Conference on Learning Representations , ICLR 2020 , Addis Ababa , Ethiopia , April 26 - 30 , 2020 .", "entities": []}, {"text": "OpenReview.net .", "entities": []}, {"text": "Jonathan Frankle and Michael Carbin .", "entities": []}, {"text": "2018 .", "entities": []}, {"text": "The lottery ticket hypothesis : Training pruned neural networks .", "entities": []}, {"text": "CoRR , abs/1803.03635 .", "entities": []}, {"text": "Mitchell A. Gordon , Kevin Duh , and Nicholas Andrews .", "entities": []}, {"text": "2020 .", "entities": []}, {"text": "Compressing BERT : studying the effects of weight pruning on transfer learning .", "entities": [[1, 2, "MethodName", "BERT"], [10, 12, "TaskName", "transfer learning"]]}, {"text": "CoRR , abs/2002.08307 .", "entities": []}, {"text": "Demi Guo , Alexander M. Rush , and Yoon Kim .", "entities": []}, {"text": "2020 .", "entities": []}, {"text": "Parameter - ef\ufb01cient transfer learning with diff pruning .", "entities": [[3, 5, "TaskName", "transfer learning"]]}, {"text": "CoRR , abs/2012.07463 .", "entities": []}, {"text": "Song Han , Jeff Pool , John Tran , and William J. Dally . 2015 .", "entities": []}, {"text": "Learning both weights and connections for ef\ufb01cient neural networks .", "entities": []}, {"text": "CoRR , abs/1506.02626 .", "entities": []}, {"text": "Karl Moritz Hermann , Tom\u00e1s Kocisk\u00fd , Edward Grefenstette , Lasse Espeholt , Will Kay , Mustafa Suleyman , and Phil Blunsom .", "entities": []}, {"text": "2015 .", "entities": []}, {"text": "Teaching machines toread and comprehend .", "entities": []}, {"text": "In Advances in Neural Information Processing Systems 28 : Annual Conference on Neural Information Processing Systems 2015 , December 7 - 12 , 2015 , Montreal , Quebec , Canada , pages 1693\u20131701 .", "entities": []}, {"text": "Geoffrey E. Hinton , Oriol Vinyals , and Jeffrey Dean . 2015 .", "entities": []}, {"text": "Distilling the knowledge in a neural network .", "entities": []}, {"text": "CoRR , abs/1503.02531 .", "entities": []}, {"text": "Xiaoqi Jiao , Yichun Yin , Lifeng Shang , Xin Jiang , Xiao Chen , Linlin Li , Fang Wang , and Qun Liu . 2019 .", "entities": []}, {"text": "Tinybert : Distilling BERT for natural language understanding .", "entities": [[3, 4, "MethodName", "BERT"], [5, 8, "TaskName", "natural language understanding"]]}, {"text": "CoRR , abs/1909.10351 .", "entities": []}, {"text": "Armand Joulin , Edouard Grave , Piotr Bojanowski , Matthijs Douze , Herv\u00e9 J\u00e9gou , and Tom\u00e1s Mikolov .", "entities": []}, {"text": "2016 .", "entities": []}, {"text": "Fasttext.zip : Compressing text classi\ufb01cation models .", "entities": []}, {"text": "CoRR , abs/1612.03651 .", "entities": []}, {"text": "Young Jin Kim and Hany Hassan Awadalla .", "entities": []}, {"text": "2020 .", "entities": []}, {"text": "Fastformers : Highly ef\ufb01cient transformer models for natural language understanding .", "entities": [[7, 10, "TaskName", "natural language understanding"]]}, {"text": "Yann LeCun , John S. Denker , and Sara A. Solla .", "entities": []}, {"text": "1989 .", "entities": []}, {"text": "Optimal brain damage .", "entities": []}, {"text": "In Advances in Neural Information Processing Systems 2 , [ NIPS Conference , Denver , Colorado , USA , November 27 - 30 , 1989 ] , pages 598\u2013605 .", "entities": []}, {"text": "Morgan Kaufmann .", "entities": []}, {"text": "Mike Lewis , Yinhan Liu , Naman Goyal , Marjan Ghazvininejad , Abdelrahman Mohamed , Omer Levy , Veselin Stoyanov , and Luke Zettlemoyer .", "entities": []}, {"text": "2020 .", "entities": []}, {"text": "BART : denoising sequence - to - sequence pretraining for natural language generation , translation , and comprehension .", "entities": [[0, 1, "MethodName", "BART"], [2, 3, "TaskName", "denoising"]]}, {"text": "In Proceedings of the 58th Annual Meeting of the Association for Computational Linguistics , ACL 2020 , Online , July 5 - 10 , 2020 , pages 7871\u20137880 .", "entities": []}, {"text": "Association for Computational Linguistics .", "entities": []}, {"text": "Zhuohan Li , Eric Wallace , Sheng Shen , Kevin Lin , Kurt Keutzer , Dan Klein , and Joseph E. Gonzalez . 2020 .", "entities": []}, {"text": "Train large , then compress : Rethinking model size for ef\ufb01cient training and inference of transformers .", "entities": []}, {"text": "CoRR , abs/2002.11794 .", "entities": []}, {"text": "Christos Louizos , Max Welling , and Diederik P. Kingma .", "entities": []}, {"text": "2018 .", "entities": []}, {"text": "Learning sparse neural networks through l_0 regularization .", "entities": []}, {"text": "In 6th International Conference on Learning Representations , ICLR 2018 , Vancouver , BC , Canada , April 30 - May 3 , 2018 , Conference Track Proceedings .", "entities": []}, {"text": "OpenReview.net .", "entities": []}, {"text": "Yihuan Mao , Yujing Wang , Chufan Wu , Chen Zhang , Yang Wang , Yaming Yang , Quanlu Zhang , Yunhai Tong , and Jing Bai . 2020 .", "entities": []}, {"text": "Ladabert :", "entities": []}, {"text": "Lightweight adaptation of BERT through hybrid model compression .", "entities": [[3, 4, "MethodName", "BERT"], [6, 8, "TaskName", "model compression"]]}, {"text": "CoRR , abs/2004.04124 .", "entities": []}, {"text": "J. S. McCarley .", "entities": []}, {"text": "2019 .", "entities": []}, {"text": "Structured pruning of a bert - based question answering model .", "entities": [[7, 9, "TaskName", "question answering"]]}, {"text": "CoRR , abs/1910.06360 .", "entities": []}, {"text": "Paul Michel , Omer Levy , and Graham Neubig . 2019 .", "entities": []}, {"text": "Are sixteen heads really better than one ?", "entities": []}, {"text": "CoRR , abs/1905.10650 .", "entities": []}, {"text": "10628Kenton Murray and David Chiang . 2015 .", "entities": []}, {"text": "Autosizing neural networks : With applications to ngram language models .", "entities": []}, {"text": "In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing , EMNLP 2015 , Lisbon , Portugal , September 17 - 21 , 2015 , pages 908\u2013916 .", "entities": []}, {"text": "The Association for Computational Linguistics .", "entities": []}, {"text": "Pranav Rajpurkar , Robin Jia , and Percy Liang .", "entities": []}, {"text": "2018 .", "entities": []}, {"text": "Know what you do n\u2019t know : Unanswerable questions for squad .", "entities": []}, {"text": "In Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics , ACL 2018 , Melbourne , Australia , July 1520 , 2018 , Volume 2 : Short Papers , pages 784\u2013789 .", "entities": []}, {"text": "Association for Computational Linguistics .", "entities": []}, {"text": "Pranav Rajpurkar , Jian Zhang , Konstantin Lopyrev , and Percy Liang .", "entities": []}, {"text": "2016 .", "entities": []}, {"text": "Squad : 100 , 000 + questions for machine comprehension of text .", "entities": []}, {"text": "In Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing , EMNLP 2016 , Austin , Texas , USA , November 1 - 4 , 2016 , pages 2383\u20132392 .", "entities": [[19, 20, "DatasetName", "Texas"]]}, {"text": "The Association for Computational Linguistics .", "entities": []}, {"text": "Vivek Ramanujan , Mitchell Wortsman , Aniruddha Kembhavi , Ali Farhadi , and Mohammad Rastegari .", "entities": []}, {"text": "2019 .", "entities": []}, {"text": "What \u2019s hidden in a randomly weighted neural network ?", "entities": []}, {"text": "CoRR , abs/1911.13299 .", "entities": []}, {"text": "Corby Rosset .", "entities": []}, {"text": "2020 .", "entities": []}, {"text": "Turing - nlg : A 17 - billionparameter language model by microsoft .", "entities": []}, {"text": "Microsoft Research Blog , 2:13 .", "entities": []}, {"text": "Hassan Sajjad , Fahim Dalvi , Nadir Durrani , and Preslav Nakov .", "entities": []}, {"text": "2020 .", "entities": []}, {"text": "Poor man \u2019s BERT : smaller and faster transformer models .", "entities": [[3, 4, "MethodName", "BERT"]]}, {"text": "CoRR , abs/2004.03844 .", "entities": []}, {"text": "Victor Sanh , Lysandre Debut , Julien Chaumond , and Thomas Wolf .", "entities": []}, {"text": "2019 .", "entities": []}, {"text": "Distilbert , a distilled version of BERT : smaller , faster , cheaper and lighter .", "entities": [[0, 1, "MethodName", "Distilbert"], [6, 7, "MethodName", "BERT"]]}, {"text": "CoRR , abs/1910.01108 .", "entities": []}, {"text": "Victor Sanh , Thomas Wolf , and Alexander M. Rush .", "entities": []}, {"text": "2020 .", "entities": []}, {"text": "Movement pruning : Adaptive sparsity by \ufb01netuning .", "entities": [[0, 2, "MethodName", "Movement pruning"]]}, {"text": "CoRR , abs/2005.07683 .", "entities": []}, {"text": "Abigail See , Minh - Thang Luong , and Christopher D. Manning .", "entities": []}, {"text": "2016 .", "entities": []}, {"text": "Compression of neural machine translation models via pruning .", "entities": [[3, 5, "TaskName", "machine translation"]]}, {"text": "In Proceedings of the 20th SIGNLL Conference on Computational Natural Language Learning , CoNLL 2016 , Berlin , Germany , August 11 - 12 , 2016 , pages 291\u2013301 .", "entities": []}, {"text": "ACL .", "entities": []}, {"text": "Sam Shleifer and Alexander M. Rush .", "entities": []}, {"text": "2020 .", "entities": []}, {"text": "Pre - trained summarization distillation .", "entities": [[3, 4, "TaskName", "summarization"]]}, {"text": "CoRR , abs/2010.13002 .", "entities": []}, {"text": "Richard Socher , Alex Perelygin , Jean Wu , Jason Chuang , Christopher D. Manning , Andrew Y .", "entities": []}, {"text": "Ng , and Christopher Potts .", "entities": []}, {"text": "2013 .", "entities": []}, {"text": "Recursive deep models for semantic compositionality over a sentiment treebank .", "entities": []}, {"text": "In Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing , EMNLP 2013 , 18 - 21 October 2013 , Grand Hyatt Seattle , Seattle , Washington , USA , A meeting ofSIGDAT , a Special Interest Group of the ACL , pages 1631\u20131642 .", "entities": []}, {"text": "ACL .", "entities": []}, {"text": "Siqi Sun , Yu Cheng , Zhe Gan , and Jingjing Liu .", "entities": []}, {"text": "2019 .", "entities": []}, {"text": "Patient knowledge distillation for BERT model compression .", "entities": [[1, 3, "MethodName", "knowledge distillation"], [4, 5, "MethodName", "BERT"], [5, 7, "TaskName", "model compression"]]}, {"text": "In Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natural Language Processing , EMNLP - IJCNLP 2019 , Hong Kong , China , November 3 - 7 , 2019 , pages 4322\u20134331 .", "entities": []}, {"text": "Association for Computational Linguistics .", "entities": []}, {"text": "Zhiqing Sun , Hongkun Yu , Xiaodan Song , Renjie Liu , Yiming Yang , and Denny Zhou .", "entities": []}, {"text": "2020 .", "entities": []}, {"text": "Mobilebert : a compact task - agnostic BERT for resource - limited devices .", "entities": [[0, 1, "MethodName", "Mobilebert"], [7, 8, "MethodName", "BERT"]]}, {"text": "CoRR , abs/2004.02984 .", "entities": []}, {"text": "Raphael Tang , Yao Lu , Linqing Liu , Lili Mou , Olga Vechtomova , and Jimmy Lin .", "entities": []}, {"text": "2019 .", "entities": []}, {"text": "Distilling taskspeci\ufb01c knowledge from BERT into simple neural networks .", "entities": [[4, 5, "MethodName", "BERT"]]}, {"text": "CoRR , abs/1903.12136 .", "entities": []}, {"text": "Iulia Turc , Ming - Wei Chang , Kenton Lee , and Kristina Toutanova . 2019 .", "entities": []}, {"text": "Well - read students learn better : The impact of student initialization on knowledge distillation .", "entities": [[13, 15, "MethodName", "knowledge distillation"]]}, {"text": "CoRR , abs/1908.08962 .", "entities": []}, {"text": "Elena V oita , David Talbot , Fedor Moiseev , Rico Sennrich , and Ivan Titov .", "entities": []}, {"text": "2019 .", "entities": []}, {"text": "Analyzing multi - head self - attention : Specialized heads do the heavy lifting , the rest can be pruned .", "entities": []}, {"text": "CoRR , abs/1905.09418 .", "entities": []}, {"text": "Ziheng Wang , Jeremy Wohlwend , and Tao Lei . 2019 .", "entities": []}, {"text": "Structured pruning of large language models .", "entities": []}, {"text": "CoRR , abs/1910.04732 .", "entities": []}, {"text": "Adina Williams , Nikita Nangia , and Samuel R. Bowman .", "entities": []}, {"text": "2018 .", "entities": []}, {"text": "A broad - coverage challenge corpus for sentence understanding through inference .", "entities": []}, {"text": "In Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguistics : Human Language Technologies , NAACL - HLT 2018 , New Orleans , Louisiana , USA , June 1 - 6 , 2018 , Volume 1 ( Long Papers ) , pages 1112\u20131122 . Association for Computational Linguistics .", "entities": []}, {"text": "10629A Reproducibility & Hyper - Parameters Code The complete code to run the experiments , analyze the results and \ufb01nally create the \ufb01gures and tables in this paper is available on the Hugging Face nn_pruning repository , at https://github.com/huggingface/nn_pruning .", "entities": []}, {"text": "Hyperparameters The hyperparameters of the experiments are available as JSON \ufb01les ( one \ufb01le per task ) in the same repository : each entry contains all the information to \ufb01ne - tune and prune the model , its evaluation results , and detailed statistics about its \ufb01nal sparsity .", "entities": []}, {"text": "For example , the SQuAD V1 checkpoints referenced in this paper are listed with the hyperparameters and related information .", "entities": [[4, 5, "DatasetName", "SQuAD"]]}, {"text": "Checkpoints Some of the models we produced during this research can be used directly from the Hugging Face model hub .", "entities": [[17, 19, "TaskName", "Face model"]]}, {"text": "The other models and the checkpoints , including the intermediary ones that were saved during training , are available on Amazon S3 .", "entities": []}, {"text": "B Additional Data Block Shape & Head pruning We show here the effect of the pattern on the head number reduction : using block instead of row / column pruning leads to a much larger number of pruned heads while improving accuracy , here on the SST-2 task .", "entities": [[41, 42, "MetricName", "accuracy"], [46, 47, "DatasetName", "SST-2"]]}, {"text": "We are using Block Movement pruning for each model , with different block patterns , pruning only the attention layers .", "entities": [[4, 6, "MethodName", "Movement pruning"], [18, 20, "HyperparameterName", "attention layers"]]}, {"text": "Compression measures the reduction of the number of non - zero parameters in attention linear layers , whereas head compression measures the reduction of the number of complete non - zero heads .", "entities": []}, {"text": "Pattern Compr .", "entities": []}, {"text": "Heads Head Compr .", "entities": []}, {"text": "Accur .", "entities": []}, {"text": "BERT base 1x 144 1x 92.7 Rows / Cols 8.6x 86 1.7x 90.6 Block 32 4.7x 54 2.7x 91.1 Block 64 3.5x 51 2.8x 92.0 Table 8 : Head pruning method comparison on SST-2Pruning Methods Comparison We select speed as our main metric to compare with other techniques , as it is the major practical measure of inference ef\ufb01ciency .", "entities": [[0, 1, "MethodName", "BERT"]]}, {"text": "On this metric , we decided to compare our models to the best models available i.e. the distilled models ( MobileBERT , TinyBERT ) , even though the method is different , as they are the strongest \" speed / accuracy \" baseline available .", "entities": [[20, 21, "MethodName", "MobileBERT"], [40, 41, "MetricName", "accuracy"]]}, {"text": "In Table 9 we compare Wang et al .", "entities": []}, {"text": "( 2019 ) with TinyBERT ( Jiao et al . , 2019 ) and MobileBERT ( Sun et al . , 2020 ) .", "entities": [[14, 15, "MethodName", "MobileBERT"]]}, {"text": "Method Speed SST2 MRPC STS - B QNLI Wang et", "entities": [[2, 3, "DatasetName", "SST2"], [3, 4, "DatasetName", "MRPC"], [4, 7, "DatasetName", "STS - B"], [7, 8, "DatasetName", "QNLI"]]}, {"text": "al .", "entities": []}, {"text": "< 1.5x 92.09 88.61 88.18 89.05 TinyBERT 2x 93.1 87.3 83.7 90.4 MobileBERT 4x 92.8 88.8 84.4 90.6 Table 9 : Distillation / Structured Pruning Comparison", "entities": [[12, 13, "MethodName", "MobileBERT"]]}, {"text": "We compare as well to Hybrid pruning , with and without a teacher , with the unstructured methods from Sanh et al .", "entities": []}, {"text": "( 2020 ) ( the original Movement Pruning method we are using ) and Gordon et al .", "entities": [[6, 8, "MethodName", "Movement Pruning"]]}, {"text": "( 2020 ) , and with Sajjad", "entities": []}, {"text": "et al .", "entities": []}, {"text": "( 2020 ) ( dropping full layers ) , in Table 10 .", "entities": []}, {"text": "Model Spd", "entities": []}, {"text": "Cp MNLI QQP SST-2 ( m / mm ) F1 / Acc Acc BERT base 1 1 84.5/85.1 88.1/91.1 92.7", "entities": [[1, 2, "DatasetName", "MNLI"], [2, 3, "DatasetName", "QQP"], [3, 4, "DatasetName", "SST-2"], [9, 10, "MetricName", "F1"], [11, 12, "MetricName", "Acc"], [12, 13, "MetricName", "Acc"], [13, 14, "MethodName", "BERT"]]}, {"text": "Mvmt NT \u0018110 80.7/81.1 87.1/90.5 Hybrid NT 3.5 10 79.4/79.9 86.0/89.3 87.0 Mvmt \u0018110 81.2/81.8 86.8/90.2 Hybrid 3.5 10 80.4/81.1 86.4/89.8 89.7 Hybrid NT 3 4.5 81.7/81.8 87.0/90.3 89.8 Hybrid 3 4.5 82.7/82.8 87.4/90.6", "entities": []}, {"text": "90.6 Sajjad < 2 2 81.1/ - - /90.4 90.3 Gordon - 2 82.6/- - /90.3 90.8 Hybrid NT 1.6 2 83.2/83.3 87.2/90.4 90.7 Hybrid 1.6 2 83.7/84.1 88.3/91.3 92.0 Table 10 : Pruning Methods Comparison .", "entities": []}, {"text": "Mvmt is Movement Pruning Sanh et al .", "entities": [[2, 4, "MethodName", "Movement Pruning"]]}, {"text": "( 2020 ) , Sajjad is Sajjad et al .", "entities": []}, {"text": "( 2020 ) , Gordon is Gordon et al .", "entities": []}, {"text": "( 2020 ) .", "entities": []}, {"text": "NT is for No Teacher .", "entities": []}, {"text": "Spd is speed multiplier , Cp is for parameters compression rate .", "entities": []}]